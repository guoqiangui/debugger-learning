diff --git a/node_modules/react/LICENSE b/node_modules/react/LICENSE
index b93be90..b96dcb0 100644
--- a/node_modules/react/LICENSE
+++ b/node_modules/react/LICENSE
@@ -1,6 +1,6 @@
 MIT License
 
-Copyright (c) Meta Platforms, Inc. and affiliates.
+Copyright (c) Facebook, Inc. and its affiliates.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff --git a/node_modules/react/README.md b/node_modules/react/README.md
index 20a855e..a4aa151 100644
--- a/node_modules/react/README.md
+++ b/node_modules/react/README.md
@@ -30,8 +30,8 @@ root.render(<Counter />);
 
 ## Documentation
 
-See https://react.dev/
+See https://reactjs.org/
 
 ## API
 
-See https://react.dev/reference/react
+See https://reactjs.org/docs/react-api.html
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.development.js b/node_modules/react/cjs/react-jsx-dev-runtime.development.js
index 14dc145..b91f638 100644
--- a/node_modules/react/cjs/react-jsx-dev-runtime.development.js
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.development.js
@@ -1,349 +1,1296 @@
-/**
- * @license React
- * react-jsx-dev-runtime.development.js
- *
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+var REACT_ELEMENT_TYPE = Symbol.for('react.element');
+var REACT_PORTAL_TYPE = Symbol.for('react.portal');
+var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+var REACT_CONTEXT_TYPE = Symbol.for('react.context');
+var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+var REACT_MEMO_TYPE = Symbol.for('react.memo');
+var REACT_LAZY_TYPE = Symbol.for('react.lazy');
+var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+var REACT_CACHE_TYPE = Symbol.for('react.cache');
+var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+function error(format) {
+  {
+    {
+      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
+        args[_key2 - 1] = arguments[_key2];
+      }
+
+      printWarning('error', format, args);
+    }
+  }
+}
+
+function printWarning(level, format, args) {
+  // When changing this logic, you might want to also
+  // update consoleWithStackDev.www.js as well.
+  {
+    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+    var stack = ReactDebugCurrentFrame.getStackAddendum();
+
+    if (stack !== '') {
+      format += '%s';
+      args = args.concat([stack]);
+    } // eslint-disable-next-line react-internal/safe-string-coercion
+
+
+    var argsWithFormat = args.map(function (item) {
+      return String(item);
+    }); // Careful: RN currently depends on this prefix
+
+    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
+    // breaks IE9: https://github.com/facebook/react/issues/13610
+    // eslint-disable-next-line react-internal/no-production-logging
+
+    Function.prototype.apply.call(console[level], console, argsWithFormat);
+  }
+}
+
+// -----------------------------------------------------------------------------
+
+var enableScopeAPI = false; // Experimental Create Event Handle API.
+var enableTransitionTracing = false; // No known bugs, but needs performance testing
+
+var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
+// stuff. Intended to enable React core members to more easily debug scheduling
+// issues in DEV builds.
+
+var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
+
+var REACT_MODULE_REFERENCE;
+
+{
+  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
+}
+
+function isValidElementType(type) {
+  if (typeof type === 'string' || typeof type === 'function') {
+    return true;
+  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
+
+
+  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  ||  type === REACT_CACHE_TYPE || enableTransitionTracing ) {
+    return true;
+  }
+
+  if (typeof type === 'object' && type !== null) {
+    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
+    // types supported by any Flight configuration anywhere since
+    // we don't know which Flight build this will end up being used
+    // with.
+    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
+      return true;
+    }
+  }
+
+  return false;
+}
+
+function getWrappedName(outerType, innerType, wrapperName) {
+  var displayName = outerType.displayName;
+
+  if (displayName) {
+    return displayName;
+  }
+
+  var functionName = innerType.displayName || innerType.name || '';
+  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
+} // Keep in sync with react-reconciler/getComponentNameFromFiber
+
+
+function getContextName(type) {
+  return type.displayName || 'Context';
+} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
+
+
+function getComponentNameFromType(type) {
+  if (type == null) {
+    // Host root, text node or just invalid type.
+    return null;
+  }
+
+  {
+    if (typeof type.tag === 'number') {
+      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
+    }
+  }
+
+  if (typeof type === 'function') {
+    return type.displayName || type.name || null;
+  }
+
+  if (typeof type === 'string') {
+    return type;
+  }
+
+  switch (type) {
+    case REACT_FRAGMENT_TYPE:
+      return 'Fragment';
 
-"use strict";
-"production" !== process.env.NODE_ENV &&
-  (function () {
-    function getComponentNameFromType(type) {
-      if (null == type) return null;
-      if ("function" === typeof type)
-        return type.$$typeof === REACT_CLIENT_REFERENCE
-          ? null
-          : type.displayName || type.name || null;
-      if ("string" === typeof type) return type;
-      switch (type) {
-        case REACT_FRAGMENT_TYPE:
-          return "Fragment";
-        case REACT_PROFILER_TYPE:
-          return "Profiler";
-        case REACT_STRICT_MODE_TYPE:
-          return "StrictMode";
-        case REACT_SUSPENSE_TYPE:
-          return "Suspense";
-        case REACT_SUSPENSE_LIST_TYPE:
-          return "SuspenseList";
-        case REACT_ACTIVITY_TYPE:
-          return "Activity";
+    case REACT_PORTAL_TYPE:
+      return 'Portal';
+
+    case REACT_PROFILER_TYPE:
+      return 'Profiler';
+
+    case REACT_STRICT_MODE_TYPE:
+      return 'StrictMode';
+
+    case REACT_SUSPENSE_TYPE:
+      return 'Suspense';
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return 'SuspenseList';
+
+    case REACT_CACHE_TYPE:
+      {
+        return 'Cache';
       }
-      if ("object" === typeof type)
-        switch (
-          ("number" === typeof type.tag &&
-            console.error(
-              "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
-            ),
-          type.$$typeof)
-        ) {
-          case REACT_PORTAL_TYPE:
-            return "Portal";
-          case REACT_CONTEXT_TYPE:
-            return (type.displayName || "Context") + ".Provider";
-          case REACT_CONSUMER_TYPE:
-            return (type._context.displayName || "Context") + ".Consumer";
-          case REACT_FORWARD_REF_TYPE:
-            var innerType = type.render;
-            type = type.displayName;
-            type ||
-              ((type = innerType.displayName || innerType.name || ""),
-              (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
-            return type;
-          case REACT_MEMO_TYPE:
-            return (
-              (innerType = type.displayName || null),
-              null !== innerType
-                ? innerType
-                : getComponentNameFromType(type.type) || "Memo"
-            );
-          case REACT_LAZY_TYPE:
-            innerType = type._payload;
-            type = type._init;
-            try {
-              return getComponentNameFromType(type(innerType));
-            } catch (x) {}
+
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_CONTEXT_TYPE:
+        var context = type;
+        return getContextName(context) + '.Consumer';
+
+      case REACT_PROVIDER_TYPE:
+        var provider = type;
+        return getContextName(provider._context) + '.Provider';
+
+      case REACT_FORWARD_REF_TYPE:
+        return getWrappedName(type, type.render, 'ForwardRef');
+
+      case REACT_MEMO_TYPE:
+        var outerName = type.displayName || null;
+
+        if (outerName !== null) {
+          return outerName;
         }
-      return null;
+
+        return getComponentNameFromType(type.type) || 'Memo';
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            return getComponentNameFromType(init(payload));
+          } catch (x) {
+            return null;
+          }
+        }
+
+      case REACT_SERVER_CONTEXT_TYPE:
+        {
+          var context2 = type;
+          return (context2.displayName || context2._globalName) + '.Provider';
+        }
+
+      // eslint-disable-next-line no-fallthrough
+    }
+  }
+
+  return null;
+}
+
+var assign = Object.assign;
+
+// Helpers to patch console.logs to avoid logging during side-effect free
+// replaying on render function. This currently only patches the object
+// lazily which won't cover if the log function was extracted eagerly.
+// We could also eagerly patch the method.
+var disabledDepth = 0;
+var prevLog;
+var prevInfo;
+var prevWarn;
+var prevError;
+var prevGroup;
+var prevGroupCollapsed;
+var prevGroupEnd;
+
+function disabledLog() {}
+
+disabledLog.__reactDisabledLog = true;
+function disableLogs() {
+  {
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      prevLog = console.log;
+      prevInfo = console.info;
+      prevWarn = console.warn;
+      prevError = console.error;
+      prevGroup = console.group;
+      prevGroupCollapsed = console.groupCollapsed;
+      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
+
+      var props = {
+        configurable: true,
+        enumerable: true,
+        value: disabledLog,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        info: props,
+        log: props,
+        warn: props,
+        error: props,
+        group: props,
+        groupCollapsed: props,
+        groupEnd: props
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    disabledDepth++;
+  }
+}
+function reenableLogs() {
+  {
+    disabledDepth--;
+
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      var props = {
+        configurable: true,
+        enumerable: true,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        log: assign({}, props, {
+          value: prevLog
+        }),
+        info: assign({}, props, {
+          value: prevInfo
+        }),
+        warn: assign({}, props, {
+          value: prevWarn
+        }),
+        error: assign({}, props, {
+          value: prevError
+        }),
+        group: assign({}, props, {
+          value: prevGroup
+        }),
+        groupCollapsed: assign({}, props, {
+          value: prevGroupCollapsed
+        }),
+        groupEnd: assign({}, props, {
+          value: prevGroupEnd
+        })
+      });
+      /* eslint-enable react-internal/no-production-logging */
     }
-    function testStringCoercion(value) {
-      return "" + value;
+
+    if (disabledDepth < 0) {
+      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
     }
-    function checkKeyStringCoercion(value) {
+  }
+}
+
+var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+var prefix;
+function describeBuiltInComponentFrame(name, source, ownerFn) {
+  {
+    if (prefix === undefined) {
+      // Extract the VM specific prefix used by each line.
       try {
-        testStringCoercion(value);
-        var JSCompiler_inline_result = !1;
-      } catch (e) {
-        JSCompiler_inline_result = !0;
-      }
-      if (JSCompiler_inline_result) {
-        JSCompiler_inline_result = console;
-        var JSCompiler_temp_const = JSCompiler_inline_result.error;
-        var JSCompiler_inline_result$jscomp$0 =
-          ("function" === typeof Symbol &&
-            Symbol.toStringTag &&
-            value[Symbol.toStringTag]) ||
-          value.constructor.name ||
-          "Object";
-        JSCompiler_temp_const.call(
-          JSCompiler_inline_result,
-          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
-          JSCompiler_inline_result$jscomp$0
-        );
-        return testStringCoercion(value);
+        throw Error();
+      } catch (x) {
+        var match = x.stack.trim().match(/\n( *(at )?)/);
+        prefix = match && match[1] || '';
       }
+    } // We use the prefix to ensure our stacks line up with native stack frames.
+
+
+    return '\n' + prefix + name;
+  }
+}
+var reentry = false;
+var componentFrameCache;
+
+{
+  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
+  componentFrameCache = new PossiblyWeakMap();
+}
+
+function describeNativeComponentFrame(fn, construct) {
+  // If something asked for a stack inside a fake render, it should get ignored.
+  if ( !fn || reentry) {
+    return '';
+  }
+
+  {
+    var frame = componentFrameCache.get(fn);
+
+    if (frame !== undefined) {
+      return frame;
     }
-    function getTaskName(type) {
-      if (type === REACT_FRAGMENT_TYPE) return "<>";
-      if (
-        "object" === typeof type &&
-        null !== type &&
-        type.$$typeof === REACT_LAZY_TYPE
-      )
-        return "<...>";
+  }
+
+  var control;
+  reentry = true;
+  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
+
+  Error.prepareStackTrace = undefined;
+  var previousDispatcher;
+
+  {
+    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
+    // for warnings.
+
+    ReactCurrentDispatcher.current = null;
+    disableLogs();
+  }
+
+  try {
+    // This should throw.
+    if (construct) {
+      // Something should be setting the props in the constructor.
+      var Fake = function () {
+        throw Error();
+      }; // $FlowFixMe
+
+
+      Object.defineProperty(Fake.prototype, 'props', {
+        set: function () {
+          // We use a throwing setter instead of frozen or non-writable props
+          // because that won't throw in a non-strict mode function.
+          throw Error();
+        }
+      });
+
+      if (typeof Reflect === 'object' && Reflect.construct) {
+        // We construct a different control for this case to include any extra
+        // frames added by the construct call.
+        try {
+          Reflect.construct(Fake, []);
+        } catch (x) {
+          control = x;
+        }
+
+        Reflect.construct(fn, [], Fake);
+      } else {
+        try {
+          Fake.call();
+        } catch (x) {
+          control = x;
+        }
+
+        fn.call(Fake.prototype);
+      }
+    } else {
       try {
-        var name = getComponentNameFromType(type);
-        return name ? "<" + name + ">" : "<...>";
+        throw Error();
       } catch (x) {
-        return "<...>";
+        control = x;
+      } // TODO(luna): This will currently only throw if the function component
+      // tries to access React/ReactDOM/props. We should probably make this throw
+      // in simple components too
+
+
+      fn();
+    }
+  } catch (sample) {
+    // This is inlined manually because closure doesn't do it for us.
+    if (sample && control && typeof sample.stack === 'string') {
+      // This extracts the first frame from the sample that isn't also in the control.
+      // Skipping one frame that we assume is the frame that calls the two.
+      var sampleLines = sample.stack.split('\n');
+      var controlLines = control.stack.split('\n');
+      var s = sampleLines.length - 1;
+      var c = controlLines.length - 1;
+
+      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
+        // We expect at least one stack frame to be shared.
+        // Typically this will be the root most one. However, stack frames may be
+        // cut off due to maximum stack limits. In this case, one maybe cut off
+        // earlier than the other. We assume that the sample is longer or the same
+        // and there for cut off earlier. So we should find the root most frame in
+        // the sample somewhere in the control.
+        c--;
+      }
+
+      for (; s >= 1 && c >= 0; s--, c--) {
+        // Next we find the first one that isn't the same which should be the
+        // frame that called our sample function and the control.
+        if (sampleLines[s] !== controlLines[c]) {
+          // In V8, the first line is describing the message but other VMs don't.
+          // If we're about to return the first line, and the control is also on the same
+          // line, that's a pretty good indicator that our sample threw at same line as
+          // the control. I.e. before we entered the sample frame. So we ignore this result.
+          // This can happen if you passed a class to function component, or non-function.
+          if (s !== 1 || c !== 1) {
+            do {
+              s--;
+              c--; // We may still have similar intermediate frames from the construct call.
+              // The next one that isn't the same should be our match though.
+
+              if (c < 0 || sampleLines[s] !== controlLines[c]) {
+                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
+                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
+                // but we have a user-provided "displayName"
+                // splice it in to make the stack more readable.
+
+
+                if (fn.displayName && _frame.includes('<anonymous>')) {
+                  _frame = _frame.replace('<anonymous>', fn.displayName);
+                }
+
+                {
+                  if (typeof fn === 'function') {
+                    componentFrameCache.set(fn, _frame);
+                  }
+                } // Return the line we found.
+
+
+                return _frame;
+              }
+            } while (s >= 1 && c >= 0);
+          }
+
+          break;
+        }
       }
     }
-    function getOwner() {
-      var dispatcher = ReactSharedInternals.A;
-      return null === dispatcher ? null : dispatcher.getOwner();
+  } finally {
+    reentry = false;
+
+    {
+      ReactCurrentDispatcher.current = previousDispatcher;
+      reenableLogs();
+    }
+
+    Error.prepareStackTrace = previousPrepareStackTrace;
+  } // Fallback to just using the name if we couldn't make it throw.
+
+
+  var name = fn ? fn.displayName || fn.name : '';
+  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
+
+  {
+    if (typeof fn === 'function') {
+      componentFrameCache.set(fn, syntheticFrame);
     }
-    function UnknownOwner() {
-      return Error("react-stack-top-frame");
+  }
+
+  return syntheticFrame;
+}
+function describeFunctionComponentFrame(fn, source, ownerFn) {
+  {
+    return describeNativeComponentFrame(fn, false);
+  }
+}
+
+function shouldConstruct(Component) {
+  var prototype = Component.prototype;
+  return !!(prototype && prototype.isReactComponent);
+}
+
+function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
+
+  if (type == null) {
+    return '';
+  }
+
+  if (typeof type === 'function') {
+    {
+      return describeNativeComponentFrame(type, shouldConstruct(type));
     }
-    function hasValidKey(config) {
-      if (hasOwnProperty.call(config, "key")) {
-        var getter = Object.getOwnPropertyDescriptor(config, "key").get;
-        if (getter && getter.isReactWarning) return !1;
+  }
+
+  if (typeof type === 'string') {
+    return describeBuiltInComponentFrame(type);
+  }
+
+  switch (type) {
+    case REACT_SUSPENSE_TYPE:
+      return describeBuiltInComponentFrame('Suspense');
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return describeBuiltInComponentFrame('SuspenseList');
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_FORWARD_REF_TYPE:
+        return describeFunctionComponentFrame(type.render);
+
+      case REACT_MEMO_TYPE:
+        // Memo may contain any component type so we recursively resolve it.
+        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            // Lazy may contain any component type so we recursively resolve it.
+            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
+          } catch (x) {}
+        }
+    }
+  }
+
+  return '';
+}
+
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+var loggedTypeFailures = {};
+var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame.setExtraStackFrame(null);
+    }
+  }
+}
+
+function checkPropTypes(typeSpecs, values, location, componentName, element) {
+  {
+    // $FlowFixMe This is okay but Flow doesn't know it.
+    var has = Function.call.bind(hasOwnProperty);
+
+    for (var typeSpecName in typeSpecs) {
+      if (has(typeSpecs, typeSpecName)) {
+        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
+        // fail the render phase where it didn't fail before. So we log it.
+        // After these have been cleaned up, we'll let them throw.
+
+        try {
+          // This is intentionally an invariant that gets caught. It's the same
+          // behavior as without this statement except with a better message.
+          if (typeof typeSpecs[typeSpecName] !== 'function') {
+            // eslint-disable-next-line react-internal/prod-error-codes
+            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
+            err.name = 'Invariant Violation';
+            throw err;
+          }
+
+          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
+        } catch (ex) {
+          error$1 = ex;
+        }
+
+        if (error$1 && !(error$1 instanceof Error)) {
+          setCurrentlyValidatingElement(element);
+
+          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
+
+          setCurrentlyValidatingElement(null);
+        }
+
+        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
+          // Only monitor this failure once because there tends to be a lot of the
+          // same error.
+          loggedTypeFailures[error$1.message] = true;
+          setCurrentlyValidatingElement(element);
+
+          error('Failed %s type: %s', location, error$1.message);
+
+          setCurrentlyValidatingElement(null);
+        }
       }
-      return void 0 !== config.key;
-    }
-    function defineKeyPropWarningGetter(props, displayName) {
-      function warnAboutAccessingKey() {
-        specialPropKeyWarningShown ||
-          ((specialPropKeyWarningShown = !0),
-          console.error(
-            "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)",
-            displayName
-          ));
+    }
+  }
+}
+
+var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+/*
+ * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
+ * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
+ *
+ * The functions in this module will throw an easier-to-understand,
+ * easier-to-debug exception with a clear errors message message explaining the
+ * problem. (Instead of a confusing exception thrown inside the implementation
+ * of the `value` object).
+ */
+// $FlowFixMe only called in DEV, so void return is not possible.
+function typeName(value) {
+  {
+    // toStringTag is needed for namespaced types like Temporal.Instant
+    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
+    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
+    return type;
+  }
+} // $FlowFixMe only called in DEV, so void return is not possible.
+
+
+function willCoercionThrow(value) {
+  {
+    try {
+      testStringCoercion(value);
+      return false;
+    } catch (e) {
+      return true;
+    }
+  }
+}
+
+function testStringCoercion(value) {
+  // If you ended up here by following an exception call stack, here's what's
+  // happened: you supplied an object or symbol value to React (as a prop, key,
+  // DOM attribute, CSS property, string ref, etc.) and when React tried to
+  // coerce it to a string using `'' + value`, an exception was thrown.
+  //
+  // The most common types that will cause this exception are `Symbol` instances
+  // and Temporal objects like `Temporal.Instant`. But any object that has a
+  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
+  // exception. (Library authors do this to prevent users from using built-in
+  // numeric operators like `+` or comparison operators like `>=` because custom
+  // methods are needed to perform accurate arithmetic or comparison.)
+  //
+  // To fix the problem, coerce this object or symbol value to a string before
+  // passing it to React. The most reliable way is usually `String(value)`.
+  //
+  // To find which value is throwing, check the browser or debugger console.
+  // Before this exception was thrown, there should be `console.error` output
+  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
+  // problem and how that type was used: key, atrribute, input value prop, etc.
+  // In most cases, this console output also shows the component and its
+  // ancestor components where the exception happened.
+  //
+  // eslint-disable-next-line react-internal/safe-string-coercion
+  return '' + value;
+}
+function checkKeyStringCoercion(value) {
+  {
+    if (willCoercionThrow(value)) {
+      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
+
+      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
+    }
+  }
+}
+
+var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+var RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+var specialPropKeyWarningShown;
+var specialPropRefWarningShown;
+var didWarnAboutStringRefs;
+
+{
+  didWarnAboutStringRefs = {};
+}
+
+function hasValidRef(config) {
+  {
+    if (hasOwnProperty.call(config, 'ref')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
       }
-      warnAboutAccessingKey.isReactWarning = !0;
-      Object.defineProperty(props, "key", {
-        get: warnAboutAccessingKey,
-        configurable: !0
-      });
     }
-    function elementRefGetterWithDeprecationWarning() {
-      var componentName = getComponentNameFromType(this.type);
-      didWarnAboutElementRef[componentName] ||
-        ((didWarnAboutElementRef[componentName] = !0),
-        console.error(
-          "Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."
-        ));
-      componentName = this.props.ref;
-      return void 0 !== componentName ? componentName : null;
-    }
-    function ReactElement(
-      type,
-      key,
-      self,
-      source,
-      owner,
-      props,
-      debugStack,
-      debugTask
-    ) {
-      self = props.ref;
-      type = {
-        $$typeof: REACT_ELEMENT_TYPE,
-        type: type,
-        key: key,
-        props: props,
-        _owner: owner
-      };
-      null !== (void 0 !== self ? self : null)
-        ? Object.defineProperty(type, "ref", {
-            enumerable: !1,
-            get: elementRefGetterWithDeprecationWarning
-          })
-        : Object.defineProperty(type, "ref", { enumerable: !1, value: null });
-      type._store = {};
-      Object.defineProperty(type._store, "validated", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: 0
-      });
-      Object.defineProperty(type, "_debugInfo", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: null
-      });
-      Object.defineProperty(type, "_debugStack", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugStack
-      });
-      Object.defineProperty(type, "_debugTask", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugTask
-      });
-      Object.freeze && (Object.freeze(type.props), Object.freeze(type));
-      return type;
-    }
-    function jsxDEVImpl(
-      type,
-      config,
-      maybeKey,
-      isStaticChildren,
-      source,
-      self,
-      debugStack,
-      debugTask
-    ) {
-      var children = config.children;
-      if (void 0 !== children)
-        if (isStaticChildren)
-          if (isArrayImpl(children)) {
-            for (
-              isStaticChildren = 0;
-              isStaticChildren < children.length;
-              isStaticChildren++
-            )
-              validateChildKeys(children[isStaticChildren]);
-            Object.freeze && Object.freeze(children);
-          } else
-            console.error(
-              "React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead."
-            );
-        else validateChildKeys(children);
-      if (hasOwnProperty.call(config, "key")) {
-        children = getComponentNameFromType(type);
-        var keys = Object.keys(config).filter(function (k) {
-          return "key" !== k;
-        });
-        isStaticChildren =
-          0 < keys.length
-            ? "{key: someKey, " + keys.join(": ..., ") + ": ...}"
-            : "{key: someKey}";
-        didWarnAboutKeySpread[children + isStaticChildren] ||
-          ((keys =
-            0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}"),
-          console.error(
-            'A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />',
-            isStaticChildren,
-            children,
-            keys,
-            children
-          ),
-          (didWarnAboutKeySpread[children + isStaticChildren] = !0));
+  }
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+  {
+    if (hasOwnProperty.call(config, 'key')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
       }
-      children = null;
-      void 0 !== maybeKey &&
-        (checkKeyStringCoercion(maybeKey), (children = "" + maybeKey));
-      hasValidKey(config) &&
-        (checkKeyStringCoercion(config.key), (children = "" + config.key));
-      if ("key" in config) {
-        maybeKey = {};
-        for (var propName in config)
-          "key" !== propName && (maybeKey[propName] = config[propName]);
-      } else maybeKey = config;
-      children &&
-        defineKeyPropWarningGetter(
-          maybeKey,
-          "function" === typeof type
-            ? type.displayName || type.name || "Unknown"
-            : type
-        );
-      return ReactElement(
-        type,
-        children,
-        self,
-        source,
-        getOwner(),
-        maybeKey,
-        debugStack,
-        debugTask
-      );
-    }
-    function validateChildKeys(node) {
-      "object" === typeof node &&
-        null !== node &&
-        node.$$typeof === REACT_ELEMENT_TYPE &&
-        node._store &&
-        (node._store.validated = 1);
-    }
-    var React = require("react"),
-      REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
-      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
-      REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
-      REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
-      REACT_PROFILER_TYPE = Symbol.for("react.profiler");
-    Symbol.for("react.provider");
-    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
-      REACT_CONTEXT_TYPE = Symbol.for("react.context"),
-      REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
-      REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
-      REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
-      REACT_MEMO_TYPE = Symbol.for("react.memo"),
-      REACT_LAZY_TYPE = Symbol.for("react.lazy"),
-      REACT_ACTIVITY_TYPE = Symbol.for("react.activity"),
-      REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"),
-      ReactSharedInternals =
-        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
-      hasOwnProperty = Object.prototype.hasOwnProperty,
-      isArrayImpl = Array.isArray,
-      createTask = console.createTask
-        ? console.createTask
-        : function () {
-            return null;
-          };
-    React = {
-      react_stack_bottom_frame: function (callStackForError) {
-        return callStackForError();
+    }
+  }
+
+  return config.key !== undefined;
+}
+
+function warnIfStringRefCannotBeAutoConverted(config, self) {
+  {
+    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
+      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+      if (!didWarnAboutStringRefs[componentName]) {
+        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
+
+        didWarnAboutStringRefs[componentName] = true;
+      }
+    }
+  }
+}
+
+function defineKeyPropWarningGetter(props, displayName) {
+  {
+    var warnAboutAccessingKey = function () {
+      if (!specialPropKeyWarningShown) {
+        specialPropKeyWarningShown = true;
+
+        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
       }
     };
-    var specialPropKeyWarningShown;
-    var didWarnAboutElementRef = {};
-    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(
-      React,
-      UnknownOwner
-    )();
-    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
-    var didWarnAboutKeySpread = {};
-    exports.Fragment = REACT_FRAGMENT_TYPE;
-    exports.jsxDEV = function (
-      type,
-      config,
-      maybeKey,
-      isStaticChildren,
-      source,
-      self
-    ) {
-      var trackActualOwner =
-        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
-      return jsxDEVImpl(
-        type,
-        config,
-        maybeKey,
-        isStaticChildren,
-        source,
-        self,
-        trackActualOwner
-          ? Error("react-stack-top-frame")
-          : unknownOwnerDebugStack,
-        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask
-      );
+
+    warnAboutAccessingKey.isReactWarning = true;
+    Object.defineProperty(props, 'key', {
+      get: warnAboutAccessingKey,
+      configurable: true
+    });
+  }
+}
+
+function defineRefPropWarningGetter(props, displayName) {
+  {
+    var warnAboutAccessingRef = function () {
+      if (!specialPropRefWarningShown) {
+        specialPropRefWarningShown = true;
+
+        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
     };
-  })();
+
+    warnAboutAccessingRef.isReactWarning = true;
+    Object.defineProperty(props, 'ref', {
+      get: warnAboutAccessingRef,
+      configurable: true
+    });
+  }
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+var ReactElement = function (type, key, ref, self, source, owner, props) {
+  var element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  {
+    // The validation flag is currently mutative. We put it on
+    // an external backing store so that we can freeze the whole object.
+    // This can be replaced with a WeakMap once they are implemented in
+    // commonly used development environments.
+    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
+    // the validation flag non-enumerable (where possible, which should
+    // include every environment we run tests in), so the test framework
+    // ignores it.
+
+    Object.defineProperty(element._store, 'validated', {
+      configurable: false,
+      enumerable: false,
+      writable: true,
+      value: false
+    }); // self and source are DEV only properties.
+
+    Object.defineProperty(element, '_self', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: self
+    }); // Two elements created in two different places should be considered
+    // equal for testing purposes and therefore we hide it from enumeration.
+
+    Object.defineProperty(element, '_source', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: source
+    });
+
+    if (Object.freeze) {
+      Object.freeze(element.props);
+      Object.freeze(element);
+    }
+  }
+
+  return element;
+};
+/**
+ * https://github.com/reactjs/rfcs/pull/107
+ * @param {*} type
+ * @param {object} props
+ * @param {string} key
+ */
+
+function jsxDEV(type, config, maybeKey, source, self) {
+  {
+    var propName; // Reserved names are extracted
+
+    var props = {};
+    var key = null;
+    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
+    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
+    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
+    // but as an intermediary step, we will use jsxDEV for everything except
+    // <div {...props} key="Hi" />, because we aren't currently able to tell if
+    // key is explicitly declared to be undefined or not.
+
+    if (maybeKey !== undefined) {
+      {
+        checkKeyStringCoercion(maybeKey);
+      }
+
+      key = '' + maybeKey;
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    }
+
+    if (hasValidRef(config)) {
+      ref = config.ref;
+      warnIfStringRefCannotBeAutoConverted(config, self);
+    } // Remaining properties are added to a new props object
+
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    } // Resolve default props
+
+
+    if (type && type.defaultProps) {
+      var defaultProps = type.defaultProps;
+
+      for (propName in defaultProps) {
+        if (props[propName] === undefined) {
+          props[propName] = defaultProps[propName];
+        }
+      }
+    }
+
+    if (key || ref) {
+      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
+
+      if (key) {
+        defineKeyPropWarningGetter(props, displayName);
+      }
+
+      if (ref) {
+        defineRefPropWarningGetter(props, displayName);
+      }
+    }
+
+    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+  }
+}
+
+var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement$1(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
+    }
+  }
+}
+
+var propTypesMisspellWarningShown;
+
+{
+  propTypesMisspellWarningShown = false;
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+
+function isValidElement(object) {
+  {
+    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+  }
+}
+
+function getDeclarationErrorAddendum() {
+  {
+    if (ReactCurrentOwner$1.current) {
+      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
+
+      if (name) {
+        return '\n\nCheck the render method of `' + name + '`.';
+      }
+    }
+
+    return '';
+  }
+}
+
+function getSourceInfoErrorAddendum(source) {
+  {
+    if (source !== undefined) {
+      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
+      var lineNumber = source.lineNumber;
+      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
+    }
+
+    return '';
+  }
+}
+/**
+ * Warn if there's no key explicitly set on dynamic arrays of children or
+ * object keys are not valid. This allows us to keep track of children between
+ * updates.
+ */
+
+
+var ownerHasKeyUseWarning = {};
+
+function getCurrentComponentErrorInfo(parentType) {
+  {
+    var info = getDeclarationErrorAddendum();
+
+    if (!info) {
+      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
+
+      if (parentName) {
+        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
+      }
+    }
+
+    return info;
+  }
+}
+/**
+ * Warn if the element doesn't have an explicit key assigned to it.
+ * This element is in an array. The array could grow and shrink or be
+ * reordered. All children that haven't already been validated are required to
+ * have a "key" property assigned to it. Error statuses are cached so a warning
+ * will only be shown once.
+ *
+ * @internal
+ * @param {ReactElement} element Element that requires a key.
+ * @param {*} parentType element's parent's type.
+ */
+
+
+function validateExplicitKey(element, parentType) {
+  {
+    if (!element._store || element._store.validated || element.key != null) {
+      return;
+    }
+
+    element._store.validated = true;
+    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
+
+    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
+      return;
+    }
+
+    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
+    // property, it may be the creator of the child that's responsible for
+    // assigning it a key.
+
+    var childOwner = '';
+
+    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
+      // Give the component that originally created this child.
+      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
+    }
+
+    setCurrentlyValidatingElement$1(element);
+
+    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
+
+    setCurrentlyValidatingElement$1(null);
+  }
+}
+/**
+ * Ensure that every element either is passed in a static location, in an
+ * array with an explicit keys property defined, or in an object literal
+ * with valid key property.
+ *
+ * @internal
+ * @param {ReactNode} node Statically passed child of any type.
+ * @param {*} parentType node's parent's type.
+ */
+
+
+function validateChildKeys(node, parentType) {
+  {
+    if (typeof node !== 'object') {
+      return;
+    }
+
+    if (isArray(node)) {
+      for (var i = 0; i < node.length; i++) {
+        var child = node[i];
+
+        if (isValidElement(child)) {
+          validateExplicitKey(child, parentType);
+        }
+      }
+    } else if (isValidElement(node)) {
+      // This element was passed in a valid location.
+      if (node._store) {
+        node._store.validated = true;
+      }
+    } else if (node) {
+      var iteratorFn = getIteratorFn(node);
+
+      if (typeof iteratorFn === 'function') {
+        // Entry iterators used to provide implicit keys,
+        // but now we print a separate warning for them later.
+        if (iteratorFn !== node.entries) {
+          var iterator = iteratorFn.call(node);
+          var step;
+
+          while (!(step = iterator.next()).done) {
+            if (isValidElement(step.value)) {
+              validateExplicitKey(step.value, parentType);
+            }
+          }
+        }
+      }
+    }
+  }
+}
+/**
+ * Given an element, validate that its props follow the propTypes definition,
+ * provided by the type.
+ *
+ * @param {ReactElement} element
+ */
+
+
+function validatePropTypes(element) {
+  {
+    var type = element.type;
+
+    if (type === null || type === undefined || typeof type === 'string') {
+      return;
+    }
+
+    var propTypes;
+
+    if (typeof type === 'function') {
+      propTypes = type.propTypes;
+    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
+    // Inner props are checked in the reconciler.
+    type.$$typeof === REACT_MEMO_TYPE)) {
+      propTypes = type.propTypes;
+    } else {
+      return;
+    }
+
+    if (propTypes) {
+      // Intentionally inside to avoid triggering lazy initializers:
+      var name = getComponentNameFromType(type);
+      checkPropTypes(propTypes, element.props, 'prop', name, element);
+    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
+      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
+
+      var _name = getComponentNameFromType(type);
+
+      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
+    }
+
+    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
+      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
+    }
+  }
+}
+/**
+ * Given a fragment, validate that it can only be provided with fragment props
+ * @param {ReactElement} fragment
+ */
+
+
+function validateFragmentProps(fragment) {
+  {
+    var keys = Object.keys(fragment.props);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+
+      if (key !== 'children' && key !== 'key') {
+        setCurrentlyValidatingElement$1(fragment);
+
+        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
+
+        setCurrentlyValidatingElement$1(null);
+        break;
+      }
+    }
+
+    if (fragment.ref !== null) {
+      setCurrentlyValidatingElement$1(fragment);
+
+      error('Invalid attribute `ref` supplied to `React.Fragment`.');
+
+      setCurrentlyValidatingElement$1(null);
+    }
+  }
+}
+
+function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
+  {
+    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
+    // succeed and there will likely be errors in render.
+
+    if (!validType) {
+      var info = '';
+
+      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
+        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
+      }
+
+      var sourceInfo = getSourceInfoErrorAddendum(source);
+
+      if (sourceInfo) {
+        info += sourceInfo;
+      } else {
+        info += getDeclarationErrorAddendum();
+      }
+
+      var typeString;
+
+      if (type === null) {
+        typeString = 'null';
+      } else if (isArray(type)) {
+        typeString = 'array';
+      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
+        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
+        info = ' Did you accidentally export a JSX literal instead of a component?';
+      } else {
+        typeString = typeof type;
+      }
+
+      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
+    }
+
+    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
+    // TODO: Drop this when these are no longer allowed as the type argument.
+
+    if (element == null) {
+      return element;
+    } // Skip key warning if the type isn't valid since our key validation logic
+    // doesn't expect a non-string/function type and can throw confusing errors.
+    // We don't want exception behavior to differ between dev and prod.
+    // (Rendering will throw with a helpful message and as soon as the type is
+    // fixed, the key warnings will appear.)
+
+
+    if (validType) {
+      var children = props.children;
+
+      if (children !== undefined) {
+        if (isStaticChildren) {
+          if (isArray(children)) {
+            for (var i = 0; i < children.length; i++) {
+              validateChildKeys(children[i], type);
+            }
+
+            if (Object.freeze) {
+              Object.freeze(children);
+            }
+          } else {
+            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
+          }
+        } else {
+          validateChildKeys(children, type);
+        }
+      }
+    }
+
+    if (type === REACT_FRAGMENT_TYPE) {
+      validateFragmentProps(element);
+    } else {
+      validatePropTypes(element);
+    }
+
+    return element;
+  }
+} // These two functions exist to still get child warnings in dev
+
+var jsxDEV$1 =  jsxWithValidation ;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsxDEV = jsxDEV$1;
+//# sourceMappingURL=react-jsx-dev-runtime.development.js.map
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.development.js.map b/node_modules/react/cjs/react-jsx-dev-runtime.development.js.map
new file mode 100644
index 0000000..10712c9
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.development.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-dev-runtime.development.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/consoleWithStackDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/shared/isValidElementType.js","D:/code-projects/debugger-learning/react/packages/shared/getComponentNameFromType.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/shared/ConsolePatchingDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/CheckStringCoercion.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nlet suppressWarning = false;\r\nexport function setSuppressWarning(newSuppressWarning) {\r\n  if (__DEV__) {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n}\r\n\r\n// In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nexport function warn(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport function error(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  if (__DEV__) {\r\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    }\r\n\r\n    // eslint-disable-next-line react-internal/safe-string-coercion\r\n    const argsWithFormat = args.map(item => String(item));\r\n    // Careful: RN currently depends on this prefix\r\n    argsWithFormat.unshift('Warning: ' + format);\r\n    // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (zero effort)\r\n//\r\n// Flags that can likely be deleted or landed without consequences\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const warnAboutDeprecatedLifecycles = true;\r\nexport const enableComponentStackLocations = true;\r\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (moderate effort)\r\n//\r\n// Flags that can be probably deleted or landed, but might require extra effort\r\n// like migrating internal callers or performance testing.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This is blocked on adding a symbol polyfill to www.\r\nexport const enableSymbolFallbackForWWW = false;\r\n\r\n// This rolled out to 10% public in www, so we should be able to land, but some\r\n// internal tests need to be updated. The open source behavior is correct.\r\nexport const skipUnmountedBoundaries = true;\r\n\r\n// TODO: Finish rolling out in www\r\nexport const enableClientRenderFallbackOnTextMismatch = true;\r\n\r\n// TODO: Need to review this code one more time before landing\r\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\r\n\r\n// Recoil still uses useMutableSource in www, need to delete\r\nexport const enableUseMutableSource = false;\r\n\r\n// Not sure if www still uses this. We don't have a replacement but whatever we\r\n// replace it with will likely be different than what's already there, so we\r\n// probably should just delete it as long as nothing in www relies on it.\r\nexport const enableSchedulerDebugging = false;\r\n\r\n// Need to remove didTimeout argument from Scheduler before landing\r\nexport const disableSchedulerTimeoutInWorkLoop = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Slated for removal in the future (significant effort)\r\n//\r\n// These are experiments that didn't work out, and never shipped, but we can't\r\n// delete from the codebase until we migrate internal callers.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Add a callback property to suspense to notify which promises are currently\r\n// in the update queue. This allows reporting and tracing of what is causing\r\n// the user to see a loading state.\r\n//\r\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\r\n// hydrated or deleted.\r\n//\r\n// This will eventually be replaced by the Transition Tracing proposal.\r\nexport const enableSuspenseCallback = false;\r\n\r\n// Experimental Scope support.\r\nexport const enableScopeAPI = false;\r\n\r\n// Experimental Create Event Handle API.\r\nexport const enableCreateEventHandleAPI = false;\r\n\r\n// This controls whether you get the `.old` modules or the `.new` modules in\r\n// the react-reconciler package.\r\nexport const enableNewReconciler = false;\r\n\r\n// Support legacy Primer support on internal FB www\r\nexport const enableLegacyFBSupport = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Ongoing experiments\r\n//\r\n// These are features that we're either actively exploring or are reasonably\r\n// likely to include in an upcoming release.\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const enableCache = __EXPERIMENTAL__;\r\nexport const enableCacheElement = __EXPERIMENTAL__;\r\n\r\nexport const enableTransitionTracing = false;\r\n\r\n// No known bugs, but needs performance testing\r\nexport const enableLazyContextPropagation = false;\r\n\r\n// FB-only usage. The new API has different semantics.\r\nexport const enableLegacyHidden = false;\r\n\r\n// Enables unstable_avoidThisFallback feature in Fiber\r\nexport const enableSuspenseAvoidThisFallback = false;\r\n// Enables unstable_avoidThisFallback feature in Fizz\r\nexport const enableSuspenseAvoidThisFallbackFizz = false;\r\n\r\nexport const enableCPUSuspense = __EXPERIMENTAL__;\r\n\r\n// When a node is unmounted, recurse into the Fiber subtree and clean out\r\n// references. Each level cleans up more fiber fields than the previous level.\r\n// As far as we know, React itself doesn't leak, but because the Fiber contains\r\n// cycles, even a single leak in product code can cause us to retain large\r\n// amounts of memory.\r\n//\r\n// The long term plan is to remove the cycles, but in the meantime, we clear\r\n// additional fields to mitigate.\r\n//\r\n// It's an enum so that we can experiment with different levels of\r\n// aggressiveness.\r\nexport const deletedTreeCleanUpLevel = 3;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Chopping Block\r\n//\r\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\r\n// when we we plan to enable them.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This flag enables Strict Effects by default. We're not turning this on until\r\n// after 18 because it requires migration work. Recommendation is to use\r\n// <StrictMode /> to gradually upgrade components.\r\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\r\n// If FALSE, these trees will be StrictLegacyMode.\r\nexport const createRootStrictEffectsByDefault = false;\r\n\r\nexport const disableModulePatternComponents = false;\r\n\r\nexport const disableLegacyContext = false;\r\n\r\nexport const enableUseRefAccessWarning = false;\r\n\r\n// Enables time slicing for updates that aren't wrapped in startTransition.\r\nexport const enableSyncDefaultUpdates = true;\r\n\r\n// Adds an opt-in to time slicing for updates that aren't wrapped in\r\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\r\nexport const allowConcurrentByDefault = false;\r\n\r\n// Updates that occur in the render phase are not officially supported. But when\r\n// they do occur, we defer them to a subsequent render by picking a lane that's\r\n// not currently rendering. We treat them the same as if they came from an\r\n// interleaved event. Remove this flag once we have migrated to the\r\n// new behavior.\r\n// NOTE: Not sure if we'll end up doing this or not.\r\nexport const deferRenderPhaseUpdateToNextBatch = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// React DOM Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to React DOM. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Disable support for comment nodes as React DOM containers. Already disabled\r\n// in open source, but www codebase still relies on it. Need to remove.\r\nexport const disableCommentsAsDOMContainers = true;\r\n\r\n// Disable javascript: URL strings in href for XSS protection.\r\nexport const disableJavaScriptURLs = false;\r\n\r\nexport const enableTrustedTypesIntegration = false;\r\n\r\n// Prevent the value and checked attributes from syncing with their related\r\n// DOM properties\r\nexport const disableInputAttributeSyncing = false;\r\n\r\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\r\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\r\n// request for certain browsers.\r\nexport const enableFilterEmptyStringAttributesDOM = false;\r\n\r\n// Changes the behavior for rendering custom elements in both server rendering\r\n// and client rendering, mostly to allow JSX attributes to apply to the custom\r\n// element's object properties instead of only HTML attributes.\r\n// https://github.com/facebook/react/issues/11347\r\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\r\n\r\n// Disables children for <textarea> elements\r\nexport const disableTextareaChildren = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// JSX Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to JSX. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\r\n\r\n// Part of the simplification of React.createElement so we can eventually move\r\n// from React.createElement to React.jsx\r\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\r\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\r\n\r\n// Enables a warning when trying to spread a 'key' to an element;\r\n// a deprecated pattern we want to get rid of in the future\r\nexport const warnAboutSpreadingKeyToJSX = false;\r\n\r\nexport const warnAboutStringRefs = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\nexport const enableSchedulingProfiler = __PROFILE__;\r\n\r\n// Helps identify side effects in render-phase lifecycle hooks and setState\r\n// reducers by double invoking them in StrictLegacyMode.\r\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\r\n\r\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\r\n// this feature flag only impacts StrictEffectsMode.\r\nexport const enableStrictEffects = __DEV__;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nexport const enableProfilerTimer = __PROFILE__;\r\n\r\n// Record durations for commit and passive effects phases.\r\nexport const enableProfilerCommitHooks = __PROFILE__;\r\n\r\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\r\n\r\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\nexport const enableDebugTracing = false;\r\n\r\n// Track which Fiber(s) schedule render work.\r\nexport const enableUpdaterTracking = __PROFILE__;\r\n\r\n// Only enabled in RN, related to enableComponentStackLocations\r\nexport const disableNativeComponentFrames = false;\r\nexport const enableServerContext = __EXPERIMENTAL__;\r\n\r\n// Internal only.\r\nexport const enableGetInspectorDataForInstanceInProduction = false;\r\n\r\n// Profiler API accepts a function to be called when a nested update is scheduled.\r\n// This callback accepts the component type (class instance or function) the update is scheduled for.\r\nexport const enableProfilerNestedUpdateScheduledHook = false;\r\n\r\nexport const consoleManagedByDevToolsDuringStrictMode = true;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {\r\n  enableScopeAPI,\r\n  enableCacheElement,\r\n  enableTransitionTracing,\r\n  enableDebugTracing,\r\n  enableLegacyHidden,\r\n  enableSymbolFallbackForWWW,\r\n} from './ReactFeatureFlags';\r\n\r\nlet REACT_MODULE_REFERENCE;\r\nif (enableSymbolFallbackForWWW) {\r\n  if (typeof Symbol === 'function') {\r\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n  } else {\r\n    REACT_MODULE_REFERENCE = 0;\r\n  }\r\n} else {\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nexport default function isValidElementType(type: mixed) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  }\r\n\r\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\r\n    type === REACT_OFFSCREEN_TYPE ||\r\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\r\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\r\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n      // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_MODULE_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {\r\n  enableServerContext,\r\n  enableTransitionTracing,\r\n  enableCache,\r\n} from './ReactFeatureFlags';\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const displayName = (outerType: any).displayName;\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\r\n}\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\nexport default function getComponentNameFromType(type: mixed): string | null {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  if (__DEV__) {\r\n    if (typeof (type: any).tag === 'number') {\r\n      console.error(\r\n        'Received an unexpected object in getComponentNameFromType(). ' +\r\n          'This is likely a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return (type: any).displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n    case REACT_CACHE_TYPE:\r\n      if (enableCache) {\r\n        return 'Cache';\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case REACT_TRACING_MARKER_TYPE:\r\n      if (enableTransitionTracing) {\r\n        return 'TracingMarker';\r\n      }\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        const context: ReactContext<any> = (type: any);\r\n        return getContextName(context) + '.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        const provider: ReactProviderType<any> = (type: any);\r\n        return getContextName(provider._context) + '.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        const outerName = (type: any).displayName || null;\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n      case REACT_SERVER_CONTEXT_TYPE:\r\n        if (enableServerContext) {\r\n          const context2 = ((type: any): ReactContext<any>);\r\n          return (context2.displayName || context2._globalName) + '.Provider';\r\n        }\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value: mixed): string {\r\n  if (__DEV__) {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    const type =\r\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\r\n      (value: any).constructor.name ||\r\n      'Object';\r\n    return type;\r\n  }\r\n}\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction willCoercionThrow(value: mixed): boolean {\r\n  if (__DEV__) {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value: mixed) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + (value: any);\r\n}\r\n\r\nexport function checkAttributeStringCoercion(\r\n  value: mixed,\r\n  attributeName: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` attribute is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        attributeName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkKeyStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided key is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkPropStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` prop is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` CSS property is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkHtmlStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided HTML markup uses a value of unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkFormFieldValueStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\r\n          ' must be strings, not %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","React","error","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","enableCacheElement","$$typeof","getModuleId","undefined","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","getComponentNameFromType","tag","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","assign","Object","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","defineProperties","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","Error","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","get","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","current","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","length","c","replace","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","typeSpecName","err","ex","message","isArrayImpl","Array","isArray","a","typeName","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","stateNode","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","_store","freeze","jsxDEV","maybeKey","propName","defaultProps","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","entries","step","next","done","validatePropTypes","propTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","keys","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","__DEV__"],"mappings":";;;;AASA;AACA;AACA;AAEA;AACO,IAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACA,IAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;IACME,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX;AAC5B,IAAMG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACA,IAAMI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACA,IAAMK,mBAAmB,GAAGN,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACA,IAAMM,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACA,IAAMO,yBAAyB,GAAGR,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAlC;AACA,IAAMQ,sBAAsB,GAAGT,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACA,IAAMS,mBAAmB,GAAGV,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACA,IAAMU,wBAAwB,GAAGX,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACA,IAAMW,eAAe,GAAGZ,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACA,IAAMY,eAAe,GAAGb,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AAKA,IAAMa,oBAAoB,GAAGd,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA7B;AAEA,IAAMc,gBAAgB,GAAGf,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AAMP,IAAMe,qBAAqB,GAAGhB,MAAM,CAACiB,QAArC;AACA,IAAMC,oBAAoB,GAAG,YAA7B;AAEO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;AACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,WAAO,IAAP;AACD;;AACD,MAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;AAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOA,aAAP;AACD;;AACD,SAAO,IAAP;AACD;;AC1CD,IAAMC,oBAAoB,GACxBC,wDADF;;ACmBO,SAASC,KAAT,CAAeC,MAAf,EAAgC;AACrC,EAAa;AACX,IAAsB;AAAA,yCAFOC,IAEP;AAFOA,QAAAA,IAEP;AAAA;;AACpBC,MAAAA,YAAY,CAAC,OAAD,EAAUF,MAAV,EAAkBC,IAAlB,CAAZ;AACD;AACF;AACF;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6BH,MAA7B,EAAqCC,IAArC,EAA2C;AACzC;AACA;AACA,EAAa;AACX,QAAMG,sBAAsB,GAAGP,oBAAoB,CAACO,sBAApD;AACA,QAAMC,KAAK,GAAGD,sBAAsB,CAACE,gBAAvB,EAAd;;AACA,QAAID,KAAK,KAAK,EAAd,EAAkB;AAChBL,MAAAA,MAAM,IAAI,IAAV;AACAC,MAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAY,CAACF,KAAD,CAAZ,CAAP;AACD,KANU;;;AASX,QAAMG,cAAc,GAAGP,IAAI,CAACQ,GAAL,CAAS,UAAAC,IAAI;AAAA,aAAIC,MAAM,CAACD,IAAD,CAAV;AAAA,KAAb,CAAvB,CATW;;AAWXF,IAAAA,cAAc,CAACI,OAAf,CAAuB,cAAcZ,MAArC,EAXW;AAaX;AACA;;AACAa,IAAAA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,IAAzB,CAA8BC,OAAO,CAACd,KAAD,CAArC,EAA8Cc,OAA9C,EAAuDT,cAAvD;AACD;AACF;;ACjDD;AACA;AA0DA,AAAO,IAAMU,cAAc,GAAG,KAAvB;AAsBA,IAAMC,uBAAuB,GAAG,KAAhC;;AAMP,AAAO,IAAMC,kBAAkB,GAAG,KAA3B;AA6IP;AACA;;AACA,AAAO,IAAMC,kBAAkB,GAAG,KAA3B;;AC3MP,IAAIC,sBAAJ;;AACA,AAMO;AACLA,EAAAA,sBAAsB,GAAG/C,MAAM,CAACC,GAAP,CAAW,wBAAX,CAAzB;AACD;;AAED,AAAe,SAAS+C,kBAAT,CAA4BC,IAA5B,EAAyC;AACtD,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAhD,EAA4D;AAC1D,WAAO,IAAP;AACD,GAHqD;;;AAMtD,MACEA,IAAI,KAAK9C,mBAAT,IACA8C,IAAI,KAAK5C,mBADT,IAECyC,kBAAkB,CAFnB,IAGAG,IAAI,KAAK7C,sBAHT,IAIA6C,IAAI,KAAKvC,mBAJT,IAKAuC,IAAI,KAAKtC,wBALT,IAMCkC,kBAAkB,CANnB,IAOAI,IAAI,KAAKnC,oBAPT,IAQC6B,cAAc,CARf,IASCO,CAAsBD,IAAI,KAAKlC,gBAThC,IAUC6B,uBAAuB,CAX1B,EAYE;AACA,WAAO,IAAP;AACD;;AAED,MAAI,OAAOK,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC7C,QACEA,IAAI,CAACE,QAAL,KAAkBtC,eAAlB,IACAoC,IAAI,CAACE,QAAL,KAAkBvC,eADlB,IAEAqC,IAAI,CAACE,QAAL,KAAkB7C,mBAFlB,IAGA2C,IAAI,CAACE,QAAL,KAAkB5C,kBAHlB,IAIA0C,IAAI,CAACE,QAAL,KAAkB1C,sBAJlB;AAMA;AACA;AACA;AACAwC,IAAAA,IAAI,CAACE,QAAL,KAAkBJ,sBATlB,IAUAE,IAAI,CAACG,WAAL,KAAqBC,SAXvB,EAYE;AACA,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;ACpDD,SAASC,cAAT,CACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIU;AACR,MAAMC,WAAW,GAAIH,SAAD,CAAiBG,WAArC;;AACA,MAAIA,WAAJ,EAAiB;AACf,WAAOA,WAAP;AACD;;AACD,MAAMC,YAAY,GAAGH,SAAS,CAACE,WAAV,IAAyBF,SAAS,CAACI,IAAnC,IAA2C,EAAhE;AACA,SAAOD,YAAY,KAAK,EAAjB,GAAyBF,WAAzB,SAAwCE,YAAxC,SAA0DF,WAAjE;AACD;;;AAGD,SAASI,cAAT,CAAwBZ,IAAxB,EAAiD;AAC/C,SAAOA,IAAI,CAACS,WAAL,IAAoB,SAA3B;AACD;;;AAGD,AAAe,SAASI,wBAAT,CAAkCb,IAAlC,EAA8D;AAC3E,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,WAAO,IAAP;AACD;;AACD,EAAa;AACX,QAAI,OAAQA,IAAD,CAAYc,GAAnB,KAA2B,QAA/B,EAAyC;AACvC,YACE,kEACE,sDAFJ;AAID;AACF;;AACD,MAAI,OAAOd,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAQA,IAAD,CAAYS,WAAZ,IAA2BT,IAAI,CAACW,IAAhC,IAAwC,IAA/C;AACD;;AACD,MAAI,OAAOX,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,UAAQA,IAAR;AACE,SAAK9C,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,iBAAL;AACE,aAAO,QAAP;;AACF,SAAKG,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,sBAAL;AACE,aAAO,YAAP;;AACF,SAAKM,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKC,wBAAL;AACE,aAAO,cAAP;;AACF,SAAKI,gBAAL;AACE,MAAiB;AACf,eAAO,OAAP;AACD;;AAhBL;;AAuBA,MAAI,OAAOkC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACE,QAAb;AACE,WAAK5C,kBAAL;AACE,YAAMyD,OAA0B,GAAIf,IAApC;AACA,eAAOY,cAAc,CAACG,OAAD,CAAd,GAA0B,WAAjC;;AACF,WAAK1D,mBAAL;AACE,YAAM2D,QAAgC,GAAIhB,IAA1C;AACA,eAAOY,cAAc,CAACI,QAAQ,CAACC,QAAV,CAAd,GAAoC,WAA3C;;AACF,WAAKzD,sBAAL;AACE,eAAO6C,cAAc,CAACL,IAAD,EAAOA,IAAI,CAACkB,MAAZ,EAAoB,YAApB,CAArB;;AACF,WAAKvD,eAAL;AACE,YAAMwD,SAAS,GAAInB,IAAD,CAAYS,WAAZ,IAA2B,IAA7C;;AACA,YAAIU,SAAS,KAAK,IAAlB,EAAwB;AACtB,iBAAOA,SAAP;AACD;;AACD,eAAON,wBAAwB,CAACb,IAAI,CAACA,IAAN,CAAxB,IAAuC,MAA9C;;AACF,WAAKpC,eAAL;AAAsB;AACpB,cAAMwD,aAAsC,GAAIpB,IAAhD;AACA,cAAMqB,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF,mBAAOX,wBAAwB,CAACU,IAAI,CAACF,OAAD,CAAL,CAA/B;AACD,WAFD,CAEE,OAAOI,CAAP,EAAU;AACV,mBAAO,IAAP;AACD;AACF;;AACD,WAAKlE,yBAAL;AACE,QAAyB;AACvB,cAAMmE,QAAQ,GAAK1B,IAAnB;AACA,iBAAO,CAAC0B,QAAQ,CAACjB,WAAT,IAAwBiB,QAAQ,CAACC,WAAlC,IAAiD,WAAxD;AACD;;AACH;AA9BF;AAgCD;;AACD,SAAO,IAAP;AACD;;AC3HD,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ACAA;AACA;AACA;AACA;AAEA,IAAIE,aAAa,GAAG,CAApB;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB;;AACvBA,WAAW,CAACC,kBAAZ,GAAiC,IAAjC;AAEA,AAAO,SAASC,WAAT,GAA6B;AAClC,EAAa;AACX,QAAIV,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACAC,MAAAA,OAAO,GAAGtC,OAAO,CAACgD,GAAlB;AACAT,MAAAA,QAAQ,GAAGvC,OAAO,CAACiD,IAAnB;AACAT,MAAAA,QAAQ,GAAGxC,OAAO,CAACkD,IAAnB;AACAT,MAAAA,SAAS,GAAGzC,OAAO,CAAClB,KAApB;AACA4D,MAAAA,SAAS,GAAG1C,OAAO,CAACmD,KAApB;AACAR,MAAAA,kBAAkB,GAAG3C,OAAO,CAACoD,cAA7B;AACAR,MAAAA,YAAY,GAAG5C,OAAO,CAACqD,QAAvB,CARuB;;AAUvB,UAAMC,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZC,QAAAA,KAAK,EAAEZ,WAHK;AAIZa,QAAAA,QAAQ,EAAE;AAJE,OAAd,CAVuB;;AAiBvBtB,MAAAA,MAAM,CAACuB,gBAAP,CAAwB3D,OAAxB,EAAiC;AAC/BiD,QAAAA,IAAI,EAAEK,KADyB;AAE/BN,QAAAA,GAAG,EAAEM,KAF0B;AAG/BJ,QAAAA,IAAI,EAAEI,KAHyB;AAI/BxE,QAAAA,KAAK,EAAEwE,KAJwB;AAK/BH,QAAAA,KAAK,EAAEG,KALwB;AAM/BF,QAAAA,cAAc,EAAEE,KANe;AAO/BD,QAAAA,QAAQ,EAAEC;AAPqB,OAAjC;AASA;AACD;;AACDjB,IAAAA,aAAa;AACd;AACF;AAED,AAAO,SAASuB,YAAT,GAA8B;AACnC,EAAa;AACXvB,IAAAA,aAAa;;AACb,QAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA,UAAMiB,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZE,QAAAA,QAAQ,EAAE;AAHE,OAAd,CAFuB;;AAQvBtB,MAAAA,MAAM,CAACuB,gBAAP,CAAwB3D,OAAxB,EAAiC;AAC/BgD,QAAAA,GAAG,aAAMM,KAAN;AAAaG,UAAAA,KAAK,EAAEnB;AAApB,UAD4B;AAE/BW,QAAAA,IAAI,aAAMK,KAAN;AAAaG,UAAAA,KAAK,EAAElB;AAApB,UAF2B;AAG/BW,QAAAA,IAAI,aAAMI,KAAN;AAAaG,UAAAA,KAAK,EAAEjB;AAApB,UAH2B;AAI/B1D,QAAAA,KAAK,aAAMwE,KAAN;AAAaG,UAAAA,KAAK,EAAEhB;AAApB,UAJ0B;AAK/BU,QAAAA,KAAK,aAAMG,KAAN;AAAaG,UAAAA,KAAK,EAAEf;AAApB,UAL0B;AAM/BU,QAAAA,cAAc,aAAME,KAAN;AAAaG,UAAAA,KAAK,EAAEd;AAApB,UANiB;AAO/BU,QAAAA,QAAQ,aAAMC,KAAN;AAAaG,UAAAA,KAAK,EAAEb;AAApB;AAPuB,OAAjC;AASA;AACD;;AACD,QAAIP,aAAa,GAAG,CAApB,EAAuB;AACrB,YACE,oCACE,+CAFJ;AAID;AACF;AACF;;IC5DMwB,yBAA0BjF,qBAA1BiF;AAEP,IAAIC,MAAJ;AACA,AAAO,SAASC,6BAAT,CACL7C,IADK,EAEL8C,MAFK,EAGLC,OAHK,EAIG;AACR,EAAmC;AACjC,QAAIH,MAAM,KAAKnD,SAAf,EAA0B;AACxB;AACA,UAAI;AACF,cAAMuD,KAAK,EAAX;AACD,OAFD,CAEE,OAAOlC,CAAP,EAAU;AACV,YAAMmC,KAAK,GAAGnC,CAAC,CAAC5C,KAAF,CAAQgF,IAAR,GAAeD,KAAf,CAAqB,cAArB,CAAd;AACAL,QAAAA,MAAM,GAAIK,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAf,IAAuB,EAAhC;AACD;AACF,KATgC;;;AAWjC,WAAO,OAAOL,MAAP,GAAgB5C,IAAvB;AACD,GAZD;AAmBD;AAED,IAAImD,OAAO,GAAG,KAAd;AACA,IAAIC,mBAAJ;;AACA,AAAa;AACX,MAAMC,eAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE;AACAH,EAAAA,mBAAmB,GAAG,IAAIC,eAAJ,EAAtB;AACD;;AAED,AAAO,SAASG,4BAAT,CACLC,EADK,EAELC,SAFK,EAGG;AACR;AACA,MAAIC,CAAgC,CAACF,EAAjC,IAAuCN,OAA3C,EAAoD;AAClD,WAAO,EAAP;AACD;;AAED,EAAa;AACX,QAAMS,KAAK,GAAGR,mBAAmB,CAACS,GAApB,CAAwBJ,EAAxB,CAAd;;AACA,QAAIG,KAAK,KAAKnE,SAAd,EAAyB;AACvB,aAAOmE,KAAP;AACD;AACF;;AAED,MAAIE,OAAJ;AAEAX,EAAAA,OAAO,GAAG,IAAV;AACA,MAAMY,yBAAyB,GAAGf,KAAK,CAACgB,iBAAxC,CAhBQ;;AAkBRhB,EAAAA,KAAK,CAACgB,iBAAN,GAA0BvE,SAA1B;AACA,MAAIwE,kBAAJ;;AACA,EAAa;AACXA,IAAAA,kBAAkB,GAAGtB,sBAAsB,CAACuB,OAA5C,CADW;AAGX;;AACAvB,IAAAA,sBAAsB,CAACuB,OAAvB,GAAiC,IAAjC;AACArC,IAAAA,WAAW;AACZ;;AACD,MAAI;AACF;AACA,QAAI6B,SAAJ,EAAe;AACb;AACA,UAAMS,IAAI,GAAG,YAAW;AACtB,cAAMnB,KAAK,EAAX;AACD,OAFD,CAFa;;;AAMb9B,MAAAA,MAAM,CAACkD,cAAP,CAAsBD,IAAI,CAACxF,SAA3B,EAAsC,OAAtC,EAA+C;AAC7C0F,QAAAA,GAAG,EAAE,YAAW;AACd;AACA;AACA,gBAAMrB,KAAK,EAAX;AACD;AAL4C,OAA/C;;AAOA,UAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACZ,SAA3C,EAAsD;AACpD;AACA;AACA,YAAI;AACFY,UAAAA,OAAO,CAACZ,SAAR,CAAkBS,IAAlB,EAAwB,EAAxB;AACD,SAFD,CAEE,OAAOrD,CAAP,EAAU;AACVgD,UAAAA,OAAO,GAAGhD,CAAV;AACD;;AACDwD,QAAAA,OAAO,CAACZ,SAAR,CAAkBD,EAAlB,EAAsB,EAAtB,EAA0BU,IAA1B;AACD,OATD,MASO;AACL,YAAI;AACFA,UAAAA,IAAI,CAACtF,IAAL;AACD,SAFD,CAEE,OAAOiC,CAAP,EAAU;AACVgD,UAAAA,OAAO,GAAGhD,CAAV;AACD;;AACD2C,QAAAA,EAAE,CAAC5E,IAAH,CAAQsF,IAAI,CAACxF,SAAb;AACD;AACF,KA9BD,MA8BO;AACL,UAAI;AACF,cAAMqE,KAAK,EAAX;AACD,OAFD,CAEE,OAAOlC,CAAP,EAAU;AACVgD,QAAAA,OAAO,GAAGhD,CAAV;AACD,OALI;AAOL;AACA;;;AACA2C,MAAAA,EAAE;AACH;AACF,GA3CD,CA2CE,OAAOc,MAAP,EAAe;AACf;AACA,QAAIA,MAAM,IAAIT,OAAV,IAAqB,OAAOS,MAAM,CAACrG,KAAd,KAAwB,QAAjD,EAA2D;AACzD;AACA;AACA,UAAMsG,WAAW,GAAGD,MAAM,CAACrG,KAAP,CAAauG,KAAb,CAAmB,IAAnB,CAApB;AACA,UAAMC,YAAY,GAAGZ,OAAO,CAAC5F,KAAR,CAAcuG,KAAd,CAAoB,IAApB,CAArB;AACA,UAAIE,CAAC,GAAGH,WAAW,CAACI,MAAZ,GAAqB,CAA7B;AACA,UAAIC,CAAC,GAAGH,YAAY,CAACE,MAAb,GAAsB,CAA9B;;AACA,aAAOD,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAAf,IAAoBL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAA1D,EAA+D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACAA,QAAAA,CAAC;AACF;;AACD,aAAOF,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAAtB,EAAyBF,CAAC,IAAIE,CAAC,EAA/B,EAAmC;AACjC;AACA;AACA,YAAIL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAAnC,EAAwC;AACtC;AACA;AACA;AACA;AACA;AACA,cAAIF,CAAC,KAAK,CAAN,IAAWE,CAAC,KAAK,CAArB,EAAwB;AACtB,eAAG;AACDF,cAAAA,CAAC;AACDE,cAAAA,CAAC,GAFA;AAID;;AACA,kBAAIA,CAAC,GAAG,CAAJ,IAASL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAA5C,EAAiD;AAC/C;AACA,oBAAIjB,MAAK,GAAG,OAAOY,WAAW,CAACG,CAAD,CAAX,CAAeG,OAAf,CAAuB,UAAvB,EAAmC,MAAnC,CAAnB,CAF+C;AAK/C;AACA;;;AACA,oBAAIrB,EAAE,CAAC3D,WAAH,IAAkB8D,MAAK,CAACmB,QAAN,CAAe,aAAf,CAAtB,EAAqD;AACnDnB,kBAAAA,MAAK,GAAGA,MAAK,CAACkB,OAAN,CAAc,aAAd,EAA6BrB,EAAE,CAAC3D,WAAhC,CAAR;AACD;;AAED,gBAAa;AACX,sBAAI,OAAO2D,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,oBAAAA,mBAAmB,CAACiB,GAApB,CAAwBZ,EAAxB,EAA4BG,MAA5B;AACD;AACF,iBAf8C;;;AAiB/C,uBAAOA,MAAP;AACD;AACF,aAxBD,QAwBSe,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAxBxB;AAyBD;;AACD;AACD;AACF;AACF;AACF,GArGD,SAqGU;AACR1B,IAAAA,OAAO,GAAG,KAAV;;AACA,IAAa;AACXR,MAAAA,sBAAsB,CAACuB,OAAvB,GAAiCD,kBAAjC;AACAvB,MAAAA,YAAY;AACb;;AACDM,IAAAA,KAAK,CAACgB,iBAAN,GAA0BD,yBAA1B;AACD,GAvIO;;;AAyIR,MAAM/D,IAAI,GAAGyD,EAAE,GAAGA,EAAE,CAAC3D,WAAH,IAAkB2D,EAAE,CAACzD,IAAxB,GAA+B,EAA9C;AACA,MAAMgF,cAAc,GAAGhF,IAAI,GAAG6C,6BAA6B,CAAC7C,IAAD,CAAhC,GAAyC,EAApE;;AACA,EAAa;AACX,QAAI,OAAOyD,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,MAAAA,mBAAmB,CAACiB,GAApB,CAAwBZ,EAAxB,EAA4BuB,cAA5B;AACD;AACF;;AACD,SAAOA,cAAP;AACD;AAED,AA0CO,SAASC,8BAAT,CACLxB,EADK,EAELX,MAFK,EAGLC,OAHK,EAIG;AACR,EAAmC;AACjC,WAAOS,4BAA4B,CAACC,EAAD,EAAK,KAAL,CAAnC;AACD,GAFD;AAaD;;AAED,SAASyB,eAAT,CAAyBC,SAAzB,EAA8C;AAC5C,MAAMxG,SAAS,GAAGwG,SAAS,CAACxG,SAA5B;AACA,SAAO,CAAC,EAAEA,SAAS,IAAIA,SAAS,CAACyG,gBAAzB,CAAR;AACD;;AAED,AAAO,SAASC,oCAAT,CACLhG,IADK,EAELyD,MAFK,EAGLC,OAHK,EAIG;AACR;AAGA,MAAI1D,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,IAAmC;AACjC,aAAOmE,4BAA4B,CAACnE,IAAD,EAAO6F,eAAe,CAAC7F,IAAD,CAAtB,CAAnC;AACD,KAFD;AAKD;;AACD,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOwD,6BAA6B,CAACxD,IAAD,AAAA,CAApC;AACD;;AACD,UAAQA,IAAR;AACE,SAAKvC,mBAAL;AACE,aAAO+F,6BAA6B,CAAC,UAAD,AAAA,CAApC;;AACF,SAAK9F,wBAAL;AACE,aAAO8F,6BAA6B,CAAC,cAAD,AAAA,CAApC;AAJJ;;AAMA,MAAI,OAAOxD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACE,QAAb;AACE,WAAK1C,sBAAL;AACE,eAAOoI,8BAA8B,CAAC5F,IAAI,CAACkB,MAAN,AAAA,CAArC;;AACF,WAAKvD,eAAL;AACE;AACA,eAAOqI,oCAAoC,CAAChG,IAAI,CAACA,IAAN,EAAYyD,MAAZ,EAAoBC,OAApB,CAA3C;;AACF,WAAK9F,eAAL;AAAsB;AACpB,cAAMwD,aAAsC,GAAIpB,IAAhD;AACA,cAAMqB,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF;AACA,mBAAOwE,oCAAoC,CACzCzE,IAAI,CAACF,OAAD,CADqC,EAEzCoC,MAFyC,EAGzCC,OAHyC,CAA3C;AAKD,WAPD,CAOE,OAAOjC,CAAP,EAAU;AACb;AAlBH;AAoBD;;AACD,SAAO,EAAP;AACD;;ACnUD,IAAMwE,cAAc,GAAGpE,MAAM,CAACvC,SAAP,CAAiB2G,cAAxC;;ACAA,IAAMC,kBAAkB,GAAG,EAA3B;AAEA,AAKA,IAAMtH,sBAAsB,GAAGP,oBAAoB,CAACO,sBAApD;;AAEA,SAASuH,6BAAT,CAAuCC,OAAvC,EAAgD;AAC9C,EAAa;AACX,QAAIA,OAAJ,EAAa;AACX,UAAMC,KAAK,GAAGD,OAAO,CAACE,MAAtB;AACA,UAAMzH,KAAK,GAAGmH,oCAAoC,CAChDI,OAAO,CAACpG,IADwC,EAEhDoG,OAAO,CAACG,OAFwC,EAGhDF,KAAK,GAAGA,KAAK,CAACrG,IAAT,GAAgB,IAH2B,CAAlD;AAKApB,MAAAA,sBAAsB,CAAC4H,kBAAvB,CAA0C3H,KAA1C;AACD,KARD,MAQO;AACLD,MAAAA,sBAAsB,CAAC4H,kBAAvB,CAA0C,IAA1C;AACD;AACF;AACF;;AAED,AAAe,SAASC,cAAT,CACbC,SADa,EAEbC,MAFa,EAGbC,QAHa,EAIbC,aAJa,EAKbT,OALa,EAMP;AACN,EAAa;AACX;AACA,QAAMU,GAAG,GAAGzH,QAAQ,CAACG,IAAT,CAAcuH,IAAd,CAAmBd,cAAnB,CAAZ;;AACA,SAAK,IAAMe,YAAX,IAA2BN,SAA3B,EAAsC;AACpC,UAAII,GAAG,CAACJ,SAAD,EAAYM,YAAZ,CAAP,EAAkC;AAChC,YAAIzI,OAAK,SAAT,CADgC;AAGhC;AACA;;AACA,YAAI;AACF;AACA;AACA,cAAI,OAAOmI,SAAS,CAACM,YAAD,CAAhB,KAAmC,UAAvC,EAAmD;AACjD;AACA,gBAAMC,GAAG,GAAGtD,KAAK,CACf,CAACkD,aAAa,IAAI,aAAlB,IACE,IADF,GAEED,QAFF,GAGE,SAHF,GAIEI,YAJF,GAKE,gBALF,GAME,8EANF,GAOE,OAAON,SAAS,CAACM,YAAD,CAPlB,GAQE,IARF,GASE,+FAVa,CAAjB;AAYAC,YAAAA,GAAG,CAACtG,IAAJ,GAAW,qBAAX;AACA,kBAAMsG,GAAN;AACD;;AACD1I,UAAAA,OAAK,GAAGmI,SAAS,CAACM,YAAD,CAAT,CACNL,MADM,EAENK,YAFM,EAGNH,aAHM,EAIND,QAJM,EAKN,IALM,EAMN,8CANM,CAAR;AAQD,SA5BD,CA4BE,OAAOM,EAAP,EAAW;AACX3I,UAAAA,OAAK,GAAG2I,EAAR;AACD;;AACD,YAAI3I,OAAK,IAAI,EAAEA,OAAK,YAAYoF,KAAnB,CAAb,EAAwC;AACtCwC,UAAAA,6BAA6B,CAACC,OAAD,CAA7B;;AACA,gBACE,iCACE,qCADF,GAEE,+DAFF,GAGE,iEAHF,GAIE,gEAJF,GAKE,iCANJ,EAOES,aAAa,IAAI,aAPnB,EAQED,QARF,EASEI,YATF,EAUE,OAAOzI,OAVT;;AAYA4H,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;;AACD,YAAI5H,OAAK,YAAYoF,KAAjB,IAA0B,EAAEpF,OAAK,CAAC4I,OAAN,IAAiBjB,kBAAnB,CAA9B,EAAsE;AACpE;AACA;AACAA,UAAAA,kBAAkB,CAAC3H,OAAK,CAAC4I,OAAP,CAAlB,GAAoC,IAApC;AACAhB,UAAAA,6BAA6B,CAACC,OAAD,CAA7B;;AACA,gBAAc,oBAAd,EAAoCQ,QAApC,EAA8CrI,OAAK,CAAC4I,OAApD;;AACAhB,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AACF;AACF;AACF;;ACjGD,IAAMiB,WAAW,GAAGC,KAAK,CAACC,OAA1B;;AAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;AAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;AACD;;ACPD;;;;;;;;;AAUA;AACA,SAASC,QAAT,CAAkBtE,KAAlB,EAAwC;AACtC,EAAa;AACX;AACA,QAAMuE,cAAc,GAAG,OAAO1K,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAAC2K,WAA9D;AACA,QAAM1H,IAAI,GACPyH,cAAc,IAAKvE,KAAD,CAAanG,MAAM,CAAC2K,WAApB,CAAnB,IACCxE,KAAD,CAAayE,WAAb,CAAyBhH,IADzB,IAEA,QAHF;AAIA,WAAOX,IAAP;AACD;AACF;;;AAGD,SAAS4H,iBAAT,CAA2B1E,KAA3B,EAAkD;AAChD,EAAa;AACX,QAAI;AACF2E,MAAAA,kBAAkB,CAAC3E,KAAD,CAAlB;AACA,aAAO,KAAP;AACD,KAHD,CAGE,OAAO4E,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF;AACF;;AAED,SAASD,kBAAT,CAA4B3E,KAA5B,EAA0C;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,KAAMA,KAAb;AACD;AAmBM,SAAS6E,sBAAT,CAAgC7E,KAAhC,EAA8C;AACnD,EAAa;AACX,QAAI0E,iBAAiB,CAAC1E,KAAD,CAArB,EAA8B;AAC5B,YACE,gDACE,sEAFJ,EAGEsE,QAAQ,CAACtE,KAAD,CAHV;;AAKA,aAAO2E,kBAAkB,CAAC3E,KAAD,CAAzB,CAN4B;AAO7B;AACF;AACF;;ACtFD,IAAM8E,iBAAiB,GAAG3J,oBAAoB,CAAC2J,iBAA/C;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,IADgB;AAErBC,EAAAA,GAAG,EAAE,IAFgB;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA,IAAIC,0BAAJ;AACA,IAAIC,0BAAJ;AACA,IAAIC,sBAAJ;;AAEA,AAAa;AACXA,EAAAA,sBAAsB,GAAG,EAAzB;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,EAAa;AACX,QAAIzC,cAAc,CAACzG,IAAf,CAAoBkJ,MAApB,EAA4B,KAA5B,CAAJ,EAAwC;AACtC,UAAMC,MAAM,GAAG9G,MAAM,CAAC+G,wBAAP,CAAgCF,MAAhC,EAAwC,KAAxC,EAA+ClE,GAA9D;;AACA,UAAImE,MAAM,IAAIA,MAAM,CAACE,cAArB,EAAqC;AACnC,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAOH,MAAM,CAACP,GAAP,KAAe/H,SAAtB;AACD;;AAED,SAAS0I,WAAT,CAAqBJ,MAArB,EAA6B;AAC3B,EAAa;AACX,QAAIzC,cAAc,CAACzG,IAAf,CAAoBkJ,MAApB,EAA4B,KAA5B,CAAJ,EAAwC;AACtC,UAAMC,MAAM,GAAG9G,MAAM,CAAC+G,wBAAP,CAAgCF,MAAhC,EAAwC,KAAxC,EAA+ClE,GAA9D;;AACA,UAAImE,MAAM,IAAIA,MAAM,CAACE,cAArB,EAAqC;AACnC,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAOH,MAAM,CAACR,GAAP,KAAe9H,SAAtB;AACD;;AAED,SAAS2I,oCAAT,CAA8CL,MAA9C,EAAsDM,IAAtD,EAA4D;AAC1D,EAAa;AACX,QACE,OAAON,MAAM,CAACP,GAAd,KAAsB,QAAtB,IACAH,iBAAiB,CAACnD,OADlB,IAEAmE,IAFA,IAGAhB,iBAAiB,CAACnD,OAAlB,CAA0BoE,SAA1B,KAAwCD,IAJ1C,EAKE;AACA,UAAMnC,aAAa,GAAGhG,wBAAwB,CAC5CmH,iBAAiB,CAACnD,OAAlB,CAA0B7E,IADkB,CAA9C;;AAIA,UAAI,CAACwI,sBAAsB,CAAC3B,aAAD,CAA3B,EAA4C;AAC1C,cACE,kDACE,qEADF,GAEE,oEAFF,GAGE,iFAHF,GAIE,2CAJF,GAKE,iDANJ,EAOEhG,wBAAwB,CAACmH,iBAAiB,CAACnD,OAAlB,CAA0B7E,IAA3B,CAP1B,EAQE0I,MAAM,CAACP,GART;;AAUAK,QAAAA,sBAAsB,CAAC3B,aAAD,CAAtB,GAAwC,IAAxC;AACD;AACF;AACF;AACF;;AAED,SAASqC,0BAAT,CAAoCnG,KAApC,EAA2CtC,WAA3C,EAAwD;AACtD,EAAa;AACX,QAAM0I,qBAAqB,GAAG,YAAW;AACvC,UAAI,CAACb,0BAAL,EAAiC;AAC/BA,QAAAA,0BAA0B,GAAG,IAA7B;;AACA,cACE,8DACE,gEADF,GAEE,sEAFF,GAGE,gDAJJ,EAKE7H,WALF;AAOD;AACF,KAXD;;AAYA0I,IAAAA,qBAAqB,CAACN,cAAtB,GAAuC,IAAvC;AACAhH,IAAAA,MAAM,CAACkD,cAAP,CAAsBhC,KAAtB,EAA6B,KAA7B,EAAoC;AAClCyB,MAAAA,GAAG,EAAE2E,qBAD6B;AAElCnG,MAAAA,YAAY,EAAE;AAFoB,KAApC;AAID;AACF;;AAED,SAASoG,0BAAT,CAAoCrG,KAApC,EAA2CtC,WAA3C,EAAwD;AACtD,EAAa;AACX,QAAM4I,qBAAqB,GAAG,YAAW;AACvC,UAAI,CAACd,0BAAL,EAAiC;AAC/BA,QAAAA,0BAA0B,GAAG,IAA7B;;AACA,cACE,8DACE,gEADF,GAEE,sEAFF,GAGE,gDAJJ,EAKE9H,WALF;AAOD;AACF,KAXD;;AAYA4I,IAAAA,qBAAqB,CAACR,cAAtB,GAAuC,IAAvC;AACAhH,IAAAA,MAAM,CAACkD,cAAP,CAAsBhC,KAAtB,EAA6B,KAA7B,EAAoC;AAClCyB,MAAAA,GAAG,EAAE6E,qBAD6B;AAElCrG,MAAAA,YAAY,EAAE;AAFoB,KAApC;AAID;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMsG,YAAY,GAAG,UAAStJ,IAAT,EAAekI,GAAf,EAAoBC,GAApB,EAAyBa,IAAzB,EAA+BvF,MAA/B,EAAuC4C,KAAvC,EAA8CtD,KAA9C,EAAqD;AACxE,MAAMqD,OAAO,GAAG;AACd;AACAlG,IAAAA,QAAQ,EAAEpD,kBAFI;AAId;AACAkD,IAAAA,IAAI,EAAEA,IALQ;AAMdkI,IAAAA,GAAG,EAAEA,GANS;AAOdC,IAAAA,GAAG,EAAEA,GAPS;AAQdpF,IAAAA,KAAK,EAAEA,KARO;AAUd;AACAuD,IAAAA,MAAM,EAAED;AAXM,GAAhB;;AAcA,EAAa;AACX;AACA;AACA;AACA;AACAD,IAAAA,OAAO,CAACmD,MAAR,GAAiB,EAAjB,CALW;AAQX;AACA;AACA;;AACA1H,IAAAA,MAAM,CAACkD,cAAP,CAAsBqB,OAAO,CAACmD,MAA9B,EAAsC,WAAtC,EAAmD;AACjDvG,MAAAA,YAAY,EAAE,KADmC;AAEjDC,MAAAA,UAAU,EAAE,KAFqC;AAGjDE,MAAAA,QAAQ,EAAE,IAHuC;AAIjDD,MAAAA,KAAK,EAAE;AAJ0C,KAAnD,EAXW;;AAkBXrB,IAAAA,MAAM,CAACkD,cAAP,CAAsBqB,OAAtB,EAA+B,OAA/B,EAAwC;AACtCpD,MAAAA,YAAY,EAAE,KADwB;AAEtCC,MAAAA,UAAU,EAAE,KAF0B;AAGtCE,MAAAA,QAAQ,EAAE,KAH4B;AAItCD,MAAAA,KAAK,EAAE8F;AAJ+B,KAAxC,EAlBW;AAyBX;;AACAnH,IAAAA,MAAM,CAACkD,cAAP,CAAsBqB,OAAtB,EAA+B,SAA/B,EAA0C;AACxCpD,MAAAA,YAAY,EAAE,KAD0B;AAExCC,MAAAA,UAAU,EAAE,KAF4B;AAGxCE,MAAAA,QAAQ,EAAE,KAH8B;AAIxCD,MAAAA,KAAK,EAAEO;AAJiC,KAA1C;;AAMA,QAAI5B,MAAM,CAAC2H,MAAX,EAAmB;AACjB3H,MAAAA,MAAM,CAAC2H,MAAP,CAAcpD,OAAO,CAACrD,KAAtB;AACAlB,MAAAA,MAAM,CAAC2H,MAAP,CAAcpD,OAAd;AACD;AACF;;AAED,SAAOA,OAAP;AACD,CAtDD;AAwDA,AAsEA;;;;;;;AAMA,AAAO,SAASqD,MAAT,CAAgBzJ,IAAhB,EAAsB0I,MAAtB,EAA8BgB,QAA9B,EAAwCjG,MAAxC,EAAgDuF,IAAhD,EAAsD;AAC3D,EAAa;AACX,QAAIW,QAAJ,CADW;;AAIX,QAAM5G,KAAK,GAAG,EAAd;AAEA,QAAImF,GAAG,GAAG,IAAV;AACA,QAAIC,GAAG,GAAG,IAAV,CAPW;AAUX;AACA;AACA;AACA;AACA;;AACA,QAAIuB,QAAQ,KAAKtJ,SAAjB,EAA4B;AAC1B,MAAa;AACX2H,QAAAA,sBAAsB,CAAC2B,QAAD,CAAtB;AACD;;AACDxB,MAAAA,GAAG,GAAG,KAAKwB,QAAX;AACD;;AAED,QAAIZ,WAAW,CAACJ,MAAD,CAAf,EAAyB;AACvB,MAAa;AACXX,QAAAA,sBAAsB,CAACW,MAAM,CAACR,GAAR,CAAtB;AACD;;AACDA,MAAAA,GAAG,GAAG,KAAKQ,MAAM,CAACR,GAAlB;AACD;;AAED,QAAIO,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBP,MAAAA,GAAG,GAAGO,MAAM,CAACP,GAAb;AACAY,MAAAA,oCAAoC,CAACL,MAAD,EAASM,IAAT,CAApC;AACD,KAhCU;;;AAmCX,SAAKW,QAAL,IAAiBjB,MAAjB,EAAyB;AACvB,UACEzC,cAAc,CAACzG,IAAf,CAAoBkJ,MAApB,EAA4BiB,QAA5B,KACA,CAAC1B,cAAc,CAAChC,cAAf,CAA8B0D,QAA9B,CAFH,EAGE;AACA5G,QAAAA,KAAK,CAAC4G,QAAD,CAAL,GAAkBjB,MAAM,CAACiB,QAAD,CAAxB;AACD;AACF,KA1CU;;;AA6CX,QAAI3J,IAAI,IAAIA,IAAI,CAAC4J,YAAjB,EAA+B;AAC7B,UAAMA,YAAY,GAAG5J,IAAI,CAAC4J,YAA1B;;AACA,WAAKD,QAAL,IAAiBC,YAAjB,EAA+B;AAC7B,YAAI7G,KAAK,CAAC4G,QAAD,CAAL,KAAoBvJ,SAAxB,EAAmC;AACjC2C,UAAAA,KAAK,CAAC4G,QAAD,CAAL,GAAkBC,YAAY,CAACD,QAAD,CAA9B;AACD;AACF;AACF;;AAED,QAAIzB,GAAG,IAAIC,GAAX,EAAgB;AACd,UAAM1H,WAAW,GACf,OAAOT,IAAP,KAAgB,UAAhB,GACIA,IAAI,CAACS,WAAL,IAAoBT,IAAI,CAACW,IAAzB,IAAiC,SADrC,GAEIX,IAHN;;AAIA,UAAIkI,GAAJ,EAAS;AACPgB,QAAAA,0BAA0B,CAACnG,KAAD,EAAQtC,WAAR,CAA1B;AACD;;AACD,UAAI0H,GAAJ,EAAS;AACPiB,QAAAA,0BAA0B,CAACrG,KAAD,EAAQtC,WAAR,CAA1B;AACD;AACF;;AAED,WAAO6I,YAAY,CACjBtJ,IADiB,EAEjBkI,GAFiB,EAGjBC,GAHiB,EAIjBa,IAJiB,EAKjBvF,MALiB,EAMjBuE,iBAAiB,CAACnD,OAND,EAOjB9B,KAPiB,CAAnB;AASD;AACF;;ACrUD,IAAMiF,mBAAiB,GAAG3J,oBAAoB,CAAC2J,iBAA/C;AACA,IAAMpJ,wBAAsB,GAAGP,oBAAoB,CAACO,sBAApD;;AAEA,SAASuH,+BAAT,CAAuCC,OAAvC,EAAgD;AAC9C,EAAa;AACX,QAAIA,OAAJ,EAAa;AACX,UAAMC,KAAK,GAAGD,OAAO,CAACE,MAAtB;AACA,UAAMzH,KAAK,GAAGmH,oCAAoC,CAChDI,OAAO,CAACpG,IADwC,EAEhDoG,OAAO,CAACG,OAFwC,EAGhDF,KAAK,GAAGA,KAAK,CAACrG,IAAT,GAAgB,IAH2B,CAAlD;AAKApB,MAAAA,wBAAsB,CAAC4H,kBAAvB,CAA0C3H,KAA1C;AACD,KARD,MAQO;AACLD,MAAAA,wBAAsB,CAAC4H,kBAAvB,CAA0C,IAA1C;AACD;AACF;AACF;;AAED,IAAIqD,6BAAJ;;AAEA,AAAa;AACXA,EAAAA,6BAA6B,GAAG,KAAhC;AACD;AAED;;;;;;;;;AAOA,AAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,EAAa;AACX,WACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAAC7J,QAAP,KAAoBpD,kBAHtB;AAKD;AACF;;AAED,SAASkN,2BAAT,GAAuC;AACrC,EAAa;AACX,QAAIhC,mBAAiB,CAACnD,OAAtB,EAA+B;AAC7B,UAAMlE,IAAI,GAAGE,wBAAwB,CAACmH,mBAAiB,CAACnD,OAAlB,CAA0B7E,IAA3B,CAArC;;AACA,UAAIW,IAAJ,EAAU;AACR,eAAO,qCAAqCA,IAArC,GAA4C,IAAnD;AACD;AACF;;AACD,WAAO,EAAP;AACD;AACF;;AAED,SAASsJ,0BAAT,CAAoCxG,MAApC,EAA4C;AAC1C,EAAa;AACX,QAAIA,MAAM,KAAKrD,SAAf,EAA0B;AACxB,UAAM8J,QAAQ,GAAGzG,MAAM,CAACyG,QAAP,CAAgBzE,OAAhB,CAAwB,WAAxB,EAAqC,EAArC,CAAjB;AACA,UAAM0E,UAAU,GAAG1G,MAAM,CAAC0G,UAA1B;AACA,aAAO,4BAA4BD,QAA5B,GAAuC,GAAvC,GAA6CC,UAA7C,GAA0D,GAAjE;AACD;;AACD,WAAO,EAAP;AACD;AACF;AAED;;;;;;;AAKA,IAAMC,qBAAqB,GAAG,EAA9B;;AAEA,SAASC,4BAAT,CAAsCC,UAAtC,EAAkD;AAChD,EAAa;AACX,QAAI5H,IAAI,GAAGsH,2BAA2B,EAAtC;;AAEA,QAAI,CAACtH,IAAL,EAAW;AACT,UAAM6H,UAAU,GACd,OAAOD,UAAP,KAAsB,QAAtB,GACIA,UADJ,GAEIA,UAAU,CAAC7J,WAAX,IAA0B6J,UAAU,CAAC3J,IAH3C;;AAIA,UAAI4J,UAAJ,EAAgB;AACd7H,QAAAA,IAAI,mDAAiD6H,UAAjD,OAAJ;AACD;AACF;;AACD,WAAO7H,IAAP;AACD;AACF;AAED;;;;;;;;;;;;;AAWA,SAAS8H,mBAAT,CAA6BpE,OAA7B,EAAsCkE,UAAtC,EAAkD;AAChD,EAAa;AACX,QAAI,CAAClE,OAAO,CAACmD,MAAT,IAAmBnD,OAAO,CAACmD,MAAR,CAAekB,SAAlC,IAA+CrE,OAAO,CAAC8B,GAAR,IAAe,IAAlE,EAAwE;AACtE;AACD;;AACD9B,IAAAA,OAAO,CAACmD,MAAR,CAAekB,SAAf,GAA2B,IAA3B;AAEA,QAAMC,yBAAyB,GAAGL,4BAA4B,CAACC,UAAD,CAA9D;;AACA,QAAIF,qBAAqB,CAACM,yBAAD,CAAzB,EAAsD;AACpD;AACD;;AACDN,IAAAA,qBAAqB,CAACM,yBAAD,CAArB,GAAmD,IAAnD,CAVW;AAaX;AACA;;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QACEvE,OAAO,IACPA,OAAO,CAACE,MADR,IAEAF,OAAO,CAACE,MAAR,KAAmB0B,mBAAiB,CAACnD,OAHvC,EAIE;AACA;AACA8F,MAAAA,UAAU,oCAAkC9J,wBAAwB,CAClEuF,OAAO,CAACE,MAAR,CAAetG,IADmD,CAA1D,MAAV;AAGD;;AAEDmG,IAAAA,+BAA6B,CAACC,OAAD,CAA7B;;AACA,UACE,0DACE,sEAFJ,EAGEsE,yBAHF,EAIEC,UAJF;;AAMAxE,IAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AAED;;;;;;;;;;;AASA,SAASyE,iBAAT,CAA2BC,IAA3B,EAAiCP,UAAjC,EAA6C;AAC3C,EAAa;AACX,QAAI,OAAOO,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACD;;AACD,QAAIvD,OAAO,CAACuD,IAAD,CAAX,EAAmB;AACjB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACtF,MAAzB,EAAiCuF,CAAC,EAAlC,EAAsC;AACpC,YAAMC,KAAK,GAAGF,IAAI,CAACC,CAAD,CAAlB;;AACA,YAAIhB,cAAc,CAACiB,KAAD,CAAlB,EAA2B;AACzBP,UAAAA,mBAAmB,CAACO,KAAD,EAAQT,UAAR,CAAnB;AACD;AACF;AACF,KAPD,MAOO,IAAIR,cAAc,CAACe,IAAD,CAAlB,EAA0B;AAC/B;AACA,UAAIA,IAAI,CAACtB,MAAT,EAAiB;AACfsB,QAAAA,IAAI,CAACtB,MAAL,CAAYkB,SAAZ,GAAwB,IAAxB;AACD;AACF,KALM,MAKA,IAAII,IAAJ,EAAU;AACf,UAAMG,UAAU,GAAG9M,aAAa,CAAC2M,IAAD,CAAhC;;AACA,UAAI,OAAOG,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACA;AACA,YAAIA,UAAU,KAAKH,IAAI,CAACI,OAAxB,EAAiC;AAC/B,cAAMjN,QAAQ,GAAGgN,UAAU,CAACxL,IAAX,CAAgBqL,IAAhB,CAAjB;AACA,cAAIK,IAAJ;;AACA,iBAAO,CAAC,CAACA,IAAI,GAAGlN,QAAQ,CAACmN,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrC,gBAAItB,cAAc,CAACoB,IAAI,CAAChI,KAAN,CAAlB,EAAgC;AAC9BsH,cAAAA,mBAAmB,CAACU,IAAI,CAAChI,KAAN,EAAaoH,UAAb,CAAnB;AACD;AACF;AACF;AACF;AACF;AACF;AACF;AAED;;;;;;;;AAMA,SAASe,iBAAT,CAA2BjF,OAA3B,EAAoC;AAClC,EAAa;AACX,QAAMpG,IAAI,GAAGoG,OAAO,CAACpG,IAArB;;AACA,QAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKI,SAA1B,IAAuC,OAAOJ,IAAP,KAAgB,QAA3D,EAAqE;AACnE;AACD;;AACD,QAAIsL,SAAJ;;AACA,QAAI,OAAOtL,IAAP,KAAgB,UAApB,EAAgC;AAC9BsL,MAAAA,SAAS,GAAGtL,IAAI,CAACsL,SAAjB;AACD,KAFD,MAEO,IACL,OAAOtL,IAAP,KAAgB,QAAhB,KACCA,IAAI,CAACE,QAAL,KAAkB1C,sBAAlB;AAEC;AACAwC,IAAAA,IAAI,CAACE,QAAL,KAAkBvC,eAJpB,CADK,EAML;AACA2N,MAAAA,SAAS,GAAGtL,IAAI,CAACsL,SAAjB;AACD,KARM,MAQA;AACL;AACD;;AACD,QAAIA,SAAJ,EAAe;AACb;AACA,UAAM3K,IAAI,GAAGE,wBAAwB,CAACb,IAAD,CAArC;AACAyG,MAAAA,cAAc,CAAC6E,SAAD,EAAYlF,OAAO,CAACrD,KAApB,EAA2B,MAA3B,EAAmCpC,IAAnC,EAAyCyF,OAAzC,CAAd;AACD,KAJD,MAIO,IAAIpG,IAAI,CAACuL,SAAL,KAAmBnL,SAAnB,IAAgC,CAACyJ,6BAArC,EAAoE;AACzEA,MAAAA,6BAA6B,GAAG,IAAhC,CADyE;;AAGzE,UAAMlJ,KAAI,GAAGE,wBAAwB,CAACb,IAAD,CAArC;;AACA,YACE,qGADF,EAEEW,KAAI,IAAI,SAFV;AAID;;AACD,QACE,OAAOX,IAAI,CAACwL,eAAZ,KAAgC,UAAhC,IACA,CAACxL,IAAI,CAACwL,eAAL,CAAqBC,oBAFxB,EAGE;AACA,YACE,+DACE,kEAFJ;AAID;AACF;AACF;AAED;;;;;;AAIA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,EAAa;AACX,QAAMC,IAAI,GAAG/J,MAAM,CAAC+J,IAAP,CAAYD,QAAQ,CAAC5I,KAArB,CAAb;;AACA,SAAK,IAAI+H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACrG,MAAzB,EAAiCuF,CAAC,EAAlC,EAAsC;AACpC,UAAM5C,GAAG,GAAG0D,IAAI,CAACd,CAAD,CAAhB;;AACA,UAAI5C,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,KAAlC,EAAyC;AACvC/B,QAAAA,+BAA6B,CAACwF,QAAD,CAA7B;;AACA,cACE,qDACE,0DAFJ,EAGEzD,GAHF;;AAKA/B,QAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACA;AACD;AACF;;AAED,QAAIwF,QAAQ,CAACxD,GAAT,KAAiB,IAArB,EAA2B;AACzBhC,MAAAA,+BAA6B,CAACwF,QAAD,CAA7B;;AACA,YAAc,uDAAd;;AACAxF,MAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AACF;;AAED,AAAO,SAAS0F,iBAAT,CACL7L,IADK,EAEL+C,KAFK,EAGLmF,GAHK,EAIL4D,gBAJK,EAKLrI,MALK,EAMLuF,IANK,EAOL;AACA,EAAa;AACX,QAAM+C,SAAS,GAAGhM,kBAAkB,CAACC,IAAD,CAApC,CADW;AAIX;;AACA,QAAI,CAAC+L,SAAL,EAAgB;AACd,UAAIrJ,IAAI,GAAG,EAAX;;AACA,UACE1C,IAAI,KAAKI,SAAT,IACC,OAAOJ,IAAP,KAAgB,QAAhB,IACCA,IAAI,KAAK,IADV,IAEC6B,MAAM,CAAC+J,IAAP,CAAY5L,IAAZ,EAAkBuF,MAAlB,KAA6B,CAJjC,EAKE;AACA7C,QAAAA,IAAI,IACF,+DACA,wEAFF;AAGD;;AAED,UAAMsJ,UAAU,GAAG/B,0BAA0B,CAACxG,MAAD,CAA7C;;AACA,UAAIuI,UAAJ,EAAgB;AACdtJ,QAAAA,IAAI,IAAIsJ,UAAR;AACD,OAFD,MAEO;AACLtJ,QAAAA,IAAI,IAAIsH,2BAA2B,EAAnC;AACD;;AAED,UAAIiC,UAAJ;;AACA,UAAIjM,IAAI,KAAK,IAAb,EAAmB;AACjBiM,QAAAA,UAAU,GAAG,MAAb;AACD,OAFD,MAEO,IAAI3E,OAAO,CAACtH,IAAD,CAAX,EAAmB;AACxBiM,QAAAA,UAAU,GAAG,OAAb;AACD,OAFM,MAEA,IAAIjM,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACE,QAAL,KAAkBpD,kBAA5C,EAAgE;AACrEmP,QAAAA,UAAU,UAAOpL,wBAAwB,CAACb,IAAI,CAACA,IAAN,CAAxB,IAAuC,SAA9C,SAAV;AACA0C,QAAAA,IAAI,GACF,oEADF;AAED,OAJM,MAIA;AACLuJ,QAAAA,UAAU,GAAG,OAAOjM,IAApB;AACD;;AAED,YACE,0DACE,0DADF,GAEE,4BAHJ,EAIEiM,UAJF,EAKEvJ,IALF;AAOD;;AAED,QAAM0D,OAAO,GAAGqD,MAAM,CAACzJ,IAAD,EAAO+C,KAAP,EAAcmF,GAAd,EAAmBzE,MAAnB,EAA2BuF,IAA3B,CAAtB,CA/CW;AAkDX;;AACA,QAAI5C,OAAO,IAAI,IAAf,EAAqB;AACnB,aAAOA,OAAP;AACD,KArDU;AAwDX;AACA;AACA;AACA;;;AAEA,QAAI2F,SAAJ,EAAe;AACb,UAAMG,QAAQ,GAAGnJ,KAAK,CAACmJ,QAAvB;;AACA,UAAIA,QAAQ,KAAK9L,SAAjB,EAA4B;AAC1B,YAAI0L,gBAAJ,EAAsB;AACpB,cAAIxE,OAAO,CAAC4E,QAAD,CAAX,EAAuB;AACrB,iBAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,QAAQ,CAAC3G,MAA7B,EAAqCuF,CAAC,EAAtC,EAA0C;AACxCF,cAAAA,iBAAiB,CAACsB,QAAQ,CAACpB,CAAD,CAAT,EAAc9K,IAAd,CAAjB;AACD;;AAED,gBAAI6B,MAAM,CAAC2H,MAAX,EAAmB;AACjB3H,cAAAA,MAAM,CAAC2H,MAAP,CAAc0C,QAAd;AACD;AACF,WARD,MAQO;AACL,kBACE,2DACE,gEADF,GAEE,kCAHJ;AAKD;AACF,SAhBD,MAgBO;AACLtB,UAAAA,iBAAiB,CAACsB,QAAD,EAAWlM,IAAX,CAAjB;AACD;AACF;AACF;;AAaD,QAAIA,IAAI,KAAK9C,mBAAb,EAAkC;AAChCwO,MAAAA,qBAAqB,CAACtF,OAAD,CAArB;AACD,KAFD,MAEO;AACLiF,MAAAA,iBAAiB,CAACjF,OAAD,CAAjB;AACD;;AAED,WAAOA,OAAP;AACD;AACF;;ICtYKqD,QAAM,GAAG0C,CAAUN,iBAAH;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js b/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js
new file mode 100644
index 0000000..b33d5b8
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js
@@ -0,0 +1,29 @@
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+
+const ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+const ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+
+const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+
+/**
+ * ReactElementValidator provides a wrapper around a element factory
+ * which validates the props passed to the element. This is intended to be
+ * used only in DEV and could be replaced by a static type checker for languages
+ * that support it.
+ */
+const ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+const ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const jsxDEV =  undefined;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsxDEV = jsxDEV;
+//# sourceMappingURL=react-jsx-dev-runtime.production.min.js.map
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js.map b/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js.map
new file mode 100644
index 0000000..d782e29
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.production.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-dev-runtime.production.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_FRAGMENT_TYPE","Symbol","for","ReactSharedInternals","React","ReactCurrentDispatcher","ReactDebugCurrentFrame","ReactCurrentOwner","jsxDEV","__DEV__","undefined"],"mappings":";;;;AASA;MAOaA,mBAAmB,GAAGC,MAAM,CAACC,GAAP,CAAW,gBAAX;;ACLnC,MAAMC,oBAAoB,GACxBC,wDADF;;MCkBOC,yBAA0BF,qBAA1BE;;ACbP,MAAMC,sBAAsB,GAAGH,oBAAoB,CAACG,sBAApD;;ACHA,MAAMC,iBAAiB,GAAGJ,oBAAoB,CAACI,iBAA/C;;ACNA;;;;;;AAMA,AAmBA,MAAMA,mBAAiB,GAAGJ,oBAAoB,CAACI,iBAA/C;AACA,MAAMD,wBAAsB,GAAGH,oBAAoB,CAACG,sBAApD;;MCdME,MAAM,GAAGC,CAA8BC,SAA7C;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js b/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js
new file mode 100644
index 0000000..041e943
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js
@@ -0,0 +1,29 @@
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+
+const ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+const ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+
+const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+
+/**
+ * ReactElementValidator provides a wrapper around a element factory
+ * which validates the props passed to the element. This is intended to be
+ * used only in DEV and could be replaced by a static type checker for languages
+ * that support it.
+ */
+const ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+const ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const jsxDEV =  undefined;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsxDEV = jsxDEV;
+//# sourceMappingURL=react-jsx-dev-runtime.profiling.min.js.map
diff --git a/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js.map b/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js.map
new file mode 100644
index 0000000..a498781
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-dev-runtime.profiling.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-dev-runtime.profiling.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_FRAGMENT_TYPE","Symbol","for","ReactSharedInternals","React","ReactCurrentDispatcher","ReactDebugCurrentFrame","ReactCurrentOwner","jsxDEV","__DEV__","undefined"],"mappings":";;;;AASA;MAOaA,mBAAmB,GAAGC,MAAM,CAACC,GAAP,CAAW,gBAAX;;ACLnC,MAAMC,oBAAoB,GACxBC,wDADF;;MCkBOC,yBAA0BF,qBAA1BE;;ACbP,MAAMC,sBAAsB,GAAGH,oBAAoB,CAACG,sBAApD;;ACHA,MAAMC,iBAAiB,GAAGJ,oBAAoB,CAACI,iBAA/C;;ACNA;;;;;;AAMA,AAmBA,MAAMA,mBAAiB,GAAGJ,oBAAoB,CAACI,iBAA/C;AACA,MAAMD,wBAAsB,GAAGH,oBAAoB,CAACG,sBAApD;;MCdME,MAAM,GAAGC,CAA8BC,SAA7C;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react-jsx-runtime.development.js b/node_modules/react/cjs/react-jsx-runtime.development.js
index 629f00a..897ae2e 100644
--- a/node_modules/react/cjs/react-jsx-runtime.development.js
+++ b/node_modules/react/cjs/react-jsx-runtime.development.js
@@ -1,358 +1,1314 @@
-/**
- * @license React
- * react-jsx-runtime.development.js
- *
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+var REACT_ELEMENT_TYPE = Symbol.for('react.element');
+var REACT_PORTAL_TYPE = Symbol.for('react.portal');
+var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+var REACT_CONTEXT_TYPE = Symbol.for('react.context');
+var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+var REACT_MEMO_TYPE = Symbol.for('react.memo');
+var REACT_LAZY_TYPE = Symbol.for('react.lazy');
+var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+var REACT_CACHE_TYPE = Symbol.for('react.cache');
+var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+function error(format) {
+  {
+    {
+      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
+        args[_key2 - 1] = arguments[_key2];
+      }
+
+      printWarning('error', format, args);
+    }
+  }
+}
+
+function printWarning(level, format, args) {
+  // When changing this logic, you might want to also
+  // update consoleWithStackDev.www.js as well.
+  {
+    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+    var stack = ReactDebugCurrentFrame.getStackAddendum();
+
+    if (stack !== '') {
+      format += '%s';
+      args = args.concat([stack]);
+    } // eslint-disable-next-line react-internal/safe-string-coercion
+
+
+    var argsWithFormat = args.map(function (item) {
+      return String(item);
+    }); // Careful: RN currently depends on this prefix
+
+    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
+    // breaks IE9: https://github.com/facebook/react/issues/13610
+    // eslint-disable-next-line react-internal/no-production-logging
+
+    Function.prototype.apply.call(console[level], console, argsWithFormat);
+  }
+}
+
+// -----------------------------------------------------------------------------
+
+var enableScopeAPI = false; // Experimental Create Event Handle API.
+var enableTransitionTracing = false; // No known bugs, but needs performance testing
+
+var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
+// stuff. Intended to enable React core members to more easily debug scheduling
+// issues in DEV builds.
+
+var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
+
+var REACT_MODULE_REFERENCE;
+
+{
+  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
+}
+
+function isValidElementType(type) {
+  if (typeof type === 'string' || typeof type === 'function') {
+    return true;
+  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
+
+
+  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  ||  type === REACT_CACHE_TYPE || enableTransitionTracing ) {
+    return true;
+  }
+
+  if (typeof type === 'object' && type !== null) {
+    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
+    // types supported by any Flight configuration anywhere since
+    // we don't know which Flight build this will end up being used
+    // with.
+    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
+      return true;
+    }
+  }
+
+  return false;
+}
+
+function getWrappedName(outerType, innerType, wrapperName) {
+  var displayName = outerType.displayName;
+
+  if (displayName) {
+    return displayName;
+  }
+
+  var functionName = innerType.displayName || innerType.name || '';
+  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
+} // Keep in sync with react-reconciler/getComponentNameFromFiber
+
+
+function getContextName(type) {
+  return type.displayName || 'Context';
+} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
+
+
+function getComponentNameFromType(type) {
+  if (type == null) {
+    // Host root, text node or just invalid type.
+    return null;
+  }
+
+  {
+    if (typeof type.tag === 'number') {
+      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
+    }
+  }
+
+  if (typeof type === 'function') {
+    return type.displayName || type.name || null;
+  }
+
+  if (typeof type === 'string') {
+    return type;
+  }
+
+  switch (type) {
+    case REACT_FRAGMENT_TYPE:
+      return 'Fragment';
 
-"use strict";
-"production" !== process.env.NODE_ENV &&
-  (function () {
-    function getComponentNameFromType(type) {
-      if (null == type) return null;
-      if ("function" === typeof type)
-        return type.$$typeof === REACT_CLIENT_REFERENCE
-          ? null
-          : type.displayName || type.name || null;
-      if ("string" === typeof type) return type;
-      switch (type) {
-        case REACT_FRAGMENT_TYPE:
-          return "Fragment";
-        case REACT_PROFILER_TYPE:
-          return "Profiler";
-        case REACT_STRICT_MODE_TYPE:
-          return "StrictMode";
-        case REACT_SUSPENSE_TYPE:
-          return "Suspense";
-        case REACT_SUSPENSE_LIST_TYPE:
-          return "SuspenseList";
-        case REACT_ACTIVITY_TYPE:
-          return "Activity";
+    case REACT_PORTAL_TYPE:
+      return 'Portal';
+
+    case REACT_PROFILER_TYPE:
+      return 'Profiler';
+
+    case REACT_STRICT_MODE_TYPE:
+      return 'StrictMode';
+
+    case REACT_SUSPENSE_TYPE:
+      return 'Suspense';
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return 'SuspenseList';
+
+    case REACT_CACHE_TYPE:
+      {
+        return 'Cache';
       }
-      if ("object" === typeof type)
-        switch (
-          ("number" === typeof type.tag &&
-            console.error(
-              "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
-            ),
-          type.$$typeof)
-        ) {
-          case REACT_PORTAL_TYPE:
-            return "Portal";
-          case REACT_CONTEXT_TYPE:
-            return (type.displayName || "Context") + ".Provider";
-          case REACT_CONSUMER_TYPE:
-            return (type._context.displayName || "Context") + ".Consumer";
-          case REACT_FORWARD_REF_TYPE:
-            var innerType = type.render;
-            type = type.displayName;
-            type ||
-              ((type = innerType.displayName || innerType.name || ""),
-              (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
-            return type;
-          case REACT_MEMO_TYPE:
-            return (
-              (innerType = type.displayName || null),
-              null !== innerType
-                ? innerType
-                : getComponentNameFromType(type.type) || "Memo"
-            );
-          case REACT_LAZY_TYPE:
-            innerType = type._payload;
-            type = type._init;
-            try {
-              return getComponentNameFromType(type(innerType));
-            } catch (x) {}
+
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_CONTEXT_TYPE:
+        var context = type;
+        return getContextName(context) + '.Consumer';
+
+      case REACT_PROVIDER_TYPE:
+        var provider = type;
+        return getContextName(provider._context) + '.Provider';
+
+      case REACT_FORWARD_REF_TYPE:
+        return getWrappedName(type, type.render, 'ForwardRef');
+
+      case REACT_MEMO_TYPE:
+        var outerName = type.displayName || null;
+
+        if (outerName !== null) {
+          return outerName;
         }
-      return null;
+
+        return getComponentNameFromType(type.type) || 'Memo';
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            return getComponentNameFromType(init(payload));
+          } catch (x) {
+            return null;
+          }
+        }
+
+      case REACT_SERVER_CONTEXT_TYPE:
+        {
+          var context2 = type;
+          return (context2.displayName || context2._globalName) + '.Provider';
+        }
+
+      // eslint-disable-next-line no-fallthrough
+    }
+  }
+
+  return null;
+}
+
+var assign = Object.assign;
+
+// Helpers to patch console.logs to avoid logging during side-effect free
+// replaying on render function. This currently only patches the object
+// lazily which won't cover if the log function was extracted eagerly.
+// We could also eagerly patch the method.
+var disabledDepth = 0;
+var prevLog;
+var prevInfo;
+var prevWarn;
+var prevError;
+var prevGroup;
+var prevGroupCollapsed;
+var prevGroupEnd;
+
+function disabledLog() {}
+
+disabledLog.__reactDisabledLog = true;
+function disableLogs() {
+  {
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      prevLog = console.log;
+      prevInfo = console.info;
+      prevWarn = console.warn;
+      prevError = console.error;
+      prevGroup = console.group;
+      prevGroupCollapsed = console.groupCollapsed;
+      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
+
+      var props = {
+        configurable: true,
+        enumerable: true,
+        value: disabledLog,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        info: props,
+        log: props,
+        warn: props,
+        error: props,
+        group: props,
+        groupCollapsed: props,
+        groupEnd: props
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    disabledDepth++;
+  }
+}
+function reenableLogs() {
+  {
+    disabledDepth--;
+
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      var props = {
+        configurable: true,
+        enumerable: true,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        log: assign({}, props, {
+          value: prevLog
+        }),
+        info: assign({}, props, {
+          value: prevInfo
+        }),
+        warn: assign({}, props, {
+          value: prevWarn
+        }),
+        error: assign({}, props, {
+          value: prevError
+        }),
+        group: assign({}, props, {
+          value: prevGroup
+        }),
+        groupCollapsed: assign({}, props, {
+          value: prevGroupCollapsed
+        }),
+        groupEnd: assign({}, props, {
+          value: prevGroupEnd
+        })
+      });
+      /* eslint-enable react-internal/no-production-logging */
     }
-    function testStringCoercion(value) {
-      return "" + value;
+
+    if (disabledDepth < 0) {
+      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
     }
-    function checkKeyStringCoercion(value) {
+  }
+}
+
+var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+var prefix;
+function describeBuiltInComponentFrame(name, source, ownerFn) {
+  {
+    if (prefix === undefined) {
+      // Extract the VM specific prefix used by each line.
       try {
-        testStringCoercion(value);
-        var JSCompiler_inline_result = !1;
-      } catch (e) {
-        JSCompiler_inline_result = !0;
-      }
-      if (JSCompiler_inline_result) {
-        JSCompiler_inline_result = console;
-        var JSCompiler_temp_const = JSCompiler_inline_result.error;
-        var JSCompiler_inline_result$jscomp$0 =
-          ("function" === typeof Symbol &&
-            Symbol.toStringTag &&
-            value[Symbol.toStringTag]) ||
-          value.constructor.name ||
-          "Object";
-        JSCompiler_temp_const.call(
-          JSCompiler_inline_result,
-          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
-          JSCompiler_inline_result$jscomp$0
-        );
-        return testStringCoercion(value);
+        throw Error();
+      } catch (x) {
+        var match = x.stack.trim().match(/\n( *(at )?)/);
+        prefix = match && match[1] || '';
       }
+    } // We use the prefix to ensure our stacks line up with native stack frames.
+
+
+    return '\n' + prefix + name;
+  }
+}
+var reentry = false;
+var componentFrameCache;
+
+{
+  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
+  componentFrameCache = new PossiblyWeakMap();
+}
+
+function describeNativeComponentFrame(fn, construct) {
+  // If something asked for a stack inside a fake render, it should get ignored.
+  if ( !fn || reentry) {
+    return '';
+  }
+
+  {
+    var frame = componentFrameCache.get(fn);
+
+    if (frame !== undefined) {
+      return frame;
     }
-    function getTaskName(type) {
-      if (type === REACT_FRAGMENT_TYPE) return "<>";
-      if (
-        "object" === typeof type &&
-        null !== type &&
-        type.$$typeof === REACT_LAZY_TYPE
-      )
-        return "<...>";
+  }
+
+  var control;
+  reentry = true;
+  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
+
+  Error.prepareStackTrace = undefined;
+  var previousDispatcher;
+
+  {
+    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
+    // for warnings.
+
+    ReactCurrentDispatcher.current = null;
+    disableLogs();
+  }
+
+  try {
+    // This should throw.
+    if (construct) {
+      // Something should be setting the props in the constructor.
+      var Fake = function () {
+        throw Error();
+      }; // $FlowFixMe
+
+
+      Object.defineProperty(Fake.prototype, 'props', {
+        set: function () {
+          // We use a throwing setter instead of frozen or non-writable props
+          // because that won't throw in a non-strict mode function.
+          throw Error();
+        }
+      });
+
+      if (typeof Reflect === 'object' && Reflect.construct) {
+        // We construct a different control for this case to include any extra
+        // frames added by the construct call.
+        try {
+          Reflect.construct(Fake, []);
+        } catch (x) {
+          control = x;
+        }
+
+        Reflect.construct(fn, [], Fake);
+      } else {
+        try {
+          Fake.call();
+        } catch (x) {
+          control = x;
+        }
+
+        fn.call(Fake.prototype);
+      }
+    } else {
       try {
-        var name = getComponentNameFromType(type);
-        return name ? "<" + name + ">" : "<...>";
+        throw Error();
       } catch (x) {
-        return "<...>";
+        control = x;
+      } // TODO(luna): This will currently only throw if the function component
+      // tries to access React/ReactDOM/props. We should probably make this throw
+      // in simple components too
+
+
+      fn();
+    }
+  } catch (sample) {
+    // This is inlined manually because closure doesn't do it for us.
+    if (sample && control && typeof sample.stack === 'string') {
+      // This extracts the first frame from the sample that isn't also in the control.
+      // Skipping one frame that we assume is the frame that calls the two.
+      var sampleLines = sample.stack.split('\n');
+      var controlLines = control.stack.split('\n');
+      var s = sampleLines.length - 1;
+      var c = controlLines.length - 1;
+
+      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
+        // We expect at least one stack frame to be shared.
+        // Typically this will be the root most one. However, stack frames may be
+        // cut off due to maximum stack limits. In this case, one maybe cut off
+        // earlier than the other. We assume that the sample is longer or the same
+        // and there for cut off earlier. So we should find the root most frame in
+        // the sample somewhere in the control.
+        c--;
+      }
+
+      for (; s >= 1 && c >= 0; s--, c--) {
+        // Next we find the first one that isn't the same which should be the
+        // frame that called our sample function and the control.
+        if (sampleLines[s] !== controlLines[c]) {
+          // In V8, the first line is describing the message but other VMs don't.
+          // If we're about to return the first line, and the control is also on the same
+          // line, that's a pretty good indicator that our sample threw at same line as
+          // the control. I.e. before we entered the sample frame. So we ignore this result.
+          // This can happen if you passed a class to function component, or non-function.
+          if (s !== 1 || c !== 1) {
+            do {
+              s--;
+              c--; // We may still have similar intermediate frames from the construct call.
+              // The next one that isn't the same should be our match though.
+
+              if (c < 0 || sampleLines[s] !== controlLines[c]) {
+                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
+                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
+                // but we have a user-provided "displayName"
+                // splice it in to make the stack more readable.
+
+
+                if (fn.displayName && _frame.includes('<anonymous>')) {
+                  _frame = _frame.replace('<anonymous>', fn.displayName);
+                }
+
+                {
+                  if (typeof fn === 'function') {
+                    componentFrameCache.set(fn, _frame);
+                  }
+                } // Return the line we found.
+
+
+                return _frame;
+              }
+            } while (s >= 1 && c >= 0);
+          }
+
+          break;
+        }
       }
     }
-    function getOwner() {
-      var dispatcher = ReactSharedInternals.A;
-      return null === dispatcher ? null : dispatcher.getOwner();
+  } finally {
+    reentry = false;
+
+    {
+      ReactCurrentDispatcher.current = previousDispatcher;
+      reenableLogs();
+    }
+
+    Error.prepareStackTrace = previousPrepareStackTrace;
+  } // Fallback to just using the name if we couldn't make it throw.
+
+
+  var name = fn ? fn.displayName || fn.name : '';
+  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
+
+  {
+    if (typeof fn === 'function') {
+      componentFrameCache.set(fn, syntheticFrame);
+    }
+  }
+
+  return syntheticFrame;
+}
+function describeFunctionComponentFrame(fn, source, ownerFn) {
+  {
+    return describeNativeComponentFrame(fn, false);
+  }
+}
+
+function shouldConstruct(Component) {
+  var prototype = Component.prototype;
+  return !!(prototype && prototype.isReactComponent);
+}
+
+function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
+
+  if (type == null) {
+    return '';
+  }
+
+  if (typeof type === 'function') {
+    {
+      return describeNativeComponentFrame(type, shouldConstruct(type));
+    }
+  }
+
+  if (typeof type === 'string') {
+    return describeBuiltInComponentFrame(type);
+  }
+
+  switch (type) {
+    case REACT_SUSPENSE_TYPE:
+      return describeBuiltInComponentFrame('Suspense');
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return describeBuiltInComponentFrame('SuspenseList');
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_FORWARD_REF_TYPE:
+        return describeFunctionComponentFrame(type.render);
+
+      case REACT_MEMO_TYPE:
+        // Memo may contain any component type so we recursively resolve it.
+        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            // Lazy may contain any component type so we recursively resolve it.
+            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
+          } catch (x) {}
+        }
     }
-    function UnknownOwner() {
-      return Error("react-stack-top-frame");
+  }
+
+  return '';
+}
+
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+var loggedTypeFailures = {};
+var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame.setExtraStackFrame(null);
     }
-    function hasValidKey(config) {
-      if (hasOwnProperty.call(config, "key")) {
-        var getter = Object.getOwnPropertyDescriptor(config, "key").get;
-        if (getter && getter.isReactWarning) return !1;
+  }
+}
+
+function checkPropTypes(typeSpecs, values, location, componentName, element) {
+  {
+    // $FlowFixMe This is okay but Flow doesn't know it.
+    var has = Function.call.bind(hasOwnProperty);
+
+    for (var typeSpecName in typeSpecs) {
+      if (has(typeSpecs, typeSpecName)) {
+        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
+        // fail the render phase where it didn't fail before. So we log it.
+        // After these have been cleaned up, we'll let them throw.
+
+        try {
+          // This is intentionally an invariant that gets caught. It's the same
+          // behavior as without this statement except with a better message.
+          if (typeof typeSpecs[typeSpecName] !== 'function') {
+            // eslint-disable-next-line react-internal/prod-error-codes
+            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
+            err.name = 'Invariant Violation';
+            throw err;
+          }
+
+          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
+        } catch (ex) {
+          error$1 = ex;
+        }
+
+        if (error$1 && !(error$1 instanceof Error)) {
+          setCurrentlyValidatingElement(element);
+
+          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
+
+          setCurrentlyValidatingElement(null);
+        }
+
+        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
+          // Only monitor this failure once because there tends to be a lot of the
+          // same error.
+          loggedTypeFailures[error$1.message] = true;
+          setCurrentlyValidatingElement(element);
+
+          error('Failed %s type: %s', location, error$1.message);
+
+          setCurrentlyValidatingElement(null);
+        }
       }
-      return void 0 !== config.key;
-    }
-    function defineKeyPropWarningGetter(props, displayName) {
-      function warnAboutAccessingKey() {
-        specialPropKeyWarningShown ||
-          ((specialPropKeyWarningShown = !0),
-          console.error(
-            "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)",
-            displayName
-          ));
+    }
+  }
+}
+
+var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+/*
+ * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
+ * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
+ *
+ * The functions in this module will throw an easier-to-understand,
+ * easier-to-debug exception with a clear errors message message explaining the
+ * problem. (Instead of a confusing exception thrown inside the implementation
+ * of the `value` object).
+ */
+// $FlowFixMe only called in DEV, so void return is not possible.
+function typeName(value) {
+  {
+    // toStringTag is needed for namespaced types like Temporal.Instant
+    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
+    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
+    return type;
+  }
+} // $FlowFixMe only called in DEV, so void return is not possible.
+
+
+function willCoercionThrow(value) {
+  {
+    try {
+      testStringCoercion(value);
+      return false;
+    } catch (e) {
+      return true;
+    }
+  }
+}
+
+function testStringCoercion(value) {
+  // If you ended up here by following an exception call stack, here's what's
+  // happened: you supplied an object or symbol value to React (as a prop, key,
+  // DOM attribute, CSS property, string ref, etc.) and when React tried to
+  // coerce it to a string using `'' + value`, an exception was thrown.
+  //
+  // The most common types that will cause this exception are `Symbol` instances
+  // and Temporal objects like `Temporal.Instant`. But any object that has a
+  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
+  // exception. (Library authors do this to prevent users from using built-in
+  // numeric operators like `+` or comparison operators like `>=` because custom
+  // methods are needed to perform accurate arithmetic or comparison.)
+  //
+  // To fix the problem, coerce this object or symbol value to a string before
+  // passing it to React. The most reliable way is usually `String(value)`.
+  //
+  // To find which value is throwing, check the browser or debugger console.
+  // Before this exception was thrown, there should be `console.error` output
+  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
+  // problem and how that type was used: key, atrribute, input value prop, etc.
+  // In most cases, this console output also shows the component and its
+  // ancestor components where the exception happened.
+  //
+  // eslint-disable-next-line react-internal/safe-string-coercion
+  return '' + value;
+}
+function checkKeyStringCoercion(value) {
+  {
+    if (willCoercionThrow(value)) {
+      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
+
+      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
+    }
+  }
+}
+
+var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+var RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+var specialPropKeyWarningShown;
+var specialPropRefWarningShown;
+var didWarnAboutStringRefs;
+
+{
+  didWarnAboutStringRefs = {};
+}
+
+function hasValidRef(config) {
+  {
+    if (hasOwnProperty.call(config, 'ref')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
       }
-      warnAboutAccessingKey.isReactWarning = !0;
-      Object.defineProperty(props, "key", {
-        get: warnAboutAccessingKey,
-        configurable: !0
-      });
     }
-    function elementRefGetterWithDeprecationWarning() {
-      var componentName = getComponentNameFromType(this.type);
-      didWarnAboutElementRef[componentName] ||
-        ((didWarnAboutElementRef[componentName] = !0),
-        console.error(
-          "Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."
-        ));
-      componentName = this.props.ref;
-      return void 0 !== componentName ? componentName : null;
-    }
-    function ReactElement(
-      type,
-      key,
-      self,
-      source,
-      owner,
-      props,
-      debugStack,
-      debugTask
-    ) {
-      self = props.ref;
-      type = {
-        $$typeof: REACT_ELEMENT_TYPE,
-        type: type,
-        key: key,
-        props: props,
-        _owner: owner
-      };
-      null !== (void 0 !== self ? self : null)
-        ? Object.defineProperty(type, "ref", {
-            enumerable: !1,
-            get: elementRefGetterWithDeprecationWarning
-          })
-        : Object.defineProperty(type, "ref", { enumerable: !1, value: null });
-      type._store = {};
-      Object.defineProperty(type._store, "validated", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: 0
-      });
-      Object.defineProperty(type, "_debugInfo", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: null
-      });
-      Object.defineProperty(type, "_debugStack", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugStack
-      });
-      Object.defineProperty(type, "_debugTask", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugTask
-      });
-      Object.freeze && (Object.freeze(type.props), Object.freeze(type));
-      return type;
-    }
-    function jsxDEVImpl(
-      type,
-      config,
-      maybeKey,
-      isStaticChildren,
-      source,
-      self,
-      debugStack,
-      debugTask
-    ) {
-      var children = config.children;
-      if (void 0 !== children)
-        if (isStaticChildren)
-          if (isArrayImpl(children)) {
-            for (
-              isStaticChildren = 0;
-              isStaticChildren < children.length;
-              isStaticChildren++
-            )
-              validateChildKeys(children[isStaticChildren]);
-            Object.freeze && Object.freeze(children);
-          } else
-            console.error(
-              "React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead."
-            );
-        else validateChildKeys(children);
-      if (hasOwnProperty.call(config, "key")) {
-        children = getComponentNameFromType(type);
-        var keys = Object.keys(config).filter(function (k) {
-          return "key" !== k;
-        });
-        isStaticChildren =
-          0 < keys.length
-            ? "{key: someKey, " + keys.join(": ..., ") + ": ...}"
-            : "{key: someKey}";
-        didWarnAboutKeySpread[children + isStaticChildren] ||
-          ((keys =
-            0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}"),
-          console.error(
-            'A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />',
-            isStaticChildren,
-            children,
-            keys,
-            children
-          ),
-          (didWarnAboutKeySpread[children + isStaticChildren] = !0));
+  }
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+  {
+    if (hasOwnProperty.call(config, 'key')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
       }
-      children = null;
-      void 0 !== maybeKey &&
-        (checkKeyStringCoercion(maybeKey), (children = "" + maybeKey));
-      hasValidKey(config) &&
-        (checkKeyStringCoercion(config.key), (children = "" + config.key));
-      if ("key" in config) {
-        maybeKey = {};
-        for (var propName in config)
-          "key" !== propName && (maybeKey[propName] = config[propName]);
-      } else maybeKey = config;
-      children &&
-        defineKeyPropWarningGetter(
-          maybeKey,
-          "function" === typeof type
-            ? type.displayName || type.name || "Unknown"
-            : type
-        );
-      return ReactElement(
-        type,
-        children,
-        self,
-        source,
-        getOwner(),
-        maybeKey,
-        debugStack,
-        debugTask
-      );
-    }
-    function validateChildKeys(node) {
-      "object" === typeof node &&
-        null !== node &&
-        node.$$typeof === REACT_ELEMENT_TYPE &&
-        node._store &&
-        (node._store.validated = 1);
-    }
-    var React = require("react"),
-      REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
-      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
-      REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
-      REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
-      REACT_PROFILER_TYPE = Symbol.for("react.profiler");
-    Symbol.for("react.provider");
-    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
-      REACT_CONTEXT_TYPE = Symbol.for("react.context"),
-      REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
-      REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
-      REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
-      REACT_MEMO_TYPE = Symbol.for("react.memo"),
-      REACT_LAZY_TYPE = Symbol.for("react.lazy"),
-      REACT_ACTIVITY_TYPE = Symbol.for("react.activity"),
-      REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"),
-      ReactSharedInternals =
-        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
-      hasOwnProperty = Object.prototype.hasOwnProperty,
-      isArrayImpl = Array.isArray,
-      createTask = console.createTask
-        ? console.createTask
-        : function () {
-            return null;
-          };
-    React = {
-      react_stack_bottom_frame: function (callStackForError) {
-        return callStackForError();
+    }
+  }
+
+  return config.key !== undefined;
+}
+
+function warnIfStringRefCannotBeAutoConverted(config, self) {
+  {
+    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
+      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+      if (!didWarnAboutStringRefs[componentName]) {
+        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
+
+        didWarnAboutStringRefs[componentName] = true;
+      }
+    }
+  }
+}
+
+function defineKeyPropWarningGetter(props, displayName) {
+  {
+    var warnAboutAccessingKey = function () {
+      if (!specialPropKeyWarningShown) {
+        specialPropKeyWarningShown = true;
+
+        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
       }
     };
-    var specialPropKeyWarningShown;
-    var didWarnAboutElementRef = {};
-    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(
-      React,
-      UnknownOwner
-    )();
-    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
-    var didWarnAboutKeySpread = {};
-    exports.Fragment = REACT_FRAGMENT_TYPE;
-    exports.jsx = function (type, config, maybeKey, source, self) {
-      var trackActualOwner =
-        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
-      return jsxDEVImpl(
-        type,
-        config,
-        maybeKey,
-        !1,
-        source,
-        self,
-        trackActualOwner
-          ? Error("react-stack-top-frame")
-          : unknownOwnerDebugStack,
-        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask
-      );
-    };
-    exports.jsxs = function (type, config, maybeKey, source, self) {
-      var trackActualOwner =
-        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
-      return jsxDEVImpl(
-        type,
-        config,
-        maybeKey,
-        !0,
-        source,
-        self,
-        trackActualOwner
-          ? Error("react-stack-top-frame")
-          : unknownOwnerDebugStack,
-        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask
-      );
+
+    warnAboutAccessingKey.isReactWarning = true;
+    Object.defineProperty(props, 'key', {
+      get: warnAboutAccessingKey,
+      configurable: true
+    });
+  }
+}
+
+function defineRefPropWarningGetter(props, displayName) {
+  {
+    var warnAboutAccessingRef = function () {
+      if (!specialPropRefWarningShown) {
+        specialPropRefWarningShown = true;
+
+        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
     };
-  })();
+
+    warnAboutAccessingRef.isReactWarning = true;
+    Object.defineProperty(props, 'ref', {
+      get: warnAboutAccessingRef,
+      configurable: true
+    });
+  }
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+var ReactElement = function (type, key, ref, self, source, owner, props) {
+  var element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  {
+    // The validation flag is currently mutative. We put it on
+    // an external backing store so that we can freeze the whole object.
+    // This can be replaced with a WeakMap once they are implemented in
+    // commonly used development environments.
+    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
+    // the validation flag non-enumerable (where possible, which should
+    // include every environment we run tests in), so the test framework
+    // ignores it.
+
+    Object.defineProperty(element._store, 'validated', {
+      configurable: false,
+      enumerable: false,
+      writable: true,
+      value: false
+    }); // self and source are DEV only properties.
+
+    Object.defineProperty(element, '_self', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: self
+    }); // Two elements created in two different places should be considered
+    // equal for testing purposes and therefore we hide it from enumeration.
+
+    Object.defineProperty(element, '_source', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: source
+    });
+
+    if (Object.freeze) {
+      Object.freeze(element.props);
+      Object.freeze(element);
+    }
+  }
+
+  return element;
+};
+/**
+ * https://github.com/reactjs/rfcs/pull/107
+ * @param {*} type
+ * @param {object} props
+ * @param {string} key
+ */
+
+function jsxDEV(type, config, maybeKey, source, self) {
+  {
+    var propName; // Reserved names are extracted
+
+    var props = {};
+    var key = null;
+    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
+    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
+    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
+    // but as an intermediary step, we will use jsxDEV for everything except
+    // <div {...props} key="Hi" />, because we aren't currently able to tell if
+    // key is explicitly declared to be undefined or not.
+
+    if (maybeKey !== undefined) {
+      {
+        checkKeyStringCoercion(maybeKey);
+      }
+
+      key = '' + maybeKey;
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    }
+
+    if (hasValidRef(config)) {
+      ref = config.ref;
+      warnIfStringRefCannotBeAutoConverted(config, self);
+    } // Remaining properties are added to a new props object
+
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    } // Resolve default props
+
+
+    if (type && type.defaultProps) {
+      var defaultProps = type.defaultProps;
+
+      for (propName in defaultProps) {
+        if (props[propName] === undefined) {
+          props[propName] = defaultProps[propName];
+        }
+      }
+    }
+
+    if (key || ref) {
+      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
+
+      if (key) {
+        defineKeyPropWarningGetter(props, displayName);
+      }
+
+      if (ref) {
+        defineRefPropWarningGetter(props, displayName);
+      }
+    }
+
+    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+  }
+}
+
+var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement$1(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
+    }
+  }
+}
+
+var propTypesMisspellWarningShown;
+
+{
+  propTypesMisspellWarningShown = false;
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+
+function isValidElement(object) {
+  {
+    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+  }
+}
+
+function getDeclarationErrorAddendum() {
+  {
+    if (ReactCurrentOwner$1.current) {
+      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
+
+      if (name) {
+        return '\n\nCheck the render method of `' + name + '`.';
+      }
+    }
+
+    return '';
+  }
+}
+
+function getSourceInfoErrorAddendum(source) {
+  {
+    if (source !== undefined) {
+      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
+      var lineNumber = source.lineNumber;
+      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
+    }
+
+    return '';
+  }
+}
+/**
+ * Warn if there's no key explicitly set on dynamic arrays of children or
+ * object keys are not valid. This allows us to keep track of children between
+ * updates.
+ */
+
+
+var ownerHasKeyUseWarning = {};
+
+function getCurrentComponentErrorInfo(parentType) {
+  {
+    var info = getDeclarationErrorAddendum();
+
+    if (!info) {
+      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
+
+      if (parentName) {
+        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
+      }
+    }
+
+    return info;
+  }
+}
+/**
+ * Warn if the element doesn't have an explicit key assigned to it.
+ * This element is in an array. The array could grow and shrink or be
+ * reordered. All children that haven't already been validated are required to
+ * have a "key" property assigned to it. Error statuses are cached so a warning
+ * will only be shown once.
+ *
+ * @internal
+ * @param {ReactElement} element Element that requires a key.
+ * @param {*} parentType element's parent's type.
+ */
+
+
+function validateExplicitKey(element, parentType) {
+  {
+    if (!element._store || element._store.validated || element.key != null) {
+      return;
+    }
+
+    element._store.validated = true;
+    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
+
+    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
+      return;
+    }
+
+    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
+    // property, it may be the creator of the child that's responsible for
+    // assigning it a key.
+
+    var childOwner = '';
+
+    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
+      // Give the component that originally created this child.
+      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
+    }
+
+    setCurrentlyValidatingElement$1(element);
+
+    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
+
+    setCurrentlyValidatingElement$1(null);
+  }
+}
+/**
+ * Ensure that every element either is passed in a static location, in an
+ * array with an explicit keys property defined, or in an object literal
+ * with valid key property.
+ *
+ * @internal
+ * @param {ReactNode} node Statically passed child of any type.
+ * @param {*} parentType node's parent's type.
+ */
+
+
+function validateChildKeys(node, parentType) {
+  {
+    if (typeof node !== 'object') {
+      return;
+    }
+
+    if (isArray(node)) {
+      for (var i = 0; i < node.length; i++) {
+        var child = node[i];
+
+        if (isValidElement(child)) {
+          validateExplicitKey(child, parentType);
+        }
+      }
+    } else if (isValidElement(node)) {
+      // This element was passed in a valid location.
+      if (node._store) {
+        node._store.validated = true;
+      }
+    } else if (node) {
+      var iteratorFn = getIteratorFn(node);
+
+      if (typeof iteratorFn === 'function') {
+        // Entry iterators used to provide implicit keys,
+        // but now we print a separate warning for them later.
+        if (iteratorFn !== node.entries) {
+          var iterator = iteratorFn.call(node);
+          var step;
+
+          while (!(step = iterator.next()).done) {
+            if (isValidElement(step.value)) {
+              validateExplicitKey(step.value, parentType);
+            }
+          }
+        }
+      }
+    }
+  }
+}
+/**
+ * Given an element, validate that its props follow the propTypes definition,
+ * provided by the type.
+ *
+ * @param {ReactElement} element
+ */
+
+
+function validatePropTypes(element) {
+  {
+    var type = element.type;
+
+    if (type === null || type === undefined || typeof type === 'string') {
+      return;
+    }
+
+    var propTypes;
+
+    if (typeof type === 'function') {
+      propTypes = type.propTypes;
+    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
+    // Inner props are checked in the reconciler.
+    type.$$typeof === REACT_MEMO_TYPE)) {
+      propTypes = type.propTypes;
+    } else {
+      return;
+    }
+
+    if (propTypes) {
+      // Intentionally inside to avoid triggering lazy initializers:
+      var name = getComponentNameFromType(type);
+      checkPropTypes(propTypes, element.props, 'prop', name, element);
+    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
+      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
+
+      var _name = getComponentNameFromType(type);
+
+      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
+    }
+
+    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
+      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
+    }
+  }
+}
+/**
+ * Given a fragment, validate that it can only be provided with fragment props
+ * @param {ReactElement} fragment
+ */
+
+
+function validateFragmentProps(fragment) {
+  {
+    var keys = Object.keys(fragment.props);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+
+      if (key !== 'children' && key !== 'key') {
+        setCurrentlyValidatingElement$1(fragment);
+
+        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
+
+        setCurrentlyValidatingElement$1(null);
+        break;
+      }
+    }
+
+    if (fragment.ref !== null) {
+      setCurrentlyValidatingElement$1(fragment);
+
+      error('Invalid attribute `ref` supplied to `React.Fragment`.');
+
+      setCurrentlyValidatingElement$1(null);
+    }
+  }
+}
+
+function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
+  {
+    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
+    // succeed and there will likely be errors in render.
+
+    if (!validType) {
+      var info = '';
+
+      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
+        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
+      }
+
+      var sourceInfo = getSourceInfoErrorAddendum(source);
+
+      if (sourceInfo) {
+        info += sourceInfo;
+      } else {
+        info += getDeclarationErrorAddendum();
+      }
+
+      var typeString;
+
+      if (type === null) {
+        typeString = 'null';
+      } else if (isArray(type)) {
+        typeString = 'array';
+      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
+        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
+        info = ' Did you accidentally export a JSX literal instead of a component?';
+      } else {
+        typeString = typeof type;
+      }
+
+      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
+    }
+
+    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
+    // TODO: Drop this when these are no longer allowed as the type argument.
+
+    if (element == null) {
+      return element;
+    } // Skip key warning if the type isn't valid since our key validation logic
+    // doesn't expect a non-string/function type and can throw confusing errors.
+    // We don't want exception behavior to differ between dev and prod.
+    // (Rendering will throw with a helpful message and as soon as the type is
+    // fixed, the key warnings will appear.)
+
+
+    if (validType) {
+      var children = props.children;
+
+      if (children !== undefined) {
+        if (isStaticChildren) {
+          if (isArray(children)) {
+            for (var i = 0; i < children.length; i++) {
+              validateChildKeys(children[i], type);
+            }
+
+            if (Object.freeze) {
+              Object.freeze(children);
+            }
+          } else {
+            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
+          }
+        } else {
+          validateChildKeys(children, type);
+        }
+      }
+    }
+
+    if (type === REACT_FRAGMENT_TYPE) {
+      validateFragmentProps(element);
+    } else {
+      validatePropTypes(element);
+    }
+
+    return element;
+  }
+} // These two functions exist to still get child warnings in dev
+// even with the prod transform. This means that jsxDEV is purely
+// opt-in behavior for better messages but that we won't stop
+// giving you warnings if you use production apis.
+
+function jsxWithValidationStatic(type, props, key) {
+  {
+    return jsxWithValidation(type, props, key, true);
+  }
+}
+function jsxWithValidationDynamic(type, props, key) {
+  {
+    return jsxWithValidation(type, props, key, false);
+  }
+}
+
+var jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.
+// for now we can ship identical prod functions
+
+var jsxs =  jsxWithValidationStatic ;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsx = jsx;
+exports.jsxs = jsxs;
+//# sourceMappingURL=react-jsx-runtime.development.js.map
diff --git a/node_modules/react/cjs/react-jsx-runtime.development.js.map b/node_modules/react/cjs/react-jsx-runtime.development.js.map
new file mode 100644
index 0000000..a05d4a7
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-runtime.development.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-runtime.development.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/consoleWithStackDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/shared/isValidElementType.js","D:/code-projects/debugger-learning/react/packages/shared/getComponentNameFromType.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/shared/ConsolePatchingDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/CheckStringCoercion.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nlet suppressWarning = false;\r\nexport function setSuppressWarning(newSuppressWarning) {\r\n  if (__DEV__) {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n}\r\n\r\n// In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nexport function warn(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport function error(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  if (__DEV__) {\r\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    }\r\n\r\n    // eslint-disable-next-line react-internal/safe-string-coercion\r\n    const argsWithFormat = args.map(item => String(item));\r\n    // Careful: RN currently depends on this prefix\r\n    argsWithFormat.unshift('Warning: ' + format);\r\n    // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (zero effort)\r\n//\r\n// Flags that can likely be deleted or landed without consequences\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const warnAboutDeprecatedLifecycles = true;\r\nexport const enableComponentStackLocations = true;\r\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (moderate effort)\r\n//\r\n// Flags that can be probably deleted or landed, but might require extra effort\r\n// like migrating internal callers or performance testing.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This is blocked on adding a symbol polyfill to www.\r\nexport const enableSymbolFallbackForWWW = false;\r\n\r\n// This rolled out to 10% public in www, so we should be able to land, but some\r\n// internal tests need to be updated. The open source behavior is correct.\r\nexport const skipUnmountedBoundaries = true;\r\n\r\n// TODO: Finish rolling out in www\r\nexport const enableClientRenderFallbackOnTextMismatch = true;\r\n\r\n// TODO: Need to review this code one more time before landing\r\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\r\n\r\n// Recoil still uses useMutableSource in www, need to delete\r\nexport const enableUseMutableSource = false;\r\n\r\n// Not sure if www still uses this. We don't have a replacement but whatever we\r\n// replace it with will likely be different than what's already there, so we\r\n// probably should just delete it as long as nothing in www relies on it.\r\nexport const enableSchedulerDebugging = false;\r\n\r\n// Need to remove didTimeout argument from Scheduler before landing\r\nexport const disableSchedulerTimeoutInWorkLoop = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Slated for removal in the future (significant effort)\r\n//\r\n// These are experiments that didn't work out, and never shipped, but we can't\r\n// delete from the codebase until we migrate internal callers.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Add a callback property to suspense to notify which promises are currently\r\n// in the update queue. This allows reporting and tracing of what is causing\r\n// the user to see a loading state.\r\n//\r\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\r\n// hydrated or deleted.\r\n//\r\n// This will eventually be replaced by the Transition Tracing proposal.\r\nexport const enableSuspenseCallback = false;\r\n\r\n// Experimental Scope support.\r\nexport const enableScopeAPI = false;\r\n\r\n// Experimental Create Event Handle API.\r\nexport const enableCreateEventHandleAPI = false;\r\n\r\n// This controls whether you get the `.old` modules or the `.new` modules in\r\n// the react-reconciler package.\r\nexport const enableNewReconciler = false;\r\n\r\n// Support legacy Primer support on internal FB www\r\nexport const enableLegacyFBSupport = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Ongoing experiments\r\n//\r\n// These are features that we're either actively exploring or are reasonably\r\n// likely to include in an upcoming release.\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const enableCache = __EXPERIMENTAL__;\r\nexport const enableCacheElement = __EXPERIMENTAL__;\r\n\r\nexport const enableTransitionTracing = false;\r\n\r\n// No known bugs, but needs performance testing\r\nexport const enableLazyContextPropagation = false;\r\n\r\n// FB-only usage. The new API has different semantics.\r\nexport const enableLegacyHidden = false;\r\n\r\n// Enables unstable_avoidThisFallback feature in Fiber\r\nexport const enableSuspenseAvoidThisFallback = false;\r\n// Enables unstable_avoidThisFallback feature in Fizz\r\nexport const enableSuspenseAvoidThisFallbackFizz = false;\r\n\r\nexport const enableCPUSuspense = __EXPERIMENTAL__;\r\n\r\n// When a node is unmounted, recurse into the Fiber subtree and clean out\r\n// references. Each level cleans up more fiber fields than the previous level.\r\n// As far as we know, React itself doesn't leak, but because the Fiber contains\r\n// cycles, even a single leak in product code can cause us to retain large\r\n// amounts of memory.\r\n//\r\n// The long term plan is to remove the cycles, but in the meantime, we clear\r\n// additional fields to mitigate.\r\n//\r\n// It's an enum so that we can experiment with different levels of\r\n// aggressiveness.\r\nexport const deletedTreeCleanUpLevel = 3;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Chopping Block\r\n//\r\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\r\n// when we we plan to enable them.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This flag enables Strict Effects by default. We're not turning this on until\r\n// after 18 because it requires migration work. Recommendation is to use\r\n// <StrictMode /> to gradually upgrade components.\r\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\r\n// If FALSE, these trees will be StrictLegacyMode.\r\nexport const createRootStrictEffectsByDefault = false;\r\n\r\nexport const disableModulePatternComponents = false;\r\n\r\nexport const disableLegacyContext = false;\r\n\r\nexport const enableUseRefAccessWarning = false;\r\n\r\n// Enables time slicing for updates that aren't wrapped in startTransition.\r\nexport const enableSyncDefaultUpdates = true;\r\n\r\n// Adds an opt-in to time slicing for updates that aren't wrapped in\r\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\r\nexport const allowConcurrentByDefault = false;\r\n\r\n// Updates that occur in the render phase are not officially supported. But when\r\n// they do occur, we defer them to a subsequent render by picking a lane that's\r\n// not currently rendering. We treat them the same as if they came from an\r\n// interleaved event. Remove this flag once we have migrated to the\r\n// new behavior.\r\n// NOTE: Not sure if we'll end up doing this or not.\r\nexport const deferRenderPhaseUpdateToNextBatch = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// React DOM Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to React DOM. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Disable support for comment nodes as React DOM containers. Already disabled\r\n// in open source, but www codebase still relies on it. Need to remove.\r\nexport const disableCommentsAsDOMContainers = true;\r\n\r\n// Disable javascript: URL strings in href for XSS protection.\r\nexport const disableJavaScriptURLs = false;\r\n\r\nexport const enableTrustedTypesIntegration = false;\r\n\r\n// Prevent the value and checked attributes from syncing with their related\r\n// DOM properties\r\nexport const disableInputAttributeSyncing = false;\r\n\r\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\r\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\r\n// request for certain browsers.\r\nexport const enableFilterEmptyStringAttributesDOM = false;\r\n\r\n// Changes the behavior for rendering custom elements in both server rendering\r\n// and client rendering, mostly to allow JSX attributes to apply to the custom\r\n// element's object properties instead of only HTML attributes.\r\n// https://github.com/facebook/react/issues/11347\r\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\r\n\r\n// Disables children for <textarea> elements\r\nexport const disableTextareaChildren = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// JSX Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to JSX. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\r\n\r\n// Part of the simplification of React.createElement so we can eventually move\r\n// from React.createElement to React.jsx\r\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\r\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\r\n\r\n// Enables a warning when trying to spread a 'key' to an element;\r\n// a deprecated pattern we want to get rid of in the future\r\nexport const warnAboutSpreadingKeyToJSX = false;\r\n\r\nexport const warnAboutStringRefs = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\nexport const enableSchedulingProfiler = __PROFILE__;\r\n\r\n// Helps identify side effects in render-phase lifecycle hooks and setState\r\n// reducers by double invoking them in StrictLegacyMode.\r\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\r\n\r\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\r\n// this feature flag only impacts StrictEffectsMode.\r\nexport const enableStrictEffects = __DEV__;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nexport const enableProfilerTimer = __PROFILE__;\r\n\r\n// Record durations for commit and passive effects phases.\r\nexport const enableProfilerCommitHooks = __PROFILE__;\r\n\r\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\r\n\r\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\nexport const enableDebugTracing = false;\r\n\r\n// Track which Fiber(s) schedule render work.\r\nexport const enableUpdaterTracking = __PROFILE__;\r\n\r\n// Only enabled in RN, related to enableComponentStackLocations\r\nexport const disableNativeComponentFrames = false;\r\nexport const enableServerContext = __EXPERIMENTAL__;\r\n\r\n// Internal only.\r\nexport const enableGetInspectorDataForInstanceInProduction = false;\r\n\r\n// Profiler API accepts a function to be called when a nested update is scheduled.\r\n// This callback accepts the component type (class instance or function) the update is scheduled for.\r\nexport const enableProfilerNestedUpdateScheduledHook = false;\r\n\r\nexport const consoleManagedByDevToolsDuringStrictMode = true;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {\r\n  enableScopeAPI,\r\n  enableCacheElement,\r\n  enableTransitionTracing,\r\n  enableDebugTracing,\r\n  enableLegacyHidden,\r\n  enableSymbolFallbackForWWW,\r\n} from './ReactFeatureFlags';\r\n\r\nlet REACT_MODULE_REFERENCE;\r\nif (enableSymbolFallbackForWWW) {\r\n  if (typeof Symbol === 'function') {\r\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n  } else {\r\n    REACT_MODULE_REFERENCE = 0;\r\n  }\r\n} else {\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nexport default function isValidElementType(type: mixed) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  }\r\n\r\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\r\n    type === REACT_OFFSCREEN_TYPE ||\r\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\r\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\r\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n      // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_MODULE_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {\r\n  enableServerContext,\r\n  enableTransitionTracing,\r\n  enableCache,\r\n} from './ReactFeatureFlags';\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const displayName = (outerType: any).displayName;\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\r\n}\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\nexport default function getComponentNameFromType(type: mixed): string | null {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  if (__DEV__) {\r\n    if (typeof (type: any).tag === 'number') {\r\n      console.error(\r\n        'Received an unexpected object in getComponentNameFromType(). ' +\r\n          'This is likely a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return (type: any).displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n    case REACT_CACHE_TYPE:\r\n      if (enableCache) {\r\n        return 'Cache';\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case REACT_TRACING_MARKER_TYPE:\r\n      if (enableTransitionTracing) {\r\n        return 'TracingMarker';\r\n      }\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        const context: ReactContext<any> = (type: any);\r\n        return getContextName(context) + '.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        const provider: ReactProviderType<any> = (type: any);\r\n        return getContextName(provider._context) + '.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        const outerName = (type: any).displayName || null;\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n      case REACT_SERVER_CONTEXT_TYPE:\r\n        if (enableServerContext) {\r\n          const context2 = ((type: any): ReactContext<any>);\r\n          return (context2.displayName || context2._globalName) + '.Provider';\r\n        }\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value: mixed): string {\r\n  if (__DEV__) {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    const type =\r\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\r\n      (value: any).constructor.name ||\r\n      'Object';\r\n    return type;\r\n  }\r\n}\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction willCoercionThrow(value: mixed): boolean {\r\n  if (__DEV__) {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value: mixed) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + (value: any);\r\n}\r\n\r\nexport function checkAttributeStringCoercion(\r\n  value: mixed,\r\n  attributeName: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` attribute is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        attributeName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkKeyStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided key is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkPropStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` prop is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` CSS property is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkHtmlStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided HTML markup uses a value of unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkFormFieldValueStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\r\n          ' must be strings, not %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","React","error","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","enableCacheElement","$$typeof","getModuleId","undefined","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","getComponentNameFromType","tag","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","assign","Object","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","defineProperties","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","Error","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","get","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","current","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","length","c","replace","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","typeSpecName","err","ex","message","isArrayImpl","Array","isArray","a","typeName","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","stateNode","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","_store","freeze","jsxDEV","maybeKey","propName","defaultProps","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","entries","step","next","done","validatePropTypes","propTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","keys","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","jsxWithValidationStatic","jsxWithValidationDynamic","jsx","__DEV__","jsxs"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react-jsx-runtime.production.min.js b/node_modules/react/cjs/react-jsx-runtime.production.min.js
new file mode 100644
index 0000000..efe72ec
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-runtime.production.min.js
@@ -0,0 +1,146 @@
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+
+const ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+const ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+
+const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+const RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+
+function hasValidRef(config) {
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+
+  return config.key !== undefined;
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+const ReactElement = function (type, key, ref, self, source, owner, props) {
+  const element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  return element;
+};
+/**
+ * https://github.com/reactjs/rfcs/pull/107
+ * @param {*} type
+ * @param {object} props
+ * @param {string} key
+ */
+
+
+function jsx(type, config, maybeKey) {
+  let propName; // Reserved names are extracted
+
+  const props = {};
+  let key = null;
+  let ref = null; // Currently, key can be spread in as a prop. This causes a potential
+  // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
+  // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
+  // but as an intermediary step, we will use jsxDEV for everything except
+  // <div {...props} key="Hi" />, because we aren't currently able to tell if
+  // key is explicitly declared to be undefined or not.
+
+  if (maybeKey !== undefined) {
+
+    key = '' + maybeKey;
+  }
+
+  if (hasValidKey(config)) {
+
+    key = '' + config.key;
+  }
+
+  if (hasValidRef(config)) {
+    ref = config.ref;
+  } // Remaining properties are added to a new props object
+
+
+  for (propName in config) {
+    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+      props[propName] = config[propName];
+    }
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    const defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, undefined, undefined, ReactCurrentOwner.current, props);
+}
+
+/**
+ * ReactElementValidator provides a wrapper around a element factory
+ * which validates the props passed to the element. This is intended to be
+ * used only in DEV and could be replaced by a static type checker for languages
+ * that support it.
+ */
+const ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+const ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const jsx$1 =  jsx; // we may want to special case jsxs internally to take advantage of static children.
+// for now we can ship identical prod functions
+
+const jsxs =  jsx;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsx = jsx$1;
+exports.jsxs = jsxs;
+//# sourceMappingURL=react-jsx-runtime.production.min.js.map
diff --git a/node_modules/react/cjs/react-jsx-runtime.production.min.js.map b/node_modules/react/cjs/react-jsx-runtime.production.min.js.map
new file mode 100644
index 0000000..54b66ee
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-runtime.production.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-runtime.production.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","ReactSharedInternals","React","ReactCurrentDispatcher","hasOwnProperty","Object","prototype","ReactDebugCurrentFrame","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","props","element","$$typeof","_owner","jsx","maybeKey","propName","call","defaultProps","current","__DEV__","jsxProd","jsxs"],"mappings":";;;;AASA;AACA;AACA;AAEA;AACO,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;MAEMC,mBAAmB,GAAGF,MAAM,CAACC,GAAP,CAAW,gBAAX;;ACLnC,MAAME,oBAAoB,GACxBC,wDADF;;MCkBOC,yBAA0BF,qBAA1BE;;ACpBP,MAAMC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;;ACOA,MAAMG,sBAAsB,GAAGN,oBAAoB,CAACM,sBAApD;;ACHA,MAAMC,iBAAiB,GAAGP,oBAAoB,CAACO,iBAA/C;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,IADgB;AAErBC,EAAAA,GAAG,EAAE,IAFgB;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA;AAQA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACJ,GAAP,KAAeK,SAAtB;AACD;;AAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACL,GAAP,KAAeM,SAAtB;AACD;AA2ED;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAME,YAAY,GAAG,UAASC,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqD;AACxE,QAAMC,OAAO,GAAG;AACd;AACAC,IAAAA,QAAQ,EAAE5B,kBAFI;AAId;AACAsB,IAAAA,IAAI,EAAEA,IALQ;AAMdT,IAAAA,GAAG,EAAEA,GANS;AAOdC,IAAAA,GAAG,EAAEA,GAPS;AAQdY,IAAAA,KAAK,EAAEA,KARO;AAUd;AACAG,IAAAA,MAAM,EAAEJ;AAXM,GAAhB;;AAoDA,SAAOE,OAAP;AACD,CAtDD;AAwDA;;;;;;;;AAMA,AAAO,SAASG,GAAT,CAAaR,IAAb,EAAmBJ,MAAnB,EAA2Ba,QAA3B,EAAqC;AAC1C,MAAIC,QAAJ,CAD0C;;AAI1C,QAAMN,KAAK,GAAG,EAAd;AAEA,MAAIb,GAAG,GAAG,IAAV;AACA,MAAIC,GAAG,GAAG,IAAV,CAP0C;AAU1C;AACA;AACA;AACA;AACA;;AACA,MAAIiB,QAAQ,KAAKZ,SAAjB,EAA4B;AAC1B;AAGAN,IAAAA,GAAG,GAAG,KAAKkB,QAAX;AACD;;AAED,MAAIX,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;AAGAL,IAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;AACD;;AAED,MAAII,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBJ,IAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AACD,GA/ByC;;;AAkC1C,OAAKkB,QAAL,IAAiBd,MAAjB,EAAyB;AACvB,QACEX,cAAc,CAAC0B,IAAf,CAAoBf,MAApB,EAA4Bc,QAA5B,KACA,CAACpB,cAAc,CAACL,cAAf,CAA8ByB,QAA9B,CAFH,EAGE;AACAN,MAAAA,KAAK,CAACM,QAAD,CAAL,GAAkBd,MAAM,CAACc,QAAD,CAAxB;AACD;AACF,GAzCyC;;;AA4C1C,MAAIV,IAAI,IAAIA,IAAI,CAACY,YAAjB,EAA+B;AAC7B,UAAMA,YAAY,GAAGZ,IAAI,CAACY,YAA1B;;AACA,SAAKF,QAAL,IAAiBE,YAAjB,EAA+B;AAC7B,UAAIR,KAAK,CAACM,QAAD,CAAL,KAAoBb,SAAxB,EAAmC;AACjCO,QAAAA,KAAK,CAACM,QAAD,CAAL,GAAkBE,YAAY,CAACF,QAAD,CAA9B;AACD;AACF;AACF;;AAED,SAAOX,YAAY,CACjBC,IADiB,EAEjBT,GAFiB,EAGjBC,GAHiB,EAIjBK,SAJiB,EAKjBA,SALiB,EAMjBR,iBAAiB,CAACwB,OAND,EAOjBT,KAPiB,CAAnB;AASD;;ACxQD;;;;;;AAMA,AAmBA,MAAMf,mBAAiB,GAAGP,oBAAoB,CAACO,iBAA/C;AACA,MAAMD,wBAAsB,GAAGN,oBAAoB,CAACM,sBAApD;;MClBMoB,KAAG,GAAGM,CAAqCC;AAEjD;;AACA,MAAMC,IAAI,GAAGF,CAAoCC;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react-jsx-runtime.profiling.min.js b/node_modules/react/cjs/react-jsx-runtime.profiling.min.js
new file mode 100644
index 0000000..2b5e3e5
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-runtime.profiling.min.js
@@ -0,0 +1,146 @@
+'use strict';
+
+var React = require('react');
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+
+const ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
+
+const ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
+
+const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
+const RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+
+function hasValidRef(config) {
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+
+  return config.key !== undefined;
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+const ReactElement = function (type, key, ref, self, source, owner, props) {
+  const element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  return element;
+};
+/**
+ * https://github.com/reactjs/rfcs/pull/107
+ * @param {*} type
+ * @param {object} props
+ * @param {string} key
+ */
+
+
+function jsx(type, config, maybeKey) {
+  let propName; // Reserved names are extracted
+
+  const props = {};
+  let key = null;
+  let ref = null; // Currently, key can be spread in as a prop. This causes a potential
+  // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
+  // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
+  // but as an intermediary step, we will use jsxDEV for everything except
+  // <div {...props} key="Hi" />, because we aren't currently able to tell if
+  // key is explicitly declared to be undefined or not.
+
+  if (maybeKey !== undefined) {
+
+    key = '' + maybeKey;
+  }
+
+  if (hasValidKey(config)) {
+
+    key = '' + config.key;
+  }
+
+  if (hasValidRef(config)) {
+    ref = config.ref;
+  } // Remaining properties are added to a new props object
+
+
+  for (propName in config) {
+    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+      props[propName] = config[propName];
+    }
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    const defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, undefined, undefined, ReactCurrentOwner.current, props);
+}
+
+/**
+ * ReactElementValidator provides a wrapper around a element factory
+ * which validates the props passed to the element. This is intended to be
+ * used only in DEV and could be replaced by a static type checker for languages
+ * that support it.
+ */
+const ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
+const ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+const jsx$1 =  jsx; // we may want to special case jsxs internally to take advantage of static children.
+// for now we can ship identical prod functions
+
+const jsxs =  jsx;
+
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.jsx = jsx$1;
+exports.jsxs = jsxs;
+//# sourceMappingURL=react-jsx-runtime.profiling.min.js.map
diff --git a/node_modules/react/cjs/react-jsx-runtime.profiling.min.js.map b/node_modules/react/cjs/react-jsx-runtime.profiling.min.js.map
new file mode 100644
index 0000000..da1cc98
--- /dev/null
+++ b/node_modules/react/cjs/react-jsx-runtime.profiling.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react-jsx-runtime.profiling.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElement.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSXElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown;\r\nlet specialPropRefWarningShown;\r\nlet didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      self &&\r\n      ReactCurrentOwner.current.stateNode !== self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          getComponentNameFromType(ReactCurrentOwner.current.type),\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingKey = function() {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  if (__DEV__) {\r\n    const warnAboutAccessingRef = function() {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  if (__DEV__) {\r\n    let propName;\r\n\r\n    // Reserved names are extracted\r\n    const props = {};\r\n\r\n    let key = null;\r\n    let ref = null;\r\n\r\n    // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n    if (maybeKey !== undefined) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    }\r\n\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      const defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(\r\n      type,\r\n      key,\r\n      ref,\r\n      self,\r\n      source,\r\n      ReactCurrentOwner.current,\r\n      props,\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport isArray from 'shared/isArray';\r\nimport {jsxDEV} from './ReactJSXElement';\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  if (__DEV__) {\r\n    return (\r\n      typeof object === 'object' &&\r\n      object !== null &&\r\n      object.$$typeof === REACT_ELEMENT_TYPE\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (__DEV__) {\r\n    if (ReactCurrentOwner.current) {\r\n      const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (__DEV__) {\r\n    if (source !== undefined) {\r\n      const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      const lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  if (__DEV__) {\r\n    let info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      const parentName =\r\n        typeof parentType === 'string'\r\n          ? parentType\r\n          : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (__DEV__) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    let childOwner = '';\r\n    if (\r\n      element &&\r\n      element._owner &&\r\n      element._owner !== ReactCurrentOwner.current\r\n    ) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n        element._owner.type,\r\n      )}.`;\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (__DEV__) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        const child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      const iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          const iterator = iteratorFn.call(node);\r\n          let step;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  if (__DEV__) {\r\n    const validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      let info = '';\r\n      if (\r\n        type === undefined ||\r\n        (typeof type === 'object' &&\r\n          type !== null &&\r\n          Object.keys(type).length === 0)\r\n      ) {\r\n        info +=\r\n          ' You likely forgot to export your component from the file ' +\r\n          \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      const sourceInfo = getSourceInfoErrorAddendum(source);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      let typeString;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n        info =\r\n          ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n\r\n    const element = jsxDEV(type, props, key, source, self);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n    if (validType) {\r\n      const children = props.children;\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (let i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, true);\r\n  }\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  if (__DEV__) {\r\n    return jsxWithValidation(type, props, key, false);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\r\nimport {\r\n  jsxWithValidationStatic,\r\n  jsxWithValidationDynamic,\r\n  jsxWithValidation,\r\n} from './ReactJSXElementValidator';\r\nimport {jsx as jsxProd} from './ReactJSXElement';\r\nconst jsx = __DEV__ ? jsxWithValidationDynamic : jsxProd;\r\n// we may want to special case jsxs internally to take advantage of static children.\r\n// for now we can ship identical prod functions\r\nconst jsxs = __DEV__ ? jsxWithValidationStatic : jsxProd;\r\nconst jsxDEV = __DEV__ ? jsxWithValidation : undefined;\r\n\r\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","ReactSharedInternals","React","ReactCurrentDispatcher","hasOwnProperty","Object","prototype","ReactDebugCurrentFrame","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","props","element","$$typeof","_owner","jsx","maybeKey","propName","call","defaultProps","current","__DEV__","jsxProd","jsxs"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react.development.js b/node_modules/react/cjs/react.development.js
index 1ff1fbf..43072ab 100644
--- a/node_modules/react/cjs/react.development.js
+++ b/node_modules/react/cjs/react.development.js
@@ -1,1243 +1,2832 @@
+'use strict';
+
+// TODO: this is special because it gets imported during build.
+//
+// TODO: 18.0.0 has not been released to NPM;
+// It exists as a placeholder so that DevTools can support work tag changes between releases.
+// When we next publish a release, update the matching TODO in backend/renderer.js
+// TODO: This module is used both by the release scripts and to expose a version
+// at runtime. We should instead inject the version number as part of the build
+// process, and use the ReactVersions.js module as the single source of truth.
+var ReactVersion = '18.2.0';
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+var REACT_ELEMENT_TYPE = Symbol.for('react.element');
+var REACT_PORTAL_TYPE = Symbol.for('react.portal');
+var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+var REACT_CONTEXT_TYPE = Symbol.for('react.context');
+var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+var REACT_MEMO_TYPE = Symbol.for('react.memo');
+var REACT_LAZY_TYPE = Symbol.for('react.lazy');
+var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+var REACT_CACHE_TYPE = Symbol.for('react.cache');
+var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');
+var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+/**
+ * Keeps track of the current dispatcher.
+ */
+var ReactCurrentDispatcher = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+/**
+ * Keeps track of the current batch's configuration such as how long an update
+ * should suspend for if it needs to.
+ */
+var ReactCurrentBatchConfig = {
+  transition: null
+};
+
+var ReactCurrentActQueue = {
+  current: null,
+  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
+  isBatchingLegacy: false,
+  didScheduleLegacyUpdate: false
+};
+
+/**
+ * Keeps track of the current owner.
+ *
+ * The current owner is the component who should own any components that are
+ * currently being constructed.
+ */
+var ReactCurrentOwner = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+var ReactDebugCurrentFrame = {};
+var currentExtraStackFrame = null;
+function setExtraStackFrame(stack) {
+  {
+    currentExtraStackFrame = stack;
+  }
+}
+
+{
+  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
+    {
+      currentExtraStackFrame = stack;
+    }
+  }; // Stack implementation injected by the current renderer.
+
+
+  ReactDebugCurrentFrame.getCurrentStack = null;
+
+  ReactDebugCurrentFrame.getStackAddendum = function () {
+    var stack = ''; // Add an extra top frame while an element is being validated
+
+    if (currentExtraStackFrame) {
+      stack += currentExtraStackFrame;
+    } // Delegate to the injected renderer-specific implementation
+
+
+    var impl = ReactDebugCurrentFrame.getCurrentStack;
+
+    if (impl) {
+      stack += impl() || '';
+    }
+
+    return stack;
+  };
+}
+
+// -----------------------------------------------------------------------------
+
+var enableScopeAPI = false; // Experimental Create Event Handle API.
+var enableTransitionTracing = false; // No known bugs, but needs performance testing
+
+var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
+// stuff. Intended to enable React core members to more easily debug scheduling
+// issues in DEV builds.
+
+var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
+
+var ContextRegistry = {};
+
+var ReactSharedInternals = {
+  ReactCurrentDispatcher: ReactCurrentDispatcher,
+  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
+  ReactCurrentOwner: ReactCurrentOwner
+};
+
+{
+  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
+  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
+}
+
+{
+  ReactSharedInternals.ContextRegistry = ContextRegistry;
+}
+
+// by calls to these methods by a Babel plugin.
+//
+// In PROD (or in packages without access to React internals),
+// they are left as they are instead.
+
+function warn(format) {
+  {
+    {
+      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
+        args[_key - 1] = arguments[_key];
+      }
+
+      printWarning('warn', format, args);
+    }
+  }
+}
+function error(format) {
+  {
+    {
+      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
+        args[_key2 - 1] = arguments[_key2];
+      }
+
+      printWarning('error', format, args);
+    }
+  }
+}
+
+function printWarning(level, format, args) {
+  // When changing this logic, you might want to also
+  // update consoleWithStackDev.www.js as well.
+  {
+    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+    var stack = ReactDebugCurrentFrame.getStackAddendum();
+
+    if (stack !== '') {
+      format += '%s';
+      args = args.concat([stack]);
+    } // eslint-disable-next-line react-internal/safe-string-coercion
+
+
+    var argsWithFormat = args.map(function (item) {
+      return String(item);
+    }); // Careful: RN currently depends on this prefix
+
+    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
+    // breaks IE9: https://github.com/facebook/react/issues/13610
+    // eslint-disable-next-line react-internal/no-production-logging
+
+    Function.prototype.apply.call(console[level], console, argsWithFormat);
+  }
+}
+
+var didWarnStateUpdateForUnmountedComponent = {};
+
+function warnNoop(publicInstance, callerName) {
+  {
+    var _constructor = publicInstance.constructor;
+    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
+    var warningKey = componentName + "." + callerName;
+
+    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
+      return;
+    }
+
+    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
+
+    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
+  }
+}
+/**
+ * This is the abstract API for an update queue.
+ */
+
+
+var ReactNoopUpdateQueue = {
+  /**
+   * Checks whether or not this composite component is mounted.
+   * @param {ReactClass} publicInstance The instance we want to test.
+   * @return {boolean} True if mounted, false otherwise.
+   * @protected
+   * @final
+   */
+  isMounted: function (publicInstance) {
+    return false;
+  },
+
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueForceUpdate: function (publicInstance, callback, callerName) {
+    warnNoop(publicInstance, 'forceUpdate');
+  },
+
+  /**
+   * Replaces all of the state. Always use this or `setState` to mutate state.
+   * You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} completeState Next state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+    warnNoop(publicInstance, 'replaceState');
+  },
+
+  /**
+   * Sets a subset of the state. This only exists because _pendingState is
+   * internal. This provides a merging strategy that is not available to deep
+   * properties which is confusing. TODO: Expose pendingState or don't use it
+   * during the merge.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} partialState Next partial state to be merged with state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} Name of the calling function in the public API.
+   * @internal
+   */
+  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+    warnNoop(publicInstance, 'setState');
+  }
+};
+
+var assign = Object.assign;
+
+var emptyObject = {};
+
+{
+  Object.freeze(emptyObject);
+}
+/**
+ * Base class helpers for the updating state of a component.
+ */
+
+
+function Component(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+  // renderer.
+
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+Component.prototype.isReactComponent = {};
+/**
+ * Sets a subset of the state. Always use this to mutate
+ * state. You should treat `this.state` as immutable.
+ *
+ * There is no guarantee that `this.state` will be immediately updated, so
+ * accessing `this.state` after calling this method may return the old value.
+ *
+ * There is no guarantee that calls to `setState` will run synchronously,
+ * as they may eventually be batched together.  You can provide an optional
+ * callback that will be executed when the call to setState is actually
+ * completed.
+ *
+ * When a function is provided to setState, it will be called at some point in
+ * the future (not synchronously). It will be called with the up to date
+ * component arguments (state, props, context). These values can be different
+ * from this.* because your function may be called after receiveProps but before
+ * shouldComponentUpdate, and this new state, props, and context will not yet be
+ * assigned to this.
+ *
+ * @param {object|function} partialState Next partial state or function to
+ *        produce next partial state to be merged with current state.
+ * @param {?function} callback Called after state is updated.
+ * @final
+ * @protected
+ */
+
+Component.prototype.setState = function (partialState, callback) {
+  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+  }
+
+  this.updater.enqueueSetState(this, partialState, callback, 'setState');
+};
+/**
+ * Forces an update. This should only be invoked when it is known with
+ * certainty that we are **not** in a DOM transaction.
+ *
+ * You may want to call this when you know that some deeper aspect of the
+ * component's state has changed but `setState` was not called.
+ *
+ * This will not invoke `shouldComponentUpdate`, but it will invoke
+ * `componentWillUpdate` and `componentDidUpdate`.
+ *
+ * @param {?function} callback Called after update is complete.
+ * @final
+ * @protected
+ */
+
+
+Component.prototype.forceUpdate = function (callback) {
+  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+};
+/**
+ * Deprecated APIs. These APIs used to exist on classic React classes but since
+ * we would like to deprecate them, we're not going to move them over to this
+ * modern base class. Instead, we define a getter that warns if it's accessed.
+ */
+
+
+{
+  var deprecatedAPIs = {
+    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
+    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
+  };
+
+  var defineDeprecationWarning = function (methodName, info) {
+    Object.defineProperty(Component.prototype, methodName, {
+      get: function () {
+        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
+
+        return undefined;
+      }
+    });
+  };
+
+  for (var fnName in deprecatedAPIs) {
+    if (deprecatedAPIs.hasOwnProperty(fnName)) {
+      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
+    }
+  }
+}
+
+function ComponentDummy() {}
+
+ComponentDummy.prototype = Component.prototype;
+/**
+ * Convenience component with default shallow equality check for sCU.
+ */
+
+function PureComponent(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject;
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+assign(pureComponentPrototype, Component.prototype);
+pureComponentPrototype.isPureReactComponent = true;
+
+// an immutable object with a single mutable value
+function createRef() {
+  var refObject = {
+    current: null
+  };
+
+  {
+    Object.seal(refObject);
+  }
+
+  return refObject;
+}
+
+var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+/*
+ * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
+ * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
+ *
+ * The functions in this module will throw an easier-to-understand,
+ * easier-to-debug exception with a clear errors message message explaining the
+ * problem. (Instead of a confusing exception thrown inside the implementation
+ * of the `value` object).
+ */
+// $FlowFixMe only called in DEV, so void return is not possible.
+function typeName(value) {
+  {
+    // toStringTag is needed for namespaced types like Temporal.Instant
+    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
+    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
+    return type;
+  }
+} // $FlowFixMe only called in DEV, so void return is not possible.
+
+
+function willCoercionThrow(value) {
+  {
+    try {
+      testStringCoercion(value);
+      return false;
+    } catch (e) {
+      return true;
+    }
+  }
+}
+
+function testStringCoercion(value) {
+  // If you ended up here by following an exception call stack, here's what's
+  // happened: you supplied an object or symbol value to React (as a prop, key,
+  // DOM attribute, CSS property, string ref, etc.) and when React tried to
+  // coerce it to a string using `'' + value`, an exception was thrown.
+  //
+  // The most common types that will cause this exception are `Symbol` instances
+  // and Temporal objects like `Temporal.Instant`. But any object that has a
+  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
+  // exception. (Library authors do this to prevent users from using built-in
+  // numeric operators like `+` or comparison operators like `>=` because custom
+  // methods are needed to perform accurate arithmetic or comparison.)
+  //
+  // To fix the problem, coerce this object or symbol value to a string before
+  // passing it to React. The most reliable way is usually `String(value)`.
+  //
+  // To find which value is throwing, check the browser or debugger console.
+  // Before this exception was thrown, there should be `console.error` output
+  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
+  // problem and how that type was used: key, atrribute, input value prop, etc.
+  // In most cases, this console output also shows the component and its
+  // ancestor components where the exception happened.
+  //
+  // eslint-disable-next-line react-internal/safe-string-coercion
+  return '' + value;
+}
+function checkKeyStringCoercion(value) {
+  {
+    if (willCoercionThrow(value)) {
+      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
+
+      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
+    }
+  }
+}
+
+function getWrappedName(outerType, innerType, wrapperName) {
+  var displayName = outerType.displayName;
+
+  if (displayName) {
+    return displayName;
+  }
+
+  var functionName = innerType.displayName || innerType.name || '';
+  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
+} // Keep in sync with react-reconciler/getComponentNameFromFiber
+
+
+function getContextName(type) {
+  return type.displayName || 'Context';
+} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
+
+
+function getComponentNameFromType(type) {
+  if (type == null) {
+    // Host root, text node or just invalid type.
+    return null;
+  }
+
+  {
+    if (typeof type.tag === 'number') {
+      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
+    }
+  }
+
+  if (typeof type === 'function') {
+    return type.displayName || type.name || null;
+  }
+
+  if (typeof type === 'string') {
+    return type;
+  }
+
+  switch (type) {
+    case REACT_FRAGMENT_TYPE:
+      return 'Fragment';
+
+    case REACT_PORTAL_TYPE:
+      return 'Portal';
+
+    case REACT_PROFILER_TYPE:
+      return 'Profiler';
+
+    case REACT_STRICT_MODE_TYPE:
+      return 'StrictMode';
+
+    case REACT_SUSPENSE_TYPE:
+      return 'Suspense';
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return 'SuspenseList';
+
+    case REACT_CACHE_TYPE:
+      {
+        return 'Cache';
+      }
+
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_CONTEXT_TYPE:
+        var context = type;
+        return getContextName(context) + '.Consumer';
+
+      case REACT_PROVIDER_TYPE:
+        var provider = type;
+        return getContextName(provider._context) + '.Provider';
+
+      case REACT_FORWARD_REF_TYPE:
+        return getWrappedName(type, type.render, 'ForwardRef');
+
+      case REACT_MEMO_TYPE:
+        var outerName = type.displayName || null;
+
+        if (outerName !== null) {
+          return outerName;
+        }
+
+        return getComponentNameFromType(type.type) || 'Memo';
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            return getComponentNameFromType(init(payload));
+          } catch (x) {
+            return null;
+          }
+        }
+
+      case REACT_SERVER_CONTEXT_TYPE:
+        {
+          var context2 = type;
+          return (context2.displayName || context2._globalName) + '.Provider';
+        }
+
+      // eslint-disable-next-line no-fallthrough
+    }
+  }
+
+  return null;
+}
+
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+var RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
+
+{
+  didWarnAboutStringRefs = {};
+}
+
+function hasValidRef(config) {
+  {
+    if (hasOwnProperty.call(config, 'ref')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
+      }
+    }
+  }
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+  {
+    if (hasOwnProperty.call(config, 'key')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
+      }
+    }
+  }
+
+  return config.key !== undefined;
+}
+
+function defineKeyPropWarningGetter(props, displayName) {
+  var warnAboutAccessingKey = function () {
+    {
+      if (!specialPropKeyWarningShown) {
+        specialPropKeyWarningShown = true;
+
+        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
+    }
+  };
+
+  warnAboutAccessingKey.isReactWarning = true;
+  Object.defineProperty(props, 'key', {
+    get: warnAboutAccessingKey,
+    configurable: true
+  });
+}
+
+function defineRefPropWarningGetter(props, displayName) {
+  var warnAboutAccessingRef = function () {
+    {
+      if (!specialPropRefWarningShown) {
+        specialPropRefWarningShown = true;
+
+        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
+    }
+  };
+
+  warnAboutAccessingRef.isReactWarning = true;
+  Object.defineProperty(props, 'ref', {
+    get: warnAboutAccessingRef,
+    configurable: true
+  });
+}
+
+function warnIfStringRefCannotBeAutoConverted(config) {
+  {
+    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
+      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+      if (!didWarnAboutStringRefs[componentName]) {
+        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
+
+        didWarnAboutStringRefs[componentName] = true;
+      }
+    }
+  }
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+var ReactElement = function (type, key, ref, self, source, owner, props) {
+  var element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  {
+    // The validation flag is currently mutative. We put it on
+    // an external backing store so that we can freeze the whole object.
+    // This can be replaced with a WeakMap once they are implemented in
+    // commonly used development environments.
+    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
+    // the validation flag non-enumerable (where possible, which should
+    // include every environment we run tests in), so the test framework
+    // ignores it.
+
+    Object.defineProperty(element._store, 'validated', {
+      configurable: false,
+      enumerable: false,
+      writable: true,
+      value: false
+    }); // self and source are DEV only properties.
+
+    Object.defineProperty(element, '_self', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: self
+    }); // Two elements created in two different places should be considered
+    // equal for testing purposes and therefore we hide it from enumeration.
+
+    Object.defineProperty(element, '_source', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: source
+    });
+
+    if (Object.freeze) {
+      Object.freeze(element.props);
+      Object.freeze(element);
+    }
+  }
+
+  return element;
+};
+/**
+ * Create and return a new ReactElement of the given type.
+ * See https://reactjs.org/docs/react-api.html#createelement
+ */
+
+function createElement(type, config, children) {
+  var propName; // Reserved names are extracted
+
+  var props = {};
+  var key = null;
+  var ref = null;
+  var self = null;
+  var source = null;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      ref = config.ref;
+
+      {
+        warnIfStringRefCannotBeAutoConverted(config);
+      }
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    }
+
+    self = config.__self === undefined ? null : config.__self;
+    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  var childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    var childArray = Array(childrenLength);
+
+    for (var i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    {
+      if (Object.freeze) {
+        Object.freeze(childArray);
+      }
+    }
+
+    props.children = childArray;
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    var defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  {
+    if (key || ref) {
+      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
+
+      if (key) {
+        defineKeyPropWarningGetter(props, displayName);
+      }
+
+      if (ref) {
+        defineRefPropWarningGetter(props, displayName);
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+}
+function cloneAndReplaceKey(oldElement, newKey) {
+  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+  return newElement;
+}
+/**
+ * Clone and return a new ReactElement using element as the starting point.
+ * See https://reactjs.org/docs/react-api.html#cloneelement
+ */
+
+function cloneElement(element, config, children) {
+  if (element === null || element === undefined) {
+    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+  }
+
+  var propName; // Original props are copied
+
+  var props = assign({}, element.props); // Reserved names are extracted
+
+  var key = element.key;
+  var ref = element.ref; // Self is preserved since the owner is preserved.
+
+  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+  // transpiler, and the original source is probably a better indicator of the
+  // true owner.
+
+  var source = element._source; // Owner will be preserved, unless ref is overridden
+
+  var owner = element._owner;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      // Silently steal the ref from the parent.
+      ref = config.ref;
+      owner = ReactCurrentOwner.current;
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    } // Remaining properties override existing props
+
+
+    var defaultProps;
+
+    if (element.type && element.type.defaultProps) {
+      defaultProps = element.type.defaultProps;
+    }
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        if (config[propName] === undefined && defaultProps !== undefined) {
+          // Resolve default props
+          props[propName] = defaultProps[propName];
+        } else {
+          props[propName] = config[propName];
+        }
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  var childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    var childArray = Array(childrenLength);
+
+    for (var i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  }
+
+  return ReactElement(element.type, key, ref, self, source, owner, props);
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+function isValidElement(object) {
+  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+}
+
+var SEPARATOR = '.';
+var SUBSEPARATOR = ':';
+/**
+ * Escape and wrap key so it is safe to use as a reactid
+ *
+ * @param {string} key to be escaped.
+ * @return {string} the escaped key.
+ */
+
+function escape(key) {
+  var escapeRegex = /[=:]/g;
+  var escaperLookup = {
+    '=': '=0',
+    ':': '=2'
+  };
+  var escapedString = key.replace(escapeRegex, function (match) {
+    return escaperLookup[match];
+  });
+  return '$' + escapedString;
+}
+/**
+ * TODO: Test that a single child and an array with one item have the same key
+ * pattern.
+ */
+
+
+var didWarnAboutMaps = false;
+var userProvidedKeyEscapeRegex = /\/+/g;
+
+function escapeUserProvidedKey(text) {
+  return text.replace(userProvidedKeyEscapeRegex, '$&/');
+}
+/**
+ * Generate a key string that identifies a element within a set.
+ *
+ * @param {*} element A element that could contain a manual key.
+ * @param {number} index Index that is used if a manual key is not provided.
+ * @return {string}
+ */
+
+
+function getElementKey(element, index) {
+  // Do some typechecking here since we call this blindly. We want to ensure
+  // that we don't block potential future ES APIs.
+  if (typeof element === 'object' && element !== null && element.key != null) {
+    // Explicit key
+    {
+      checkKeyStringCoercion(element.key);
+    }
+
+    return escape('' + element.key);
+  } // Implicit key determined by the index in the set
+
+
+  return index.toString(36);
+}
+
+function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+  var type = typeof children;
+
+  if (type === 'undefined' || type === 'boolean') {
+    // All of the above are perceived as null.
+    children = null;
+  }
+
+  var invokeCallback = false;
+
+  if (children === null) {
+    invokeCallback = true;
+  } else {
+    switch (type) {
+      case 'string':
+      case 'number':
+        invokeCallback = true;
+        break;
+
+      case 'object':
+        switch (children.$$typeof) {
+          case REACT_ELEMENT_TYPE:
+          case REACT_PORTAL_TYPE:
+            invokeCallback = true;
+        }
+
+    }
+  }
+
+  if (invokeCallback) {
+    var _child = children;
+    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
+    // so that it's consistent if the number of children grows:
+
+    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
+
+    if (isArray(mappedChild)) {
+      var escapedChildKey = '';
+
+      if (childKey != null) {
+        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+      }
+
+      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
+        return c;
+      });
+    } else if (mappedChild != null) {
+      if (isValidElement(mappedChild)) {
+        {
+          // The `if` statement here prevents auto-disabling of the safe
+          // coercion ESLint rule, so we must manually disable it below.
+          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
+            checkKeyStringCoercion(mappedChild.key);
+          }
+        }
+
+        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+        // traverseAllChildren used to do for objects as children
+        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+      }
+
+      array.push(mappedChild);
+    }
+
+    return 1;
+  }
+
+  var child;
+  var nextName;
+  var subtreeCount = 0; // Count of children found in the current subtree.
+
+  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+  if (isArray(children)) {
+    for (var i = 0; i < children.length; i++) {
+      child = children[i];
+      nextName = nextNamePrefix + getElementKey(child, i);
+      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+    }
+  } else {
+    var iteratorFn = getIteratorFn(children);
+
+    if (typeof iteratorFn === 'function') {
+      var iterableChildren = children;
+
+      {
+        // Warn about using Maps as children
+        if (iteratorFn === iterableChildren.entries) {
+          if (!didWarnAboutMaps) {
+            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
+          }
+
+          didWarnAboutMaps = true;
+        }
+      }
+
+      var iterator = iteratorFn.call(iterableChildren);
+      var step;
+      var ii = 0;
+
+      while (!(step = iterator.next()).done) {
+        child = step.value;
+        nextName = nextNamePrefix + getElementKey(child, ii++);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else if (type === 'object') {
+      // eslint-disable-next-line react-internal/safe-string-coercion
+      var childrenString = String(children);
+      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+    }
+  }
+
+  return subtreeCount;
+}
+
+/**
+ * Maps children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+ *
+ * The provided mapFunction(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} func The map function.
+ * @param {*} context Context for mapFunction.
+ * @return {object} Object containing the ordered map of results.
+ */
+function mapChildren(children, func, context) {
+  if (children == null) {
+    return children;
+  }
+
+  var result = [];
+  var count = 0;
+  mapIntoArray(children, result, '', '', function (child) {
+    return func.call(context, child, count++);
+  });
+  return result;
+}
+/**
+ * Count the number of children that are typically specified as
+ * `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrencount
+ *
+ * @param {?*} children Children tree container.
+ * @return {number} The number of children.
+ */
+
+
+function countChildren(children) {
+  var n = 0;
+  mapChildren(children, function () {
+    n++; // Don't return anything
+  });
+  return n;
+}
+
+/**
+ * Iterates through children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+ *
+ * The provided forEachFunc(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} forEachFunc
+ * @param {*} forEachContext Context for forEachContext.
+ */
+function forEachChildren(children, forEachFunc, forEachContext) {
+  mapChildren(children, function () {
+    forEachFunc.apply(this, arguments); // Don't return anything.
+  }, forEachContext);
+}
+/**
+ * Flatten a children object (typically specified as `props.children`) and
+ * return an array with appropriately re-keyed children.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+ */
+
+
+function toArray(children) {
+  return mapChildren(children, function (child) {
+    return child;
+  }) || [];
+}
+/**
+ * Returns the first child in a collection of children and verifies that there
+ * is only one child in the collection.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+ *
+ * The current implementation of this function assumes that a single child gets
+ * passed without a wrapper, but the purpose of this helper function is to
+ * abstract away the particular structure of children.
+ *
+ * @param {?object} children Child collection structure.
+ * @return {ReactElement} The first and only `ReactElement` contained in the
+ * structure.
+ */
+
+
+function onlyChild(children) {
+  if (!isValidElement(children)) {
+    throw new Error('React.Children.only expected to receive a single React element child.');
+  }
+
+  return children;
+}
+
+function createContext(defaultValue) {
+  // TODO: Second argument used to be an optional `calculateChangedBits`
+  // function. Warn to reserve for future use?
+  var context = {
+    $$typeof: REACT_CONTEXT_TYPE,
+    // As a workaround to support multiple concurrent renderers, we categorize
+    // some renderers as primary and others as secondary. We only expect
+    // there to be two concurrent renderers at most: React Native (primary) and
+    // Fabric (secondary); React DOM (primary) and React ART (secondary).
+    // Secondary renderers store their context values on separate fields.
+    _currentValue: defaultValue,
+    _currentValue2: defaultValue,
+    // Used to track how many concurrent renderers this context currently
+    // supports within in a single renderer. Such as parallel server rendering.
+    _threadCount: 0,
+    // These are circular
+    Provider: null,
+    Consumer: null,
+    // Add these to use same hidden class in VM as ServerContext
+    _defaultValue: null,
+    _globalName: null
+  };
+  context.Provider = {
+    $$typeof: REACT_PROVIDER_TYPE,
+    _context: context
+  };
+  var hasWarnedAboutUsingNestedContextConsumers = false;
+  var hasWarnedAboutUsingConsumerProvider = false;
+  var hasWarnedAboutDisplayNameOnConsumer = false;
+
+  {
+    // A separate object, but proxies back to the original context object for
+    // backwards compatibility. It has a different $$typeof, so we can properly
+    // warn for the incorrect usage of Context as a Consumer.
+    var Consumer = {
+      $$typeof: REACT_CONTEXT_TYPE,
+      _context: context
+    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
+
+    Object.defineProperties(Consumer, {
+      Provider: {
+        get: function () {
+          if (!hasWarnedAboutUsingConsumerProvider) {
+            hasWarnedAboutUsingConsumerProvider = true;
+
+            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
+          }
+
+          return context.Provider;
+        },
+        set: function (_Provider) {
+          context.Provider = _Provider;
+        }
+      },
+      _currentValue: {
+        get: function () {
+          return context._currentValue;
+        },
+        set: function (_currentValue) {
+          context._currentValue = _currentValue;
+        }
+      },
+      _currentValue2: {
+        get: function () {
+          return context._currentValue2;
+        },
+        set: function (_currentValue2) {
+          context._currentValue2 = _currentValue2;
+        }
+      },
+      _threadCount: {
+        get: function () {
+          return context._threadCount;
+        },
+        set: function (_threadCount) {
+          context._threadCount = _threadCount;
+        }
+      },
+      Consumer: {
+        get: function () {
+          if (!hasWarnedAboutUsingNestedContextConsumers) {
+            hasWarnedAboutUsingNestedContextConsumers = true;
+
+            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
+          }
+
+          return context.Consumer;
+        }
+      },
+      displayName: {
+        get: function () {
+          return context.displayName;
+        },
+        set: function (displayName) {
+          if (!hasWarnedAboutDisplayNameOnConsumer) {
+            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);
+
+            hasWarnedAboutDisplayNameOnConsumer = true;
+          }
+        }
+      }
+    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
+
+    context.Consumer = Consumer;
+  }
+
+  {
+    context._currentRenderer = null;
+    context._currentRenderer2 = null;
+  }
+
+  return context;
+}
+
+var Uninitialized = -1;
+var Pending = 0;
+var Resolved = 1;
+var Rejected = 2;
+
+function lazyInitializer(payload) {
+  if (payload._status === Uninitialized) {
+    var ctor = payload._result;
+    var thenable = ctor(); // Transition to the next state.
+    // This might throw either because it's missing or throws. If so, we treat it
+    // as still uninitialized and try again next time. Which is the same as what
+    // happens if the ctor or any wrappers processing the ctor throws. This might
+    // end up fixing it if the resolution was a concurrency bug.
+
+    thenable.then(function (moduleObject) {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        var resolved = payload;
+        resolved._status = Resolved;
+        resolved._result = moduleObject;
+      }
+    }, function (error) {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        var rejected = payload;
+        rejected._status = Rejected;
+        rejected._result = error;
+      }
+    });
+
+    if (payload._status === Uninitialized) {
+      // In case, we're still uninitialized, then we're waiting for the thenable
+      // to resolve. Set it as pending in the meantime.
+      var pending = payload;
+      pending._status = Pending;
+      pending._result = thenable;
+    }
+  }
+
+  if (payload._status === Resolved) {
+    var moduleObject = payload._result;
+
+    {
+      if (moduleObject === undefined) {
+        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
+      }
+    }
+
+    {
+      if (!('default' in moduleObject)) {
+        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
+      }
+    }
+
+    return moduleObject.default;
+  } else {
+    throw payload._result;
+  }
+}
+
+function lazy(ctor) {
+  var payload = {
+    // We use these fields to store the result.
+    _status: Uninitialized,
+    _result: ctor
+  };
+  var lazyType = {
+    $$typeof: REACT_LAZY_TYPE,
+    _payload: payload,
+    _init: lazyInitializer
+  };
+
+  {
+    // In production, this would just set it on the object.
+    var defaultProps;
+    var propTypes; // $FlowFixMe
+
+    Object.defineProperties(lazyType, {
+      defaultProps: {
+        configurable: true,
+        get: function () {
+          return defaultProps;
+        },
+        set: function (newDefaultProps) {
+          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+          defaultProps = newDefaultProps; // Match production behavior more closely:
+          // $FlowFixMe
+
+          Object.defineProperty(lazyType, 'defaultProps', {
+            enumerable: true
+          });
+        }
+      },
+      propTypes: {
+        configurable: true,
+        get: function () {
+          return propTypes;
+        },
+        set: function (newPropTypes) {
+          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+          propTypes = newPropTypes; // Match production behavior more closely:
+          // $FlowFixMe
+
+          Object.defineProperty(lazyType, 'propTypes', {
+            enumerable: true
+          });
+        }
+      }
+    });
+  }
+
+  return lazyType;
+}
+
+function forwardRef(render) {
+  {
+    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
+      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
+    } else if (typeof render !== 'function') {
+      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
+    } else {
+      if (render.length !== 0 && render.length !== 2) {
+        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
+      }
+    }
+
+    if (render != null) {
+      if (render.defaultProps != null || render.propTypes != null) {
+        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
+      }
+    }
+  }
+
+  var elementType = {
+    $$typeof: REACT_FORWARD_REF_TYPE,
+    render: render
+  };
+
+  {
+    var ownName;
+    Object.defineProperty(elementType, 'displayName', {
+      enumerable: false,
+      configurable: true,
+      get: function () {
+        return ownName;
+      },
+      set: function (name) {
+        ownName = name; // The inner component shouldn't inherit this display name in most cases,
+        // because the component may be used elsewhere.
+        // But it's nice for anonymous functions to inherit the name,
+        // so that our component-stack generation logic will display their frames.
+        // An anonymous function generally suggests a pattern like:
+        //   React.forwardRef((props, ref) => {...});
+        // This kind of inner function is not used elsewhere so the side effect is okay.
+
+        if (!render.name && !render.displayName) {
+          render.displayName = name;
+        }
+      }
+    });
+  }
+
+  return elementType;
+}
+
+var REACT_MODULE_REFERENCE;
+
+{
+  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
+}
+
+function isValidElementType(type) {
+  if (typeof type === 'string' || typeof type === 'function') {
+    return true;
+  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
+
+
+  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  ||  type === REACT_CACHE_TYPE || enableTransitionTracing ) {
+    return true;
+  }
+
+  if (typeof type === 'object' && type !== null) {
+    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
+    // types supported by any Flight configuration anywhere since
+    // we don't know which Flight build this will end up being used
+    // with.
+    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
+      return true;
+    }
+  }
+
+  return false;
+}
+
+function memo(type, compare) {
+  {
+    if (!isValidElementType(type)) {
+      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
+    }
+  }
+
+  var elementType = {
+    $$typeof: REACT_MEMO_TYPE,
+    type: type,
+    compare: compare === undefined ? null : compare
+  };
+
+  {
+    var ownName;
+    Object.defineProperty(elementType, 'displayName', {
+      enumerable: false,
+      configurable: true,
+      get: function () {
+        return ownName;
+      },
+      set: function (name) {
+        ownName = name; // The inner component shouldn't inherit this display name in most cases,
+        // because the component may be used elsewhere.
+        // But it's nice for anonymous functions to inherit the name,
+        // so that our component-stack generation logic will display their frames.
+        // An anonymous function generally suggests a pattern like:
+        //   React.memo((props) => {...});
+        // This kind of inner function is not used elsewhere so the side effect is okay.
+
+        if (!type.name && !type.displayName) {
+          type.displayName = name;
+        }
+      }
+    });
+  }
+
+  return elementType;
+}
+
+function resolveDispatcher() {
+  var dispatcher = ReactCurrentDispatcher.current;
+
+  {
+    if (dispatcher === null) {
+      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
+    }
+  } // Will result in a null access error if accessed outside render phase. We
+  // intentionally don't throw our own error because this is in a hot path.
+  // Also helps ensure this is inlined.
+
+
+  return dispatcher;
+}
+
+function getCacheSignal() {
+  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheSignal();
+}
+function getCacheForType(resourceType) {
+  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheForType(resourceType);
+}
+function useContext(Context) {
+  var dispatcher = resolveDispatcher();
+
+  {
+    // TODO: add a more generic warning for invalid values.
+    if (Context._context !== undefined) {
+      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
+      // and nobody should be using this in existing code.
+
+      if (realContext.Consumer === Context) {
+        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
+      } else if (realContext.Provider === Context) {
+        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
+      }
+    }
+  }
+
+  return dispatcher.useContext(Context);
+}
+function useState(initialState) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useState(initialState);
+}
+function useReducer(reducer, initialArg, init) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useReducer(reducer, initialArg, init);
+}
+function useRef(initialValue) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useRef(initialValue);
+}
+function useEffect(create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useEffect(create, deps);
+}
+function useInsertionEffect(create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useInsertionEffect(create, deps);
+}
+function useLayoutEffect(create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useLayoutEffect(create, deps);
+}
+function useCallback(callback, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useCallback(callback, deps);
+}
+function useMemo(create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useMemo(create, deps);
+}
+function useImperativeHandle(ref, create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useImperativeHandle(ref, create, deps);
+}
+function useDebugValue(value, formatterFn) {
+  {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useDebugValue(value, formatterFn);
+  }
+}
+function useTransition() {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useTransition();
+}
+function useDeferredValue(value) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useDeferredValue(value);
+}
+function useId() {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useId();
+}
+function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
+}
+function useCacheRefresh() {
+  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.useCacheRefresh();
+}
+
+// Helpers to patch console.logs to avoid logging during side-effect free
+// replaying on render function. This currently only patches the object
+// lazily which won't cover if the log function was extracted eagerly.
+// We could also eagerly patch the method.
+var disabledDepth = 0;
+var prevLog;
+var prevInfo;
+var prevWarn;
+var prevError;
+var prevGroup;
+var prevGroupCollapsed;
+var prevGroupEnd;
+
+function disabledLog() {}
+
+disabledLog.__reactDisabledLog = true;
+function disableLogs() {
+  {
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      prevLog = console.log;
+      prevInfo = console.info;
+      prevWarn = console.warn;
+      prevError = console.error;
+      prevGroup = console.group;
+      prevGroupCollapsed = console.groupCollapsed;
+      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
+
+      var props = {
+        configurable: true,
+        enumerable: true,
+        value: disabledLog,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        info: props,
+        log: props,
+        warn: props,
+        error: props,
+        group: props,
+        groupCollapsed: props,
+        groupEnd: props
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    disabledDepth++;
+  }
+}
+function reenableLogs() {
+  {
+    disabledDepth--;
+
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      var props = {
+        configurable: true,
+        enumerable: true,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        log: assign({}, props, {
+          value: prevLog
+        }),
+        info: assign({}, props, {
+          value: prevInfo
+        }),
+        warn: assign({}, props, {
+          value: prevWarn
+        }),
+        error: assign({}, props, {
+          value: prevError
+        }),
+        group: assign({}, props, {
+          value: prevGroup
+        }),
+        groupCollapsed: assign({}, props, {
+          value: prevGroupCollapsed
+        }),
+        groupEnd: assign({}, props, {
+          value: prevGroupEnd
+        })
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    if (disabledDepth < 0) {
+      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
+    }
+  }
+}
+
+var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
+var prefix;
+function describeBuiltInComponentFrame(name, source, ownerFn) {
+  {
+    if (prefix === undefined) {
+      // Extract the VM specific prefix used by each line.
+      try {
+        throw Error();
+      } catch (x) {
+        var match = x.stack.trim().match(/\n( *(at )?)/);
+        prefix = match && match[1] || '';
+      }
+    } // We use the prefix to ensure our stacks line up with native stack frames.
+
+
+    return '\n' + prefix + name;
+  }
+}
+var reentry = false;
+var componentFrameCache;
+
+{
+  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
+  componentFrameCache = new PossiblyWeakMap();
+}
+
+function describeNativeComponentFrame(fn, construct) {
+  // If something asked for a stack inside a fake render, it should get ignored.
+  if ( !fn || reentry) {
+    return '';
+  }
+
+  {
+    var frame = componentFrameCache.get(fn);
+
+    if (frame !== undefined) {
+      return frame;
+    }
+  }
+
+  var control;
+  reentry = true;
+  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
+
+  Error.prepareStackTrace = undefined;
+  var previousDispatcher;
+
+  {
+    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
+    // for warnings.
+
+    ReactCurrentDispatcher$1.current = null;
+    disableLogs();
+  }
+
+  try {
+    // This should throw.
+    if (construct) {
+      // Something should be setting the props in the constructor.
+      var Fake = function () {
+        throw Error();
+      }; // $FlowFixMe
+
+
+      Object.defineProperty(Fake.prototype, 'props', {
+        set: function () {
+          // We use a throwing setter instead of frozen or non-writable props
+          // because that won't throw in a non-strict mode function.
+          throw Error();
+        }
+      });
+
+      if (typeof Reflect === 'object' && Reflect.construct) {
+        // We construct a different control for this case to include any extra
+        // frames added by the construct call.
+        try {
+          Reflect.construct(Fake, []);
+        } catch (x) {
+          control = x;
+        }
+
+        Reflect.construct(fn, [], Fake);
+      } else {
+        try {
+          Fake.call();
+        } catch (x) {
+          control = x;
+        }
+
+        fn.call(Fake.prototype);
+      }
+    } else {
+      try {
+        throw Error();
+      } catch (x) {
+        control = x;
+      } // TODO(luna): This will currently only throw if the function component
+      // tries to access React/ReactDOM/props. We should probably make this throw
+      // in simple components too
+
+
+      fn();
+    }
+  } catch (sample) {
+    // This is inlined manually because closure doesn't do it for us.
+    if (sample && control && typeof sample.stack === 'string') {
+      // This extracts the first frame from the sample that isn't also in the control.
+      // Skipping one frame that we assume is the frame that calls the two.
+      var sampleLines = sample.stack.split('\n');
+      var controlLines = control.stack.split('\n');
+      var s = sampleLines.length - 1;
+      var c = controlLines.length - 1;
+
+      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
+        // We expect at least one stack frame to be shared.
+        // Typically this will be the root most one. However, stack frames may be
+        // cut off due to maximum stack limits. In this case, one maybe cut off
+        // earlier than the other. We assume that the sample is longer or the same
+        // and there for cut off earlier. So we should find the root most frame in
+        // the sample somewhere in the control.
+        c--;
+      }
+
+      for (; s >= 1 && c >= 0; s--, c--) {
+        // Next we find the first one that isn't the same which should be the
+        // frame that called our sample function and the control.
+        if (sampleLines[s] !== controlLines[c]) {
+          // In V8, the first line is describing the message but other VMs don't.
+          // If we're about to return the first line, and the control is also on the same
+          // line, that's a pretty good indicator that our sample threw at same line as
+          // the control. I.e. before we entered the sample frame. So we ignore this result.
+          // This can happen if you passed a class to function component, or non-function.
+          if (s !== 1 || c !== 1) {
+            do {
+              s--;
+              c--; // We may still have similar intermediate frames from the construct call.
+              // The next one that isn't the same should be our match though.
+
+              if (c < 0 || sampleLines[s] !== controlLines[c]) {
+                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
+                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
+                // but we have a user-provided "displayName"
+                // splice it in to make the stack more readable.
+
+
+                if (fn.displayName && _frame.includes('<anonymous>')) {
+                  _frame = _frame.replace('<anonymous>', fn.displayName);
+                }
+
+                {
+                  if (typeof fn === 'function') {
+                    componentFrameCache.set(fn, _frame);
+                  }
+                } // Return the line we found.
+
+
+                return _frame;
+              }
+            } while (s >= 1 && c >= 0);
+          }
+
+          break;
+        }
+      }
+    }
+  } finally {
+    reentry = false;
+
+    {
+      ReactCurrentDispatcher$1.current = previousDispatcher;
+      reenableLogs();
+    }
+
+    Error.prepareStackTrace = previousPrepareStackTrace;
+  } // Fallback to just using the name if we couldn't make it throw.
+
+
+  var name = fn ? fn.displayName || fn.name : '';
+  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
+
+  {
+    if (typeof fn === 'function') {
+      componentFrameCache.set(fn, syntheticFrame);
+    }
+  }
+
+  return syntheticFrame;
+}
+function describeFunctionComponentFrame(fn, source, ownerFn) {
+  {
+    return describeNativeComponentFrame(fn, false);
+  }
+}
+
+function shouldConstruct(Component) {
+  var prototype = Component.prototype;
+  return !!(prototype && prototype.isReactComponent);
+}
+
+function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
+
+  if (type == null) {
+    return '';
+  }
+
+  if (typeof type === 'function') {
+    {
+      return describeNativeComponentFrame(type, shouldConstruct(type));
+    }
+  }
+
+  if (typeof type === 'string') {
+    return describeBuiltInComponentFrame(type);
+  }
+
+  switch (type) {
+    case REACT_SUSPENSE_TYPE:
+      return describeBuiltInComponentFrame('Suspense');
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return describeBuiltInComponentFrame('SuspenseList');
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_FORWARD_REF_TYPE:
+        return describeFunctionComponentFrame(type.render);
+
+      case REACT_MEMO_TYPE:
+        // Memo may contain any component type so we recursively resolve it.
+        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            // Lazy may contain any component type so we recursively resolve it.
+            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
+          } catch (x) {}
+        }
+    }
+  }
+
+  return '';
+}
+
+var loggedTypeFailures = {};
+var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
+    }
+  }
+}
+
+function checkPropTypes(typeSpecs, values, location, componentName, element) {
+  {
+    // $FlowFixMe This is okay but Flow doesn't know it.
+    var has = Function.call.bind(hasOwnProperty);
+
+    for (var typeSpecName in typeSpecs) {
+      if (has(typeSpecs, typeSpecName)) {
+        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
+        // fail the render phase where it didn't fail before. So we log it.
+        // After these have been cleaned up, we'll let them throw.
+
+        try {
+          // This is intentionally an invariant that gets caught. It's the same
+          // behavior as without this statement except with a better message.
+          if (typeof typeSpecs[typeSpecName] !== 'function') {
+            // eslint-disable-next-line react-internal/prod-error-codes
+            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
+            err.name = 'Invariant Violation';
+            throw err;
+          }
+
+          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
+        } catch (ex) {
+          error$1 = ex;
+        }
+
+        if (error$1 && !(error$1 instanceof Error)) {
+          setCurrentlyValidatingElement(element);
+
+          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
+
+          setCurrentlyValidatingElement(null);
+        }
+
+        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
+          // Only monitor this failure once because there tends to be a lot of the
+          // same error.
+          loggedTypeFailures[error$1.message] = true;
+          setCurrentlyValidatingElement(element);
+
+          error('Failed %s type: %s', location, error$1.message);
+
+          setCurrentlyValidatingElement(null);
+        }
+      }
+    }
+  }
+}
+
+function setCurrentlyValidatingElement$1(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      setExtraStackFrame(stack);
+    } else {
+      setExtraStackFrame(null);
+    }
+  }
+}
+
+var propTypesMisspellWarningShown;
+
+{
+  propTypesMisspellWarningShown = false;
+}
+
+function getDeclarationErrorAddendum() {
+  if (ReactCurrentOwner.current) {
+    var name = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+    if (name) {
+      return '\n\nCheck the render method of `' + name + '`.';
+    }
+  }
+
+  return '';
+}
+
+function getSourceInfoErrorAddendum(source) {
+  if (source !== undefined) {
+    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
+    var lineNumber = source.lineNumber;
+    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
+  }
+
+  return '';
+}
+
+function getSourceInfoErrorAddendumForProps(elementProps) {
+  if (elementProps !== null && elementProps !== undefined) {
+    return getSourceInfoErrorAddendum(elementProps.__source);
+  }
+
+  return '';
+}
+/**
+ * Warn if there's no key explicitly set on dynamic arrays of children or
+ * object keys are not valid. This allows us to keep track of children between
+ * updates.
+ */
+
+
+var ownerHasKeyUseWarning = {};
+
+function getCurrentComponentErrorInfo(parentType) {
+  var info = getDeclarationErrorAddendum();
+
+  if (!info) {
+    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
+
+    if (parentName) {
+      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
+    }
+  }
+
+  return info;
+}
+/**
+ * Warn if the element doesn't have an explicit key assigned to it.
+ * This element is in an array. The array could grow and shrink or be
+ * reordered. All children that haven't already been validated are required to
+ * have a "key" property assigned to it. Error statuses are cached so a warning
+ * will only be shown once.
+ *
+ * @internal
+ * @param {ReactElement} element Element that requires a key.
+ * @param {*} parentType element's parent's type.
+ */
+
+
+function validateExplicitKey(element, parentType) {
+  if (!element._store || element._store.validated || element.key != null) {
+    return;
+  }
+
+  element._store.validated = true;
+  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
+
+  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
+    return;
+  }
+
+  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
+  // property, it may be the creator of the child that's responsible for
+  // assigning it a key.
+
+  var childOwner = '';
+
+  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
+    // Give the component that originally created this child.
+    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
+  }
+
+  {
+    setCurrentlyValidatingElement$1(element);
+
+    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
+
+    setCurrentlyValidatingElement$1(null);
+  }
+}
 /**
- * @license React
- * react.development.js
- *
- * Copyright (c) Meta Platforms, Inc. and affiliates.
+ * Ensure that every element either is passed in a static location, in an
+ * array with an explicit keys property defined, or in an object literal
+ * with valid key property.
  *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
+ * @internal
+ * @param {ReactNode} node Statically passed child of any type.
+ * @param {*} parentType node's parent's type.
  */
 
-"use strict";
-"production" !== process.env.NODE_ENV &&
-  (function () {
-    function defineDeprecationWarning(methodName, info) {
-      Object.defineProperty(Component.prototype, methodName, {
-        get: function () {
-          console.warn(
-            "%s(...) is deprecated in plain JavaScript React classes. %s",
-            info[0],
-            info[1]
-          );
-        }
-      });
-    }
-    function getIteratorFn(maybeIterable) {
-      if (null === maybeIterable || "object" !== typeof maybeIterable)
-        return null;
-      maybeIterable =
-        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
-        maybeIterable["@@iterator"];
-      return "function" === typeof maybeIterable ? maybeIterable : null;
-    }
-    function warnNoop(publicInstance, callerName) {
-      publicInstance =
-        ((publicInstance = publicInstance.constructor) &&
-          (publicInstance.displayName || publicInstance.name)) ||
-        "ReactClass";
-      var warningKey = publicInstance + "." + callerName;
-      didWarnStateUpdateForUnmountedComponent[warningKey] ||
-        (console.error(
-          "Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",
-          callerName,
-          publicInstance
-        ),
-        (didWarnStateUpdateForUnmountedComponent[warningKey] = !0));
-    }
-    function Component(props, context, updater) {
-      this.props = props;
-      this.context = context;
-      this.refs = emptyObject;
-      this.updater = updater || ReactNoopUpdateQueue;
-    }
-    function ComponentDummy() {}
-    function PureComponent(props, context, updater) {
-      this.props = props;
-      this.context = context;
-      this.refs = emptyObject;
-      this.updater = updater || ReactNoopUpdateQueue;
-    }
-    function testStringCoercion(value) {
-      return "" + value;
-    }
-    function checkKeyStringCoercion(value) {
-      try {
-        testStringCoercion(value);
-        var JSCompiler_inline_result = !1;
-      } catch (e) {
-        JSCompiler_inline_result = !0;
-      }
-      if (JSCompiler_inline_result) {
-        JSCompiler_inline_result = console;
-        var JSCompiler_temp_const = JSCompiler_inline_result.error;
-        var JSCompiler_inline_result$jscomp$0 =
-          ("function" === typeof Symbol &&
-            Symbol.toStringTag &&
-            value[Symbol.toStringTag]) ||
-          value.constructor.name ||
-          "Object";
-        JSCompiler_temp_const.call(
-          JSCompiler_inline_result,
-          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
-          JSCompiler_inline_result$jscomp$0
-        );
-        return testStringCoercion(value);
+
+function validateChildKeys(node, parentType) {
+  if (typeof node !== 'object') {
+    return;
+  }
+
+  if (isArray(node)) {
+    for (var i = 0; i < node.length; i++) {
+      var child = node[i];
+
+      if (isValidElement(child)) {
+        validateExplicitKey(child, parentType);
       }
     }
-    function getComponentNameFromType(type) {
-      if (null == type) return null;
-      if ("function" === typeof type)
-        return type.$$typeof === REACT_CLIENT_REFERENCE
-          ? null
-          : type.displayName || type.name || null;
-      if ("string" === typeof type) return type;
-      switch (type) {
-        case REACT_FRAGMENT_TYPE:
-          return "Fragment";
-        case REACT_PROFILER_TYPE:
-          return "Profiler";
-        case REACT_STRICT_MODE_TYPE:
-          return "StrictMode";
-        case REACT_SUSPENSE_TYPE:
-          return "Suspense";
-        case REACT_SUSPENSE_LIST_TYPE:
-          return "SuspenseList";
-        case REACT_ACTIVITY_TYPE:
-          return "Activity";
-      }
-      if ("object" === typeof type)
-        switch (
-          ("number" === typeof type.tag &&
-            console.error(
-              "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
-            ),
-          type.$$typeof)
-        ) {
-          case REACT_PORTAL_TYPE:
-            return "Portal";
-          case REACT_CONTEXT_TYPE:
-            return (type.displayName || "Context") + ".Provider";
-          case REACT_CONSUMER_TYPE:
-            return (type._context.displayName || "Context") + ".Consumer";
-          case REACT_FORWARD_REF_TYPE:
-            var innerType = type.render;
-            type = type.displayName;
-            type ||
-              ((type = innerType.displayName || innerType.name || ""),
-              (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
-            return type;
-          case REACT_MEMO_TYPE:
-            return (
-              (innerType = type.displayName || null),
-              null !== innerType
-                ? innerType
-                : getComponentNameFromType(type.type) || "Memo"
-            );
-          case REACT_LAZY_TYPE:
-            innerType = type._payload;
-            type = type._init;
-            try {
-              return getComponentNameFromType(type(innerType));
-            } catch (x) {}
+  } else if (isValidElement(node)) {
+    // This element was passed in a valid location.
+    if (node._store) {
+      node._store.validated = true;
+    }
+  } else if (node) {
+    var iteratorFn = getIteratorFn(node);
+
+    if (typeof iteratorFn === 'function') {
+      // Entry iterators used to provide implicit keys,
+      // but now we print a separate warning for them later.
+      if (iteratorFn !== node.entries) {
+        var iterator = iteratorFn.call(node);
+        var step;
+
+        while (!(step = iterator.next()).done) {
+          if (isValidElement(step.value)) {
+            validateExplicitKey(step.value, parentType);
+          }
         }
-      return null;
-    }
-    function getTaskName(type) {
-      if (type === REACT_FRAGMENT_TYPE) return "<>";
-      if (
-        "object" === typeof type &&
-        null !== type &&
-        type.$$typeof === REACT_LAZY_TYPE
-      )
-        return "<...>";
-      try {
-        var name = getComponentNameFromType(type);
-        return name ? "<" + name + ">" : "<...>";
-      } catch (x) {
-        return "<...>";
       }
     }
-    function getOwner() {
-      var dispatcher = ReactSharedInternals.A;
-      return null === dispatcher ? null : dispatcher.getOwner();
+  }
+}
+/**
+ * Given an element, validate that its props follow the propTypes definition,
+ * provided by the type.
+ *
+ * @param {ReactElement} element
+ */
+
+
+function validatePropTypes(element) {
+  {
+    var type = element.type;
+
+    if (type === null || type === undefined || typeof type === 'string') {
+      return;
+    }
+
+    var propTypes;
+
+    if (typeof type === 'function') {
+      propTypes = type.propTypes;
+    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
+    // Inner props are checked in the reconciler.
+    type.$$typeof === REACT_MEMO_TYPE)) {
+      propTypes = type.propTypes;
+    } else {
+      return;
+    }
+
+    if (propTypes) {
+      // Intentionally inside to avoid triggering lazy initializers:
+      var name = getComponentNameFromType(type);
+      checkPropTypes(propTypes, element.props, 'prop', name, element);
+    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
+      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
+
+      var _name = getComponentNameFromType(type);
+
+      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
     }
-    function UnknownOwner() {
-      return Error("react-stack-top-frame");
+
+    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
+      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
     }
-    function hasValidKey(config) {
-      if (hasOwnProperty.call(config, "key")) {
-        var getter = Object.getOwnPropertyDescriptor(config, "key").get;
-        if (getter && getter.isReactWarning) return !1;
-      }
-      return void 0 !== config.key;
-    }
-    function defineKeyPropWarningGetter(props, displayName) {
-      function warnAboutAccessingKey() {
-        specialPropKeyWarningShown ||
-          ((specialPropKeyWarningShown = !0),
-          console.error(
-            "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)",
-            displayName
-          ));
+  }
+}
+/**
+ * Given a fragment, validate that it can only be provided with fragment props
+ * @param {ReactElement} fragment
+ */
+
+
+function validateFragmentProps(fragment) {
+  {
+    var keys = Object.keys(fragment.props);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+
+      if (key !== 'children' && key !== 'key') {
+        setCurrentlyValidatingElement$1(fragment);
+
+        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
+
+        setCurrentlyValidatingElement$1(null);
+        break;
       }
-      warnAboutAccessingKey.isReactWarning = !0;
-      Object.defineProperty(props, "key", {
-        get: warnAboutAccessingKey,
-        configurable: !0
-      });
     }
-    function elementRefGetterWithDeprecationWarning() {
-      var componentName = getComponentNameFromType(this.type);
-      didWarnAboutElementRef[componentName] ||
-        ((didWarnAboutElementRef[componentName] = !0),
-        console.error(
-          "Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."
-        ));
-      componentName = this.props.ref;
-      return void 0 !== componentName ? componentName : null;
-    }
-    function ReactElement(
-      type,
-      key,
-      self,
-      source,
-      owner,
-      props,
-      debugStack,
-      debugTask
-    ) {
-      self = props.ref;
-      type = {
-        $$typeof: REACT_ELEMENT_TYPE,
-        type: type,
-        key: key,
-        props: props,
-        _owner: owner
-      };
-      null !== (void 0 !== self ? self : null)
-        ? Object.defineProperty(type, "ref", {
-            enumerable: !1,
-            get: elementRefGetterWithDeprecationWarning
-          })
-        : Object.defineProperty(type, "ref", { enumerable: !1, value: null });
-      type._store = {};
-      Object.defineProperty(type._store, "validated", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: 0
-      });
-      Object.defineProperty(type, "_debugInfo", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: null
-      });
-      Object.defineProperty(type, "_debugStack", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugStack
-      });
-      Object.defineProperty(type, "_debugTask", {
-        configurable: !1,
-        enumerable: !1,
-        writable: !0,
-        value: debugTask
-      });
-      Object.freeze && (Object.freeze(type.props), Object.freeze(type));
-      return type;
-    }
-    function cloneAndReplaceKey(oldElement, newKey) {
-      newKey = ReactElement(
-        oldElement.type,
-        newKey,
-        void 0,
-        void 0,
-        oldElement._owner,
-        oldElement.props,
-        oldElement._debugStack,
-        oldElement._debugTask
-      );
-      oldElement._store &&
-        (newKey._store.validated = oldElement._store.validated);
-      return newKey;
-    }
-    function isValidElement(object) {
-      return (
-        "object" === typeof object &&
-        null !== object &&
-        object.$$typeof === REACT_ELEMENT_TYPE
-      );
-    }
-    function escape(key) {
-      var escaperLookup = { "=": "=0", ":": "=2" };
-      return (
-        "$" +
-        key.replace(/[=:]/g, function (match) {
-          return escaperLookup[match];
-        })
-      );
-    }
-    function getElementKey(element, index) {
-      return "object" === typeof element &&
-        null !== element &&
-        null != element.key
-        ? (checkKeyStringCoercion(element.key), escape("" + element.key))
-        : index.toString(36);
-    }
-    function noop$1() {}
-    function resolveThenable(thenable) {
-      switch (thenable.status) {
-        case "fulfilled":
-          return thenable.value;
-        case "rejected":
-          throw thenable.reason;
-        default:
-          switch (
-            ("string" === typeof thenable.status
-              ? thenable.then(noop$1, noop$1)
-              : ((thenable.status = "pending"),
-                thenable.then(
-                  function (fulfilledValue) {
-                    "pending" === thenable.status &&
-                      ((thenable.status = "fulfilled"),
-                      (thenable.value = fulfilledValue));
-                  },
-                  function (error) {
-                    "pending" === thenable.status &&
-                      ((thenable.status = "rejected"),
-                      (thenable.reason = error));
-                  }
-                )),
-            thenable.status)
-          ) {
-            case "fulfilled":
-              return thenable.value;
-            case "rejected":
-              throw thenable.reason;
-          }
+
+    if (fragment.ref !== null) {
+      setCurrentlyValidatingElement$1(fragment);
+
+      error('Invalid attribute `ref` supplied to `React.Fragment`.');
+
+      setCurrentlyValidatingElement$1(null);
+    }
+  }
+}
+function createElementWithValidation(type, props, children) {
+  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
+  // succeed and there will likely be errors in render.
+
+  if (!validType) {
+    var info = '';
+
+    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
+      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
+    }
+
+    var sourceInfo = getSourceInfoErrorAddendumForProps(props);
+
+    if (sourceInfo) {
+      info += sourceInfo;
+    } else {
+      info += getDeclarationErrorAddendum();
+    }
+
+    var typeString;
+
+    if (type === null) {
+      typeString = 'null';
+    } else if (isArray(type)) {
+      typeString = 'array';
+    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
+      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
+      info = ' Did you accidentally export a JSX literal instead of a component?';
+    } else {
+      typeString = typeof type;
+    }
+
+    {
+      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
+    }
+  }
+
+  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
+  // TODO: Drop this when these are no longer allowed as the type argument.
+
+  if (element == null) {
+    return element;
+  } // Skip key warning if the type isn't valid since our key validation logic
+  // doesn't expect a non-string/function type and can throw confusing errors.
+  // We don't want exception behavior to differ between dev and prod.
+  // (Rendering will throw with a helpful message and as soon as the type is
+  // fixed, the key warnings will appear.)
+
+
+  if (validType) {
+    for (var i = 2; i < arguments.length; i++) {
+      validateChildKeys(arguments[i], type);
+    }
+  }
+
+  if (type === REACT_FRAGMENT_TYPE) {
+    validateFragmentProps(element);
+  } else {
+    validatePropTypes(element);
+  }
+
+  return element;
+}
+var didWarnAboutDeprecatedCreateFactory = false;
+function createFactoryWithValidation(type) {
+  var validatedFactory = createElementWithValidation.bind(null, type);
+  validatedFactory.type = type;
+
+  {
+    if (!didWarnAboutDeprecatedCreateFactory) {
+      didWarnAboutDeprecatedCreateFactory = true;
+
+      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
+    } // Legacy hook: remove it
+
+
+    Object.defineProperty(validatedFactory, 'type', {
+      enumerable: false,
+      get: function () {
+        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
+
+        Object.defineProperty(this, 'type', {
+          value: type
+        });
+        return type;
       }
-      throw thenable;
-    }
-    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
-      var type = typeof children;
-      if ("undefined" === type || "boolean" === type) children = null;
-      var invokeCallback = !1;
-      if (null === children) invokeCallback = !0;
-      else
-        switch (type) {
-          case "bigint":
-          case "string":
-          case "number":
-            invokeCallback = !0;
-            break;
-          case "object":
-            switch (children.$$typeof) {
-              case REACT_ELEMENT_TYPE:
-              case REACT_PORTAL_TYPE:
-                invokeCallback = !0;
-                break;
-              case REACT_LAZY_TYPE:
-                return (
-                  (invokeCallback = children._init),
-                  mapIntoArray(
-                    invokeCallback(children._payload),
-                    array,
-                    escapedPrefix,
-                    nameSoFar,
-                    callback
-                  )
-                );
+    });
+  }
+
+  return validatedFactory;
+}
+function cloneElementWithValidation(element, props, children) {
+  var newElement = cloneElement.apply(this, arguments);
+
+  for (var i = 2; i < arguments.length; i++) {
+    validateChildKeys(arguments[i], newElement.type);
+  }
+
+  validatePropTypes(newElement);
+  return newElement;
+}
+
+var ContextRegistry$1 = ReactSharedInternals.ContextRegistry;
+function createServerContext(globalName, defaultValue) {
+
+  var wasDefined = true;
+
+  if (!ContextRegistry$1[globalName]) {
+    wasDefined = false;
+    var _context = {
+      $$typeof: REACT_SERVER_CONTEXT_TYPE,
+      // As a workaround to support multiple concurrent renderers, we categorize
+      // some renderers as primary and others as secondary. We only expect
+      // there to be two concurrent renderers at most: React Native (primary) and
+      // Fabric (secondary); React DOM (primary) and React ART (secondary).
+      // Secondary renderers store their context values on separate fields.
+      _currentValue: defaultValue,
+      _currentValue2: defaultValue,
+      _defaultValue: defaultValue,
+      // Used to track how many concurrent renderers this context currently
+      // supports within in a single renderer. Such as parallel server rendering.
+      _threadCount: 0,
+      // These are circular
+      Provider: null,
+      Consumer: null,
+      _globalName: globalName
+    };
+    _context.Provider = {
+      $$typeof: REACT_PROVIDER_TYPE,
+      _context: _context
+    };
+
+    {
+      var hasWarnedAboutUsingConsumer;
+      _context._currentRenderer = null;
+      _context._currentRenderer2 = null;
+      Object.defineProperties(_context, {
+        Consumer: {
+          get: function () {
+            if (!hasWarnedAboutUsingConsumer) {
+              error('Consumer pattern is not supported by ReactServerContext');
+
+              hasWarnedAboutUsingConsumer = true;
             }
+
+            return null;
+          }
         }
-      if (invokeCallback) {
-        invokeCallback = children;
-        callback = callback(invokeCallback);
-        var childKey =
-          "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
-        isArrayImpl(callback)
-          ? ((escapedPrefix = ""),
-            null != childKey &&
-              (escapedPrefix =
-                childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"),
-            mapIntoArray(callback, array, escapedPrefix, "", function (c) {
-              return c;
-            }))
-          : null != callback &&
-            (isValidElement(callback) &&
-              (null != callback.key &&
-                ((invokeCallback && invokeCallback.key === callback.key) ||
-                  checkKeyStringCoercion(callback.key)),
-              (escapedPrefix = cloneAndReplaceKey(
-                callback,
-                escapedPrefix +
-                  (null == callback.key ||
-                  (invokeCallback && invokeCallback.key === callback.key)
-                    ? ""
-                    : ("" + callback.key).replace(
-                        userProvidedKeyEscapeRegex,
-                        "$&/"
-                      ) + "/") +
-                  childKey
-              )),
-              "" !== nameSoFar &&
-                null != invokeCallback &&
-                isValidElement(invokeCallback) &&
-                null == invokeCallback.key &&
-                invokeCallback._store &&
-                !invokeCallback._store.validated &&
-                (escapedPrefix._store.validated = 2),
-              (callback = escapedPrefix)),
-            array.push(callback));
-        return 1;
-      }
-      invokeCallback = 0;
-      childKey = "" === nameSoFar ? "." : nameSoFar + ":";
-      if (isArrayImpl(children))
-        for (var i = 0; i < children.length; i++)
-          (nameSoFar = children[i]),
-            (type = childKey + getElementKey(nameSoFar, i)),
-            (invokeCallback += mapIntoArray(
-              nameSoFar,
-              array,
-              escapedPrefix,
-              type,
-              callback
-            ));
-      else if (((i = getIteratorFn(children)), "function" === typeof i))
-        for (
-          i === children.entries &&
-            (didWarnAboutMaps ||
-              console.warn(
-                "Using Maps as children is not supported. Use an array of keyed ReactElements instead."
-              ),
-            (didWarnAboutMaps = !0)),
-            children = i.call(children),
-            i = 0;
-          !(nameSoFar = children.next()).done;
-
-        )
-          (nameSoFar = nameSoFar.value),
-            (type = childKey + getElementKey(nameSoFar, i++)),
-            (invokeCallback += mapIntoArray(
-              nameSoFar,
-              array,
-              escapedPrefix,
-              type,
-              callback
-            ));
-      else if ("object" === type) {
-        if ("function" === typeof children.then)
-          return mapIntoArray(
-            resolveThenable(children),
-            array,
-            escapedPrefix,
-            nameSoFar,
-            callback
-          );
-        array = String(children);
-        throw Error(
-          "Objects are not valid as a React child (found: " +
-            ("[object Object]" === array
-              ? "object with keys {" + Object.keys(children).join(", ") + "}"
-              : array) +
-            "). If you meant to render a collection of children, use an array instead."
-        );
-      }
-      return invokeCallback;
-    }
-    function mapChildren(children, func, context) {
-      if (null == children) return children;
-      var result = [],
-        count = 0;
-      mapIntoArray(children, result, "", "", function (child) {
-        return func.call(context, child, count++);
       });
-      return result;
-    }
-    function lazyInitializer(payload) {
-      if (-1 === payload._status) {
-        var ctor = payload._result;
-        ctor = ctor();
-        ctor.then(
-          function (moduleObject) {
-            if (0 === payload._status || -1 === payload._status)
-              (payload._status = 1), (payload._result = moduleObject);
-          },
-          function (error) {
-            if (0 === payload._status || -1 === payload._status)
-              (payload._status = 2), (payload._result = error);
-          }
-        );
-        -1 === payload._status &&
-          ((payload._status = 0), (payload._result = ctor));
-      }
-      if (1 === payload._status)
-        return (
-          (ctor = payload._result),
-          void 0 === ctor &&
-            console.error(
-              "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?",
-              ctor
-            ),
-          "default" in ctor ||
-            console.error(
-              "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))",
-              ctor
-            ),
-          ctor.default
-        );
-      throw payload._result;
-    }
-    function resolveDispatcher() {
-      var dispatcher = ReactSharedInternals.H;
-      null === dispatcher &&
-        console.error(
-          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
-        );
-      return dispatcher;
-    }
-    function noop() {}
-    function enqueueTask(task) {
-      if (null === enqueueTaskImpl)
-        try {
-          var requireString = ("require" + Math.random()).slice(0, 7);
-          enqueueTaskImpl = (module && module[requireString]).call(
-            module,
-            "timers"
-          ).setImmediate;
-        } catch (_err) {
-          enqueueTaskImpl = function (callback) {
-            !1 === didWarnAboutMessageChannel &&
-              ((didWarnAboutMessageChannel = !0),
-              "undefined" === typeof MessageChannel &&
-                console.error(
-                  "This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."
-                ));
-            var channel = new MessageChannel();
-            channel.port1.onmessage = callback;
-            channel.port2.postMessage(void 0);
-          };
+    }
+
+    ContextRegistry$1[globalName] = _context;
+  }
+
+  var context = ContextRegistry$1[globalName];
+
+  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+    context._defaultValue = defaultValue;
+
+    if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._currentValue = defaultValue;
+    }
+
+    if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._currentValue2 = defaultValue;
+    }
+  } else if (wasDefined) {
+    throw new Error("ServerContext: " + globalName + " already defined");
+  }
+
+  return context;
+}
+
+function startTransition(scope, options) {
+  var prevTransition = ReactCurrentBatchConfig.transition;
+  ReactCurrentBatchConfig.transition = {};
+  var currentTransition = ReactCurrentBatchConfig.transition;
+
+  {
+    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
+  }
+
+  try {
+    scope();
+  } finally {
+    ReactCurrentBatchConfig.transition = prevTransition;
+
+    {
+      if (prevTransition === null && currentTransition._updatedFibers) {
+        var updatedFibersCount = currentTransition._updatedFibers.size;
+
+        if (updatedFibersCount > 10) {
+          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
         }
-      return enqueueTaskImpl(task);
-    }
-    function aggregateErrors(errors) {
-      return 1 < errors.length && "function" === typeof AggregateError
-        ? new AggregateError(errors)
-        : errors[0];
-    }
-    function popActScope(prevActQueue, prevActScopeDepth) {
-      prevActScopeDepth !== actScopeDepth - 1 &&
-        console.error(
-          "You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "
-        );
-      actScopeDepth = prevActScopeDepth;
-    }
-    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
-      var queue = ReactSharedInternals.actQueue;
-      if (null !== queue)
-        if (0 !== queue.length)
-          try {
-            flushActQueue(queue);
-            enqueueTask(function () {
-              return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
-            });
-            return;
-          } catch (error) {
-            ReactSharedInternals.thrownErrors.push(error);
-          }
-        else ReactSharedInternals.actQueue = null;
-      0 < ReactSharedInternals.thrownErrors.length
-        ? ((queue = aggregateErrors(ReactSharedInternals.thrownErrors)),
-          (ReactSharedInternals.thrownErrors.length = 0),
-          reject(queue))
-        : resolve(returnValue);
-    }
-    function flushActQueue(queue) {
-      if (!isFlushing) {
-        isFlushing = !0;
-        var i = 0;
-        try {
-          for (; i < queue.length; i++) {
-            var callback = queue[i];
-            do {
-              ReactSharedInternals.didUsePromise = !1;
-              var continuation = callback(!1);
-              if (null !== continuation) {
-                if (ReactSharedInternals.didUsePromise) {
-                  queue[i] = callback;
-                  queue.splice(0, i);
-                  return;
-                }
-                callback = continuation;
-              } else break;
-            } while (1);
+
+        currentTransition._updatedFibers.clear();
+      }
+    }
+  }
+}
+
+var didWarnAboutMessageChannel = false;
+var enqueueTaskImpl = null;
+function enqueueTask(task) {
+  if (enqueueTaskImpl === null) {
+    try {
+      // read require off the module object to get around the bundlers.
+      // we don't want them to detect a require and bundle a Node polyfill.
+      var requireString = ('require' + Math.random()).slice(0, 7);
+      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
+      // version of setImmediate, bypassing fake timers if any.
+
+      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
+    } catch (_err) {
+      // we're in a browser
+      // we can't use regular timers because they may still be faked
+      // so we try MessageChannel+postMessage instead
+      enqueueTaskImpl = function (callback) {
+        {
+          if (didWarnAboutMessageChannel === false) {
+            didWarnAboutMessageChannel = true;
+
+            if (typeof MessageChannel === 'undefined') {
+              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
+            }
           }
-          queue.length = 0;
-        } catch (error) {
-          queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
-        } finally {
-          isFlushing = !1;
         }
-      }
+
+        var channel = new MessageChannel();
+        channel.port1.onmessage = callback;
+        channel.port2.postMessage(undefined);
+      };
     }
-    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
-      "function" ===
-        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&
-      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
-    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
-      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
-      REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
-      REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
-      REACT_PROFILER_TYPE = Symbol.for("react.profiler");
-    Symbol.for("react.provider");
-    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
-      REACT_CONTEXT_TYPE = Symbol.for("react.context"),
-      REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
-      REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
-      REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
-      REACT_MEMO_TYPE = Symbol.for("react.memo"),
-      REACT_LAZY_TYPE = Symbol.for("react.lazy"),
-      REACT_ACTIVITY_TYPE = Symbol.for("react.activity"),
-      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
-      didWarnStateUpdateForUnmountedComponent = {},
-      ReactNoopUpdateQueue = {
-        isMounted: function () {
-          return !1;
-        },
-        enqueueForceUpdate: function (publicInstance) {
-          warnNoop(publicInstance, "forceUpdate");
-        },
-        enqueueReplaceState: function (publicInstance) {
-          warnNoop(publicInstance, "replaceState");
-        },
-        enqueueSetState: function (publicInstance) {
-          warnNoop(publicInstance, "setState");
+  }
+
+  return enqueueTaskImpl(task);
+}
+
+var actScopeDepth = 0;
+var didWarnNoAwaitAct = false;
+function act(callback) {
+  {
+    // `act` calls can be nested, so we track the depth. This represents the
+    // number of `act` scopes on the stack.
+    var prevActScopeDepth = actScopeDepth;
+    actScopeDepth++;
+
+    if (ReactCurrentActQueue.current === null) {
+      // This is the outermost `act` scope. Initialize the queue. The reconciler
+      // will detect the queue and use it instead of Scheduler.
+      ReactCurrentActQueue.current = [];
+    }
+
+    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
+    var result;
+
+    try {
+      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
+      // set to `true` while the given callback is executed, not for updates
+      // triggered during an async event, because this is how the legacy
+      // implementation of `act` behaved.
+      ReactCurrentActQueue.isBatchingLegacy = true;
+      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
+      // which flushed updates immediately after the scope function exits, even
+      // if it's an async function.
+
+      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
+        var queue = ReactCurrentActQueue.current;
+
+        if (queue !== null) {
+          ReactCurrentActQueue.didScheduleLegacyUpdate = false;
+          flushActQueue(queue);
         }
-      },
-      assign = Object.assign,
-      emptyObject = {};
-    Object.freeze(emptyObject);
-    Component.prototype.isReactComponent = {};
-    Component.prototype.setState = function (partialState, callback) {
-      if (
-        "object" !== typeof partialState &&
-        "function" !== typeof partialState &&
-        null != partialState
-      )
-        throw Error(
-          "takes an object of state variables to update or a function which returns an object of state variables."
-        );
-      this.updater.enqueueSetState(this, partialState, callback, "setState");
-    };
-    Component.prototype.forceUpdate = function (callback) {
-      this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
-    };
-    var deprecatedAPIs = {
-        isMounted: [
-          "isMounted",
-          "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
-        ],
-        replaceState: [
-          "replaceState",
-          "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
-        ]
-      },
-      fnName;
-    for (fnName in deprecatedAPIs)
-      deprecatedAPIs.hasOwnProperty(fnName) &&
-        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
-    ComponentDummy.prototype = Component.prototype;
-    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
-    deprecatedAPIs.constructor = PureComponent;
-    assign(deprecatedAPIs, Component.prototype);
-    deprecatedAPIs.isPureReactComponent = !0;
-    var isArrayImpl = Array.isArray,
-      REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"),
-      ReactSharedInternals = {
-        H: null,
-        A: null,
-        T: null,
-        S: null,
-        V: null,
-        actQueue: null,
-        isBatchingLegacy: !1,
-        didScheduleLegacyUpdate: !1,
-        didUsePromise: !1,
-        thrownErrors: [],
-        getCurrentStack: null,
-        recentlyCreatedOwnerStacks: 0
-      },
-      hasOwnProperty = Object.prototype.hasOwnProperty,
-      createTask = console.createTask
-        ? console.createTask
-        : function () {
-            return null;
-          };
-    deprecatedAPIs = {
-      react_stack_bottom_frame: function (callStackForError) {
-        return callStackForError();
       }
-    };
-    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
-    var didWarnAboutElementRef = {};
-    var unknownOwnerDebugStack = deprecatedAPIs.react_stack_bottom_frame.bind(
-      deprecatedAPIs,
-      UnknownOwner
-    )();
-    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
-    var didWarnAboutMaps = !1,
-      userProvidedKeyEscapeRegex = /\/+/g,
-      reportGlobalError =
-        "function" === typeof reportError
-          ? reportError
-          : function (error) {
-              if (
-                "object" === typeof window &&
-                "function" === typeof window.ErrorEvent
-              ) {
-                var event = new window.ErrorEvent("error", {
-                  bubbles: !0,
-                  cancelable: !0,
-                  message:
-                    "object" === typeof error &&
-                    null !== error &&
-                    "string" === typeof error.message
-                      ? String(error.message)
-                      : String(error),
-                  error: error
-                });
-                if (!window.dispatchEvent(event)) return;
-              } else if (
-                "object" === typeof process &&
-                "function" === typeof process.emit
-              ) {
-                process.emit("uncaughtException", error);
-                return;
-              }
-              console.error(error);
-            },
-      didWarnAboutMessageChannel = !1,
-      enqueueTaskImpl = null,
-      actScopeDepth = 0,
-      didWarnNoAwaitAct = !1,
-      isFlushing = !1,
-      queueSeveralMicrotasks =
-        "function" === typeof queueMicrotask
-          ? function (callback) {
-              queueMicrotask(function () {
-                return queueMicrotask(callback);
-              });
+    } catch (error) {
+      popActScope(prevActScopeDepth);
+      throw error;
+    } finally {
+      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
+    }
+
+    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
+      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
+      // for it to resolve before exiting the current scope.
+
+      var wasAwaited = false;
+      var thenable = {
+        then: function (resolve, reject) {
+          wasAwaited = true;
+          thenableResult.then(function (returnValue) {
+            popActScope(prevActScopeDepth);
+
+            if (actScopeDepth === 0) {
+              // We've exited the outermost act scope. Recursively flush the
+              // queue until there's no remaining work.
+              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+            } else {
+              resolve(returnValue);
             }
-          : enqueueTask;
-    deprecatedAPIs = Object.freeze({
-      __proto__: null,
-      c: function (size) {
-        return resolveDispatcher().useMemoCache(size);
-      }
-    });
-    exports.Children = {
-      map: mapChildren,
-      forEach: function (children, forEachFunc, forEachContext) {
-        mapChildren(
-          children,
-          function () {
-            forEachFunc.apply(this, arguments);
-          },
-          forEachContext
-        );
-      },
-      count: function (children) {
-        var n = 0;
-        mapChildren(children, function () {
-          n++;
-        });
-        return n;
-      },
-      toArray: function (children) {
-        return (
-          mapChildren(children, function (child) {
-            return child;
-          }) || []
-        );
-      },
-      only: function (children) {
-        if (!isValidElement(children))
-          throw Error(
-            "React.Children.only expected to receive a single React element child."
-          );
-        return children;
-      }
-    };
-    exports.Component = Component;
-    exports.Fragment = REACT_FRAGMENT_TYPE;
-    exports.Profiler = REACT_PROFILER_TYPE;
-    exports.PureComponent = PureComponent;
-    exports.StrictMode = REACT_STRICT_MODE_TYPE;
-    exports.Suspense = REACT_SUSPENSE_TYPE;
-    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
-      ReactSharedInternals;
-    exports.__COMPILER_RUNTIME = deprecatedAPIs;
-    exports.act = function (callback) {
-      var prevActQueue = ReactSharedInternals.actQueue,
-        prevActScopeDepth = actScopeDepth;
-      actScopeDepth++;
-      var queue = (ReactSharedInternals.actQueue =
-          null !== prevActQueue ? prevActQueue : []),
-        didAwaitActCall = !1;
-      try {
-        var result = callback();
-      } catch (error) {
-        ReactSharedInternals.thrownErrors.push(error);
+          }, function (error) {
+            // The callback threw an error.
+            popActScope(prevActScopeDepth);
+            reject(error);
+          });
+        }
+      };
+
+      {
+        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
+          // eslint-disable-next-line no-undef
+          Promise.resolve().then(function () {}).then(function () {
+            if (!wasAwaited) {
+              didWarnNoAwaitAct = true;
+
+              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
+            }
+          });
+        }
       }
-      if (0 < ReactSharedInternals.thrownErrors.length)
-        throw (
-          (popActScope(prevActQueue, prevActScopeDepth),
-          (callback = aggregateErrors(ReactSharedInternals.thrownErrors)),
-          (ReactSharedInternals.thrownErrors.length = 0),
-          callback)
-        );
-      if (
-        null !== result &&
-        "object" === typeof result &&
-        "function" === typeof result.then
-      ) {
-        var thenable = result;
-        queueSeveralMicrotasks(function () {
-          didAwaitActCall ||
-            didWarnNoAwaitAct ||
-            ((didWarnNoAwaitAct = !0),
-            console.error(
-              "You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"
-            ));
-        });
-        return {
+
+      return thenable;
+    } else {
+      var returnValue = result; // The callback is not an async function. Exit the current scope
+      // immediately, without awaiting.
+
+      popActScope(prevActScopeDepth);
+
+      if (actScopeDepth === 0) {
+        // Exiting the outermost act scope. Flush the queue.
+        var _queue = ReactCurrentActQueue.current;
+
+        if (_queue !== null) {
+          flushActQueue(_queue);
+          ReactCurrentActQueue.current = null;
+        } // Return a thenable. If the user awaits it, we'll flush again in
+        // case additional work was scheduled by a microtask.
+
+
+        var _thenable = {
           then: function (resolve, reject) {
-            didAwaitActCall = !0;
-            thenable.then(
-              function (returnValue) {
-                popActScope(prevActQueue, prevActScopeDepth);
-                if (0 === prevActScopeDepth) {
-                  try {
-                    flushActQueue(queue),
-                      enqueueTask(function () {
-                        return recursivelyFlushAsyncActWork(
-                          returnValue,
-                          resolve,
-                          reject
-                        );
-                      });
-                  } catch (error$0) {
-                    ReactSharedInternals.thrownErrors.push(error$0);
-                  }
-                  if (0 < ReactSharedInternals.thrownErrors.length) {
-                    var _thrownError = aggregateErrors(
-                      ReactSharedInternals.thrownErrors
-                    );
-                    ReactSharedInternals.thrownErrors.length = 0;
-                    reject(_thrownError);
-                  }
-                } else resolve(returnValue);
-              },
-              function (error) {
-                popActScope(prevActQueue, prevActScopeDepth);
-                0 < ReactSharedInternals.thrownErrors.length
-                  ? ((error = aggregateErrors(
-                      ReactSharedInternals.thrownErrors
-                    )),
-                    (ReactSharedInternals.thrownErrors.length = 0),
-                    reject(error))
-                  : reject(error);
-              }
-            );
+            // Confirm we haven't re-entered another `act` scope, in case
+            // the user does something weird like await the thenable
+            // multiple times.
+            if (ReactCurrentActQueue.current === null) {
+              // Recursively flush the queue until there's no remaining work.
+              ReactCurrentActQueue.current = [];
+              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+            } else {
+              resolve(returnValue);
+            }
           }
         };
-      }
-      var returnValue$jscomp$0 = result;
-      popActScope(prevActQueue, prevActScopeDepth);
-      0 === prevActScopeDepth &&
-        (flushActQueue(queue),
-        0 !== queue.length &&
-          queueSeveralMicrotasks(function () {
-            didAwaitActCall ||
-              didWarnNoAwaitAct ||
-              ((didWarnNoAwaitAct = !0),
-              console.error(
-                "A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"
-              ));
-          }),
-        (ReactSharedInternals.actQueue = null));
-      if (0 < ReactSharedInternals.thrownErrors.length)
-        throw (
-          ((callback = aggregateErrors(ReactSharedInternals.thrownErrors)),
-          (ReactSharedInternals.thrownErrors.length = 0),
-          callback)
-        );
-      return {
-        then: function (resolve, reject) {
-          didAwaitActCall = !0;
-          0 === prevActScopeDepth
-            ? ((ReactSharedInternals.actQueue = queue),
-              enqueueTask(function () {
-                return recursivelyFlushAsyncActWork(
-                  returnValue$jscomp$0,
-                  resolve,
-                  reject
-                );
-              }))
-            : resolve(returnValue$jscomp$0);
-        }
-      };
-    };
-    exports.cache = function (fn) {
-      return function () {
-        return fn.apply(null, arguments);
-      };
-    };
-    exports.captureOwnerStack = function () {
-      var getCurrentStack = ReactSharedInternals.getCurrentStack;
-      return null === getCurrentStack ? null : getCurrentStack();
-    };
-    exports.cloneElement = function (element, config, children) {
-      if (null === element || void 0 === element)
-        throw Error(
-          "The argument must be a React element, but you passed " +
-            element +
-            "."
-        );
-      var props = assign({}, element.props),
-        key = element.key,
-        owner = element._owner;
-      if (null != config) {
-        var JSCompiler_inline_result;
-        a: {
-          if (
-            hasOwnProperty.call(config, "ref") &&
-            (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(
-              config,
-              "ref"
-            ).get) &&
-            JSCompiler_inline_result.isReactWarning
-          ) {
-            JSCompiler_inline_result = !1;
-            break a;
+        return _thenable;
+      } else {
+        // Since we're inside a nested `act` scope, the returned thenable
+        // immediately resolves. The outer scope will flush the queue.
+        var _thenable2 = {
+          then: function (resolve, reject) {
+            resolve(returnValue);
           }
-          JSCompiler_inline_result = void 0 !== config.ref;
-        }
-        JSCompiler_inline_result && (owner = getOwner());
-        hasValidKey(config) &&
-          (checkKeyStringCoercion(config.key), (key = "" + config.key));
-        for (propName in config)
-          !hasOwnProperty.call(config, propName) ||
-            "key" === propName ||
-            "__self" === propName ||
-            "__source" === propName ||
-            ("ref" === propName && void 0 === config.ref) ||
-            (props[propName] = config[propName]);
-      }
-      var propName = arguments.length - 2;
-      if (1 === propName) props.children = children;
-      else if (1 < propName) {
-        JSCompiler_inline_result = Array(propName);
-        for (var i = 0; i < propName; i++)
-          JSCompiler_inline_result[i] = arguments[i + 2];
-        props.children = JSCompiler_inline_result;
-      }
-      props = ReactElement(
-        element.type,
-        key,
-        void 0,
-        void 0,
-        owner,
-        props,
-        element._debugStack,
-        element._debugTask
-      );
-      for (key = 2; key < arguments.length; key++)
-        (owner = arguments[key]),
-          isValidElement(owner) && owner._store && (owner._store.validated = 1);
-      return props;
-    };
-    exports.createContext = function (defaultValue) {
-      defaultValue = {
-        $$typeof: REACT_CONTEXT_TYPE,
-        _currentValue: defaultValue,
-        _currentValue2: defaultValue,
-        _threadCount: 0,
-        Provider: null,
-        Consumer: null
-      };
-      defaultValue.Provider = defaultValue;
-      defaultValue.Consumer = {
-        $$typeof: REACT_CONSUMER_TYPE,
-        _context: defaultValue
-      };
-      defaultValue._currentRenderer = null;
-      defaultValue._currentRenderer2 = null;
-      return defaultValue;
-    };
-    exports.createElement = function (type, config, children) {
-      for (var i = 2; i < arguments.length; i++) {
-        var node = arguments[i];
-        isValidElement(node) && node._store && (node._store.validated = 1);
+        };
+        return _thenable2;
       }
-      i = {};
-      node = null;
-      if (null != config)
-        for (propName in (didWarnAboutOldJSXRuntime ||
-          !("__self" in config) ||
-          "key" in config ||
-          ((didWarnAboutOldJSXRuntime = !0),
-          console.warn(
-            "Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform"
-          )),
-        hasValidKey(config) &&
-          (checkKeyStringCoercion(config.key), (node = "" + config.key)),
-        config))
-          hasOwnProperty.call(config, propName) &&
-            "key" !== propName &&
-            "__self" !== propName &&
-            "__source" !== propName &&
-            (i[propName] = config[propName]);
-      var childrenLength = arguments.length - 2;
-      if (1 === childrenLength) i.children = children;
-      else if (1 < childrenLength) {
-        for (
-          var childArray = Array(childrenLength), _i = 0;
-          _i < childrenLength;
-          _i++
-        )
-          childArray[_i] = arguments[_i + 2];
-        Object.freeze && Object.freeze(childArray);
-        i.children = childArray;
+    }
+  }
+}
+
+function popActScope(prevActScopeDepth) {
+  {
+    if (prevActScopeDepth !== actScopeDepth - 1) {
+      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
+    }
+
+    actScopeDepth = prevActScopeDepth;
+  }
+}
+
+function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
+  {
+    var queue = ReactCurrentActQueue.current;
+
+    if (queue !== null) {
+      try {
+        flushActQueue(queue);
+        enqueueTask(function () {
+          if (queue.length === 0) {
+            // No additional work was scheduled. Finish.
+            ReactCurrentActQueue.current = null;
+            resolve(returnValue);
+          } else {
+            // Keep flushing work until there's none left.
+            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+          }
+        });
+      } catch (error) {
+        reject(error);
       }
-      if (type && type.defaultProps)
-        for (propName in ((childrenLength = type.defaultProps), childrenLength))
-          void 0 === i[propName] && (i[propName] = childrenLength[propName]);
-      node &&
-        defineKeyPropWarningGetter(
-          i,
-          "function" === typeof type
-            ? type.displayName || type.name || "Unknown"
-            : type
-        );
-      var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
-      return ReactElement(
-        type,
-        node,
-        void 0,
-        void 0,
-        getOwner(),
-        i,
-        propName ? Error("react-stack-top-frame") : unknownOwnerDebugStack,
-        propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask
-      );
-    };
-    exports.createRef = function () {
-      var refObject = { current: null };
-      Object.seal(refObject);
-      return refObject;
-    };
-    exports.forwardRef = function (render) {
-      null != render && render.$$typeof === REACT_MEMO_TYPE
-        ? console.error(
-            "forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."
-          )
-        : "function" !== typeof render
-          ? console.error(
-              "forwardRef requires a render function but was given %s.",
-              null === render ? "null" : typeof render
-            )
-          : 0 !== render.length &&
-            2 !== render.length &&
-            console.error(
-              "forwardRef render functions accept exactly two parameters: props and ref. %s",
-              1 === render.length
-                ? "Did you forget to use the ref parameter?"
-                : "Any additional parameter will be undefined."
-            );
-      null != render &&
-        null != render.defaultProps &&
-        console.error(
-          "forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?"
-        );
-      var elementType = { $$typeof: REACT_FORWARD_REF_TYPE, render: render },
-        ownName;
-      Object.defineProperty(elementType, "displayName", {
-        enumerable: !1,
-        configurable: !0,
-        get: function () {
-          return ownName;
-        },
-        set: function (name) {
-          ownName = name;
-          render.name ||
-            render.displayName ||
-            (Object.defineProperty(render, "name", { value: name }),
-            (render.displayName = name));
-        }
-      });
-      return elementType;
-    };
-    exports.isValidElement = isValidElement;
-    exports.lazy = function (ctor) {
-      return {
-        $$typeof: REACT_LAZY_TYPE,
-        _payload: { _status: -1, _result: ctor },
-        _init: lazyInitializer
-      };
-    };
-    exports.memo = function (type, compare) {
-      null == type &&
-        console.error(
-          "memo: The first argument must be a component. Instead received: %s",
-          null === type ? "null" : typeof type
-        );
-      compare = {
-        $$typeof: REACT_MEMO_TYPE,
-        type: type,
-        compare: void 0 === compare ? null : compare
-      };
-      var ownName;
-      Object.defineProperty(compare, "displayName", {
-        enumerable: !1,
-        configurable: !0,
-        get: function () {
-          return ownName;
-        },
-        set: function (name) {
-          ownName = name;
-          type.name ||
-            type.displayName ||
-            (Object.defineProperty(type, "name", { value: name }),
-            (type.displayName = name));
-        }
-      });
-      return compare;
-    };
-    exports.startTransition = function (scope) {
-      var prevTransition = ReactSharedInternals.T,
-        currentTransition = {};
-      ReactSharedInternals.T = currentTransition;
-      currentTransition._updatedFibers = new Set();
+    } else {
+      resolve(returnValue);
+    }
+  }
+}
+
+var isFlushing = false;
+
+function flushActQueue(queue) {
+  {
+    if (!isFlushing) {
+      // Prevent re-entrance.
+      isFlushing = true;
+      var i = 0;
+
       try {
-        var returnValue = scope(),
-          onStartTransitionFinish = ReactSharedInternals.S;
-        null !== onStartTransitionFinish &&
-          onStartTransitionFinish(currentTransition, returnValue);
-        "object" === typeof returnValue &&
-          null !== returnValue &&
-          "function" === typeof returnValue.then &&
-          returnValue.then(noop, reportGlobalError);
+        for (; i < queue.length; i++) {
+          var callback = queue[i];
+
+          do {
+            callback = callback(true);
+          } while (callback !== null);
+        }
+
+        queue.length = 0;
       } catch (error) {
-        reportGlobalError(error);
+        // If something throws, leave the remaining callbacks on the queue.
+        queue = queue.slice(i + 1);
+        throw error;
       } finally {
-        null === prevTransition &&
-          currentTransition._updatedFibers &&
-          ((scope = currentTransition._updatedFibers.size),
-          currentTransition._updatedFibers.clear(),
-          10 < scope &&
-            console.warn(
-              "Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."
-            )),
-          (ReactSharedInternals.T = prevTransition);
+        isFlushing = false;
       }
-    };
-    exports.unstable_useCacheRefresh = function () {
-      return resolveDispatcher().useCacheRefresh();
-    };
-    exports.use = function (usable) {
-      return resolveDispatcher().use(usable);
-    };
-    exports.useActionState = function (action, initialState, permalink) {
-      return resolveDispatcher().useActionState(
-        action,
-        initialState,
-        permalink
-      );
-    };
-    exports.useCallback = function (callback, deps) {
-      return resolveDispatcher().useCallback(callback, deps);
-    };
-    exports.useContext = function (Context) {
-      var dispatcher = resolveDispatcher();
-      Context.$$typeof === REACT_CONSUMER_TYPE &&
-        console.error(
-          "Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?"
-        );
-      return dispatcher.useContext(Context);
-    };
-    exports.useDebugValue = function (value, formatterFn) {
-      return resolveDispatcher().useDebugValue(value, formatterFn);
-    };
-    exports.useDeferredValue = function (value, initialValue) {
-      return resolveDispatcher().useDeferredValue(value, initialValue);
-    };
-    exports.useEffect = function (create, createDeps, update) {
-      null == create &&
-        console.warn(
-          "React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?"
-        );
-      var dispatcher = resolveDispatcher();
-      if ("function" === typeof update)
-        throw Error(
-          "useEffect CRUD overload is not enabled in this build of React."
-        );
-      return dispatcher.useEffect(create, createDeps);
-    };
-    exports.useId = function () {
-      return resolveDispatcher().useId();
-    };
-    exports.useImperativeHandle = function (ref, create, deps) {
-      return resolveDispatcher().useImperativeHandle(ref, create, deps);
-    };
-    exports.useInsertionEffect = function (create, deps) {
-      null == create &&
-        console.warn(
-          "React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?"
-        );
-      return resolveDispatcher().useInsertionEffect(create, deps);
-    };
-    exports.useLayoutEffect = function (create, deps) {
-      null == create &&
-        console.warn(
-          "React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?"
-        );
-      return resolveDispatcher().useLayoutEffect(create, deps);
-    };
-    exports.useMemo = function (create, deps) {
-      return resolveDispatcher().useMemo(create, deps);
-    };
-    exports.useOptimistic = function (passthrough, reducer) {
-      return resolveDispatcher().useOptimistic(passthrough, reducer);
-    };
-    exports.useReducer = function (reducer, initialArg, init) {
-      return resolveDispatcher().useReducer(reducer, initialArg, init);
-    };
-    exports.useRef = function (initialValue) {
-      return resolveDispatcher().useRef(initialValue);
-    };
-    exports.useState = function (initialState) {
-      return resolveDispatcher().useState(initialState);
-    };
-    exports.useSyncExternalStore = function (
-      subscribe,
-      getSnapshot,
-      getServerSnapshot
-    ) {
-      return resolveDispatcher().useSyncExternalStore(
-        subscribe,
-        getSnapshot,
-        getServerSnapshot
-      );
-    };
-    exports.useTransition = function () {
-      return resolveDispatcher().useTransition();
-    };
-    exports.version = "19.1.1";
-    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
-      "function" ===
-        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
-      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
-  })();
+    }
+  }
+}
+
+var createElement$1 =  createElementWithValidation ;
+var cloneElement$1 =  cloneElementWithValidation ;
+var createFactory =  createFactoryWithValidation ;
+var Children = {
+  map: mapChildren,
+  forEach: forEachChildren,
+  count: countChildren,
+  toArray: toArray,
+  only: onlyChild
+};
+
+exports.Children = Children;
+exports.Component = Component;
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.Profiler = REACT_PROFILER_TYPE;
+exports.PureComponent = PureComponent;
+exports.StrictMode = REACT_STRICT_MODE_TYPE;
+exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
+exports.cloneElement = cloneElement$1;
+exports.createContext = createContext;
+exports.createElement = createElement$1;
+exports.createFactory = createFactory;
+exports.createRef = createRef;
+exports.createServerContext = createServerContext;
+exports.forwardRef = forwardRef;
+exports.isValidElement = isValidElement;
+exports.lazy = lazy;
+exports.memo = memo;
+exports.startTransition = startTransition;
+exports.unstable_Cache = REACT_CACHE_TYPE;
+exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+exports.unstable_Offscreen = REACT_OFFSCREEN_TYPE;
+exports.unstable_act = act;
+exports.unstable_getCacheForType = getCacheForType;
+exports.unstable_getCacheSignal = getCacheSignal;
+exports.unstable_useCacheRefresh = useCacheRefresh;
+exports.useCallback = useCallback;
+exports.useContext = useContext;
+exports.useDebugValue = useDebugValue;
+exports.useDeferredValue = useDeferredValue;
+exports.useEffect = useEffect;
+exports.useId = useId;
+exports.useImperativeHandle = useImperativeHandle;
+exports.useInsertionEffect = useInsertionEffect;
+exports.useLayoutEffect = useLayoutEffect;
+exports.useMemo = useMemo;
+exports.useReducer = useReducer;
+exports.useRef = useRef;
+exports.useState = useState;
+exports.useSyncExternalStore = useSyncExternalStore;
+exports.useTransition = useTransition;
+exports.version = ReactVersion;
+//# sourceMappingURL=react.development.js.map
diff --git a/node_modules/react/cjs/react.development.js.map b/node_modules/react/cjs/react.development.js.map
new file mode 100644
index 0000000..bbaebcd
--- /dev/null
+++ b/node_modules/react/cjs/react.development.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.development.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentActQueue.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactDebugCurrentFrame.js","D:/code-projects/debugger-learning/react/packages/shared/ReactFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/consoleWithStackDev.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/CheckStringCoercion.js","D:/code-projects/debugger-learning/react/packages/shared/getComponentNameFromType.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/shared/isValidElementType.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/shared/ConsolePatchingDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/shared/enqueueTask.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactAct.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ntype RendererTask = boolean => RendererTask | null;\r\n\r\nconst ReactCurrentActQueue = {\r\n  current: (null: null | Array<RendererTask>),\r\n\r\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\r\n  isBatchingLegacy: false,\r\n  didScheduleLegacyUpdate: false,\r\n};\r\n\r\nexport default ReactCurrentActQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst ReactDebugCurrentFrame = {};\r\n\r\nlet currentExtraStackFrame = (null: null | string);\r\n\r\nexport function setExtraStackFrame(stack: null | string) {\r\n  if (__DEV__) {\r\n    currentExtraStackFrame = stack;\r\n  }\r\n}\r\n\r\nif (__DEV__) {\r\n  ReactDebugCurrentFrame.setExtraStackFrame = function(stack: null | string) {\r\n    if (__DEV__) {\r\n      currentExtraStackFrame = stack;\r\n    }\r\n  };\r\n  // Stack implementation injected by the current renderer.\r\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\r\n\r\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\r\n    let stack = '';\r\n\r\n    // Add an extra top frame while an element is being validated\r\n    if (currentExtraStackFrame) {\r\n      stack += currentExtraStackFrame;\r\n    }\r\n\r\n    // Delegate to the injected renderer-specific implementation\r\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\r\n    if (impl) {\r\n      stack += impl() || '';\r\n    }\r\n\r\n    return stack;\r\n  };\r\n}\r\n\r\nexport default ReactDebugCurrentFrame;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (zero effort)\r\n//\r\n// Flags that can likely be deleted or landed without consequences\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const warnAboutDeprecatedLifecycles = true;\r\nexport const enableComponentStackLocations = true;\r\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (moderate effort)\r\n//\r\n// Flags that can be probably deleted or landed, but might require extra effort\r\n// like migrating internal callers or performance testing.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This is blocked on adding a symbol polyfill to www.\r\nexport const enableSymbolFallbackForWWW = false;\r\n\r\n// This rolled out to 10% public in www, so we should be able to land, but some\r\n// internal tests need to be updated. The open source behavior is correct.\r\nexport const skipUnmountedBoundaries = true;\r\n\r\n// TODO: Finish rolling out in www\r\nexport const enableClientRenderFallbackOnTextMismatch = true;\r\n\r\n// TODO: Need to review this code one more time before landing\r\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\r\n\r\n// Recoil still uses useMutableSource in www, need to delete\r\nexport const enableUseMutableSource = false;\r\n\r\n// Not sure if www still uses this. We don't have a replacement but whatever we\r\n// replace it with will likely be different than what's already there, so we\r\n// probably should just delete it as long as nothing in www relies on it.\r\nexport const enableSchedulerDebugging = false;\r\n\r\n// Need to remove didTimeout argument from Scheduler before landing\r\nexport const disableSchedulerTimeoutInWorkLoop = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Slated for removal in the future (significant effort)\r\n//\r\n// These are experiments that didn't work out, and never shipped, but we can't\r\n// delete from the codebase until we migrate internal callers.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Add a callback property to suspense to notify which promises are currently\r\n// in the update queue. This allows reporting and tracing of what is causing\r\n// the user to see a loading state.\r\n//\r\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\r\n// hydrated or deleted.\r\n//\r\n// This will eventually be replaced by the Transition Tracing proposal.\r\nexport const enableSuspenseCallback = false;\r\n\r\n// Experimental Scope support.\r\nexport const enableScopeAPI = false;\r\n\r\n// Experimental Create Event Handle API.\r\nexport const enableCreateEventHandleAPI = false;\r\n\r\n// This controls whether you get the `.old` modules or the `.new` modules in\r\n// the react-reconciler package.\r\nexport const enableNewReconciler = false;\r\n\r\n// Support legacy Primer support on internal FB www\r\nexport const enableLegacyFBSupport = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Ongoing experiments\r\n//\r\n// These are features that we're either actively exploring or are reasonably\r\n// likely to include in an upcoming release.\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const enableCache = __EXPERIMENTAL__;\r\nexport const enableCacheElement = __EXPERIMENTAL__;\r\n\r\nexport const enableTransitionTracing = false;\r\n\r\n// No known bugs, but needs performance testing\r\nexport const enableLazyContextPropagation = false;\r\n\r\n// FB-only usage. The new API has different semantics.\r\nexport const enableLegacyHidden = false;\r\n\r\n// Enables unstable_avoidThisFallback feature in Fiber\r\nexport const enableSuspenseAvoidThisFallback = false;\r\n// Enables unstable_avoidThisFallback feature in Fizz\r\nexport const enableSuspenseAvoidThisFallbackFizz = false;\r\n\r\nexport const enableCPUSuspense = __EXPERIMENTAL__;\r\n\r\n// When a node is unmounted, recurse into the Fiber subtree and clean out\r\n// references. Each level cleans up more fiber fields than the previous level.\r\n// As far as we know, React itself doesn't leak, but because the Fiber contains\r\n// cycles, even a single leak in product code can cause us to retain large\r\n// amounts of memory.\r\n//\r\n// The long term plan is to remove the cycles, but in the meantime, we clear\r\n// additional fields to mitigate.\r\n//\r\n// It's an enum so that we can experiment with different levels of\r\n// aggressiveness.\r\nexport const deletedTreeCleanUpLevel = 3;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Chopping Block\r\n//\r\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\r\n// when we we plan to enable them.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This flag enables Strict Effects by default. We're not turning this on until\r\n// after 18 because it requires migration work. Recommendation is to use\r\n// <StrictMode /> to gradually upgrade components.\r\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\r\n// If FALSE, these trees will be StrictLegacyMode.\r\nexport const createRootStrictEffectsByDefault = false;\r\n\r\nexport const disableModulePatternComponents = false;\r\n\r\nexport const disableLegacyContext = false;\r\n\r\nexport const enableUseRefAccessWarning = false;\r\n\r\n// Enables time slicing for updates that aren't wrapped in startTransition.\r\nexport const enableSyncDefaultUpdates = true;\r\n\r\n// Adds an opt-in to time slicing for updates that aren't wrapped in\r\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\r\nexport const allowConcurrentByDefault = false;\r\n\r\n// Updates that occur in the render phase are not officially supported. But when\r\n// they do occur, we defer them to a subsequent render by picking a lane that's\r\n// not currently rendering. We treat them the same as if they came from an\r\n// interleaved event. Remove this flag once we have migrated to the\r\n// new behavior.\r\n// NOTE: Not sure if we'll end up doing this or not.\r\nexport const deferRenderPhaseUpdateToNextBatch = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// React DOM Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to React DOM. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Disable support for comment nodes as React DOM containers. Already disabled\r\n// in open source, but www codebase still relies on it. Need to remove.\r\nexport const disableCommentsAsDOMContainers = true;\r\n\r\n// Disable javascript: URL strings in href for XSS protection.\r\nexport const disableJavaScriptURLs = false;\r\n\r\nexport const enableTrustedTypesIntegration = false;\r\n\r\n// Prevent the value and checked attributes from syncing with their related\r\n// DOM properties\r\nexport const disableInputAttributeSyncing = false;\r\n\r\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\r\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\r\n// request for certain browsers.\r\nexport const enableFilterEmptyStringAttributesDOM = false;\r\n\r\n// Changes the behavior for rendering custom elements in both server rendering\r\n// and client rendering, mostly to allow JSX attributes to apply to the custom\r\n// element's object properties instead of only HTML attributes.\r\n// https://github.com/facebook/react/issues/11347\r\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\r\n\r\n// Disables children for <textarea> elements\r\nexport const disableTextareaChildren = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// JSX Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to JSX. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\r\n\r\n// Part of the simplification of React.createElement so we can eventually move\r\n// from React.createElement to React.jsx\r\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\r\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\r\n\r\n// Enables a warning when trying to spread a 'key' to an element;\r\n// a deprecated pattern we want to get rid of in the future\r\nexport const warnAboutSpreadingKeyToJSX = false;\r\n\r\nexport const warnAboutStringRefs = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\nexport const enableSchedulingProfiler = __PROFILE__;\r\n\r\n// Helps identify side effects in render-phase lifecycle hooks and setState\r\n// reducers by double invoking them in StrictLegacyMode.\r\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\r\n\r\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\r\n// this feature flag only impacts StrictEffectsMode.\r\nexport const enableStrictEffects = __DEV__;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nexport const enableProfilerTimer = __PROFILE__;\r\n\r\n// Record durations for commit and passive effects phases.\r\nexport const enableProfilerCommitHooks = __PROFILE__;\r\n\r\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\r\n\r\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\nexport const enableDebugTracing = false;\r\n\r\n// Track which Fiber(s) schedule render work.\r\nexport const enableUpdaterTracking = __PROFILE__;\r\n\r\n// Only enabled in RN, related to enableComponentStackLocations\r\nexport const disableNativeComponentFrames = false;\r\nexport const enableServerContext = __EXPERIMENTAL__;\r\n\r\n// Internal only.\r\nexport const enableGetInspectorDataForInstanceInProduction = false;\r\n\r\n// Profiler API accepts a function to be called when a nested update is scheduled.\r\n// This callback accepts the component type (class instance or function) the update is scheduled for.\r\nexport const enableProfilerNestedUpdateScheduledHook = false;\r\n\r\nexport const consoleManagedByDevToolsDuringStrictMode = true;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nlet suppressWarning = false;\r\nexport function setSuppressWarning(newSuppressWarning) {\r\n  if (__DEV__) {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n}\r\n\r\n// In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nexport function warn(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport function error(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  if (__DEV__) {\r\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    }\r\n\r\n    // eslint-disable-next-line react-internal/safe-string-coercion\r\n    const argsWithFormat = args.map(item => String(item));\r\n    // Careful: RN currently depends on this prefix\r\n    argsWithFormat.unshift('Warning: ' + format);\r\n    // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value: mixed): string {\r\n  if (__DEV__) {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    const type =\r\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\r\n      (value: any).constructor.name ||\r\n      'Object';\r\n    return type;\r\n  }\r\n}\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction willCoercionThrow(value: mixed): boolean {\r\n  if (__DEV__) {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value: mixed) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + (value: any);\r\n}\r\n\r\nexport function checkAttributeStringCoercion(\r\n  value: mixed,\r\n  attributeName: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` attribute is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        attributeName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkKeyStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided key is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkPropStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` prop is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` CSS property is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkHtmlStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided HTML markup uses a value of unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkFormFieldValueStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\r\n          ' must be strings, not %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {\r\n  enableServerContext,\r\n  enableTransitionTracing,\r\n  enableCache,\r\n} from './ReactFeatureFlags';\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const displayName = (outerType: any).displayName;\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\r\n}\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\nexport default function getComponentNameFromType(type: mixed): string | null {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  if (__DEV__) {\r\n    if (typeof (type: any).tag === 'number') {\r\n      console.error(\r\n        'Received an unexpected object in getComponentNameFromType(). ' +\r\n          'This is likely a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return (type: any).displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n    case REACT_CACHE_TYPE:\r\n      if (enableCache) {\r\n        return 'Cache';\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case REACT_TRACING_MARKER_TYPE:\r\n      if (enableTransitionTracing) {\r\n        return 'TracingMarker';\r\n      }\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        const context: ReactContext<any> = (type: any);\r\n        return getContextName(context) + '.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        const provider: ReactProviderType<any> = (type: any);\r\n        return getContextName(provider._context) + '.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        const outerName = (type: any).displayName || null;\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n      case REACT_SERVER_CONTEXT_TYPE:\r\n        if (enableServerContext) {\r\n          const context2 = ((type: any): ReactContext<any>);\r\n          return (context2.displayName || context2._globalName) + '.Provider';\r\n        }\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {\r\n  enableScopeAPI,\r\n  enableCacheElement,\r\n  enableTransitionTracing,\r\n  enableDebugTracing,\r\n  enableLegacyHidden,\r\n  enableSymbolFallbackForWWW,\r\n} from './ReactFeatureFlags';\r\n\r\nlet REACT_MODULE_REFERENCE;\r\nif (enableSymbolFallbackForWWW) {\r\n  if (typeof Symbol === 'function') {\r\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n  } else {\r\n    REACT_MODULE_REFERENCE = 0;\r\n  }\r\n} else {\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nexport default function isValidElementType(type: mixed) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  }\r\n\r\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\r\n    type === REACT_OFFSCREEN_TYPE ||\r\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\r\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\r\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n      // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_MODULE_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport isArray from 'shared/isArray';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport {\r\n  isValidElement,\r\n  createElement,\r\n  cloneElement,\r\n  jsxDEV,\r\n} from './ReactElement';\r\nimport {setExtraStackFrame} from './ReactDebugCurrentFrame';\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      setExtraStackFrame(stack);\r\n    } else {\r\n      setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (ReactCurrentOwner.current) {\r\n    const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n    if (name) {\r\n      return '\\n\\nCheck the render method of `' + name + '`.';\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (source !== undefined) {\r\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n    const lineNumber = source.lineNumber;\r\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\r\n  if (elementProps !== null && elementProps !== undefined) {\r\n    return getSourceInfoErrorAddendum(elementProps.__source);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  let info = getDeclarationErrorAddendum();\r\n\r\n  if (!info) {\r\n    const parentName =\r\n      typeof parentType === 'string'\r\n        ? parentType\r\n        : parentType.displayName || parentType.name;\r\n    if (parentName) {\r\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n    }\r\n  }\r\n  return info;\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (!element._store || element._store.validated || element.key != null) {\r\n    return;\r\n  }\r\n  element._store.validated = true;\r\n\r\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n    return;\r\n  }\r\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n  // Usually the current owner is the offender, but if it accepts children as a\r\n  // property, it may be the creator of the child that's responsible for\r\n  // assigning it a key.\r\n  let childOwner = '';\r\n  if (\r\n    element &&\r\n    element._owner &&\r\n    element._owner !== ReactCurrentOwner.current\r\n  ) {\r\n    // Give the component that originally created this child.\r\n    childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n      element._owner.type,\r\n    )}.`;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (typeof node !== 'object') {\r\n    return;\r\n  }\r\n  if (isArray(node)) {\r\n    for (let i = 0; i < node.length; i++) {\r\n      const child = node[i];\r\n      if (isValidElement(child)) {\r\n        validateExplicitKey(child, parentType);\r\n      }\r\n    }\r\n  } else if (isValidElement(node)) {\r\n    // This element was passed in a valid location.\r\n    if (node._store) {\r\n      node._store.validated = true;\r\n    }\r\n  } else if (node) {\r\n    const iteratorFn = getIteratorFn(node);\r\n    if (typeof iteratorFn === 'function') {\r\n      // Entry iterators used to provide implicit keys,\r\n      // but now we print a separate warning for them later.\r\n      if (iteratorFn !== node.entries) {\r\n        const iterator = iteratorFn.call(node);\r\n        let step;\r\n        while (!(step = iterator.next()).done) {\r\n          if (isValidElement(step.value)) {\r\n            validateExplicitKey(step.value, parentType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendum(source);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = jsxDEV(type, props, key, source, self);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n\r\n  if (validType) {\r\n    const children = props.children;\r\n    if (children !== undefined) {\r\n      if (isStaticChildren) {\r\n        if (isArray(children)) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            validateChildKeys(children[i], type);\r\n          }\r\n\r\n          if (Object.freeze) {\r\n            Object.freeze(children);\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        validateChildKeys(children, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, true);\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, false);\r\n}\r\n\r\nexport function createElementWithValidation(type, props, children) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendumForProps(props);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.createElement: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = createElement.apply(this, arguments);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n  if (validType) {\r\n    for (let i = 2; i < arguments.length; i++) {\r\n      validateChildKeys(arguments[i], type);\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nlet didWarnAboutDeprecatedCreateFactory = false;\r\n\r\nexport function createFactoryWithValidation(type) {\r\n  const validatedFactory = createElementWithValidation.bind(null, type);\r\n  validatedFactory.type = type;\r\n  if (__DEV__) {\r\n    if (!didWarnAboutDeprecatedCreateFactory) {\r\n      didWarnAboutDeprecatedCreateFactory = true;\r\n      console.warn(\r\n        'React.createFactory() is deprecated and will be removed in ' +\r\n          'a future major release. Consider using JSX ' +\r\n          'or use React.createElement() directly instead.',\r\n      );\r\n    }\r\n    // Legacy hook: remove it\r\n    Object.defineProperty(validatedFactory, 'type', {\r\n      enumerable: false,\r\n      get: function() {\r\n        console.warn(\r\n          'Factory.type is deprecated. Access the class directly ' +\r\n            'before passing it to createFactory.',\r\n        );\r\n        Object.defineProperty(this, 'type', {\r\n          value: type,\r\n        });\r\n        return type;\r\n      },\r\n    });\r\n  }\r\n\r\n  return validatedFactory;\r\n}\r\n\r\nexport function cloneElementWithValidation(element, props, children) {\r\n  const newElement = cloneElement.apply(this, arguments);\r\n  for (let i = 2; i < arguments.length; i++) {\r\n    validateChildKeys(arguments[i], newElement.type);\r\n  }\r\n  validatePropTypes(newElement);\r\n  return newElement;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nlet didWarnAboutMessageChannel = false;\r\nlet enqueueTaskImpl = null;\r\n\r\nexport default function enqueueTask(task: () => void) {\r\n  if (enqueueTaskImpl === null) {\r\n    try {\r\n      // read require off the module object to get around the bundlers.\r\n      // we don't want them to detect a require and bundle a Node polyfill.\r\n      const requireString = ('require' + Math.random()).slice(0, 7);\r\n      const nodeRequire = module && module[requireString];\r\n      // assuming we're in node, let's try to get node's\r\n      // version of setImmediate, bypassing fake timers if any.\r\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\r\n    } catch (_err) {\r\n      // we're in a browser\r\n      // we can't use regular timers because they may still be faked\r\n      // so we try MessageChannel+postMessage instead\r\n      enqueueTaskImpl = function(callback: () => void) {\r\n        if (__DEV__) {\r\n          if (didWarnAboutMessageChannel === false) {\r\n            didWarnAboutMessageChannel = true;\r\n            if (typeof MessageChannel === 'undefined') {\r\n              console.error(\r\n                'This browser does not have a MessageChannel implementation, ' +\r\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\r\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\r\n                  'if you encounter this warning.',\r\n              );\r\n            }\r\n          }\r\n        }\r\n        const channel = new MessageChannel();\r\n        channel.port1.onmessage = callback;\r\n        channel.port2.postMessage(undefined);\r\n      };\r\n    }\r\n  }\r\n  return enqueueTaskImpl(task);\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","ContextRegistry","ReactSharedInternals","warn","format","args","printWarning","error","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","Error","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","Array","isArray","a","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","tag","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","arguments","length","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","defineProperties","set","_Provider","_currentRenderer","_currentRenderer2","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","thenable","then","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","REACT_MODULE_REFERENCE","isValidElementType","enableCacheElement","getModuleId","memo","compare","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","realContext","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","reenableLogs","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","checkPropTypes","typeSpecs","values","location","has","bind","typeSpecName","err","ex","message","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","didWarnAboutDeprecatedCreateFactory","createFactoryWithValidation","validatedFactory","cloneElementWithValidation","createServerContext","globalName","wasDefined","hasWarnedAboutUsingConsumer","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","updatedFibersCount","size","clear","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","actScopeDepth","didWarnNoAwaitAct","act","prevActScopeDepth","prevIsBatchingLegacy","queue","flushActQueue","popActScope","thenableResult","wasAwaited","resolve","reject","returnValue","recursivelyFlushAsyncActWork","Promise","isFlushing","__DEV__","createFactory","Children","forEach","only"],"mappings":";;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAe,QAAf;;ACNA;AACA;AACA;AAEA;AACA,AAAO,IAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,AAAO,IAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;AACP,IAAaE,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,IAAaG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,IAAaI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,AAAO,IAAMK,mBAAmB,GAAGN,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,AAAO,IAAMM,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,AAAO,IAAMO,yBAAyB,GAAGR,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAlC;AACP,AAAO,IAAMQ,sBAAsB,GAAGT,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,IAAaS,mBAAmB,GAAGV,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,IAAaU,wBAAwB,GAAGX,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACP,AAAO,IAAMW,eAAe,GAAGZ,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,AAAO,IAAMY,eAAe,GAAGb,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,IACaa,6BAA6B,GAAGd,MAAM,CAACC,GAAP,CAC3C,wBAD2C,CAAtC;AAGP,IAAac,oBAAoB,GAAGf,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA7B;AACP,IACae,gBAAgB,GAAGhB,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AACP,AACO,IAAMgB,6CAA6C,GAAGjB,MAAM,CAACC,GAAP,CAC3D,qBAD2D,CAAtD;AAIP,IAAMiB,qBAAqB,GAAGlB,MAAM,CAACmB,QAArC;AACA,IAAMC,oBAAoB,GAAG,YAA7B;AAEA,AAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;AACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,WAAO,IAAP;AACD;;AACD,MAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;AAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOA,aAAP;AACD;;AACD,SAAO,IAAP;AACD;;AC1CD;;;AAGA,IAAMC,sBAAsB,GAAG;AAC7B;;;;AAIAC,EAAAA,OAAO,EAAG;AALmB,CAA/B;;ACAA;;;;AAIA,IAAMC,uBAAoC,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAA7C;;ACPA,IAAMC,oBAAoB,GAAG;AAC3BH,EAAAA,OAAO,EAAG,IADiB;AAG3B;AACAI,EAAAA,gBAAgB,EAAE,KAJS;AAK3BC,EAAAA,uBAAuB,EAAE;AALE,CAA7B;;ACAA;;;;;;AAMA,IAAMC,iBAAiB,GAAG;AACxB;;;;AAIAN,EAAAA,OAAO,EAAG;AALc,CAA1B;;ACRA,IAAMO,sBAAsB,GAAG,EAA/B;AAEA,IAAIC,sBAAsB,GAAI,IAA9B;AAEA,AAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAkD;AACvD,EAAa;AACXF,IAAAA,sBAAsB,GAAGE,KAAzB;AACD;AACF;;AAED,AAAa;AACXH,EAAAA,sBAAsB,CAACE,kBAAvB,GAA4C,UAASC,KAAT,EAA+B;AACzE,IAAa;AACXF,MAAAA,sBAAsB,GAAGE,KAAzB;AACD;AACF,GAJD,CADW;;;AAOXH,EAAAA,sBAAsB,CAACI,eAAvB,GAA0C,IAA1C;;AAEAJ,EAAAA,sBAAsB,CAACK,gBAAvB,GAA0C,YAAmB;AAC3D,QAAIF,KAAK,GAAG,EAAZ,CAD2D;;AAI3D,QAAIF,sBAAJ,EAA4B;AAC1BE,MAAAA,KAAK,IAAIF,sBAAT;AACD,KAN0D;;;AAS3D,QAAMK,IAAI,GAAGN,sBAAsB,CAACI,eAApC;;AACA,QAAIE,IAAJ,EAAU;AACRH,MAAAA,KAAK,IAAIG,IAAI,MAAM,EAAnB;AACD;;AAED,WAAOH,KAAP;AACD,GAfD;AAgBD;;ACnCD;AACA;AA0DA,AAAO,IAAMI,cAAc,GAAG,KAAvB;AAsBA,IAAMC,uBAAuB,GAAG,KAAhC;;AAMP,AAAO,IAAMC,kBAAkB,GAAG,KAA3B;AA6IP;AACA;;AACA,AAAO,IAAMC,kBAAkB,GAAG,KAA3B;;AC7OA,IAAMC,eAEZ,GAAG,EAFG;;ACaP,IAAMC,oBAAoB,GAAG;AAC3BpB,EAAAA,sBAAsB,EAAtBA,sBAD2B;AAE3BE,EAAAA,uBAAuB,EAAvBA,uBAF2B;AAG3BK,EAAAA,iBAAiB,EAAjBA;AAH2B,CAA7B;;AAMA,AAAa;AACXa,EAAAA,oBAAoB,CAACZ,sBAArB,GAA8CA,sBAA9C;AACAY,EAAAA,oBAAoB,CAAChB,oBAArB,GAA4CA,oBAA5C;AACD;;AAED,AAAyB;AACvBgB,EAAAA,oBAAoB,CAACD,eAArB,GAAuCA,eAAvC;AACD;;ACXD;AACA;AACA;AACA;;AAEA,AAAO,SAASE,IAAT,CAAcC,MAAd,EAA+B;AACpC,EAAa;AACX,IAAsB;AAAA,wCAFMC,IAEN;AAFMA,QAAAA,IAEN;AAAA;;AACpBC,MAAAA,YAAY,CAAC,MAAD,EAASF,MAAT,EAAiBC,IAAjB,CAAZ;AACD;AACF;AACF;AAED,AAAO,SAASE,KAAT,CAAeH,MAAf,EAAgC;AACrC,EAAa;AACX,IAAsB;AAAA,yCAFOC,IAEP;AAFOA,QAAAA,IAEP;AAAA;;AACpBC,MAAAA,YAAY,CAAC,OAAD,EAAUF,MAAV,EAAkBC,IAAlB,CAAZ;AACD;AACF;AACF;;AAED,SAASC,YAAT,CAAsBE,KAAtB,EAA6BJ,MAA7B,EAAqCC,IAArC,EAA2C;AACzC;AACA;AACA,EAAa;AACX,QAAMf,sBAAsB,GAAGY,oBAAoB,CAACZ,sBAApD;AACA,QAAMG,KAAK,GAAGH,sBAAsB,CAACK,gBAAvB,EAAd;;AACA,QAAIF,KAAK,KAAK,EAAd,EAAkB;AAChBW,MAAAA,MAAM,IAAI,IAAV;AACAC,MAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAY,CAAChB,KAAD,CAAZ,CAAP;AACD,KANU;;;AASX,QAAMiB,cAAc,GAAGL,IAAI,CAACM,GAAL,CAAS,UAAAC,IAAI;AAAA,aAAIC,MAAM,CAACD,IAAD,CAAV;AAAA,KAAb,CAAvB,CATW;;AAWXF,IAAAA,cAAc,CAACI,OAAf,CAAuB,cAAcV,MAArC,EAXW;AAaX;AACA;;AACAW,IAAAA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,IAAzB,CAA8BC,OAAO,CAACX,KAAD,CAArC,EAA8CW,OAA9C,EAAuDT,cAAvD;AACD;AACF;;ACnDD,IAAMU,uCAAuC,GAAG,EAAhD;;AAEA,SAASC,QAAT,CAAkBC,cAAlB,EAAkCC,UAAlC,EAA8C;AAC5C,EAAa;AACX,QAAMC,YAAW,GAAGF,cAAc,CAACE,WAAnC;AACA,QAAMC,aAAa,GAChBD,YAAW,KAAKA,YAAW,CAACE,WAAZ,IAA2BF,YAAW,CAACG,IAA5C,CAAZ,IACA,YAFF;AAGA,QAAMC,UAAU,GAAMH,aAAN,SAAuBF,UAAvC;;AACA,QAAIH,uCAAuC,CAACQ,UAAD,CAA3C,EAAyD;AACvD;AACD;;AACD,UACE,2DACE,oEADF,GAEE,qEAFF,GAGE,4DAJJ,EAKEL,UALF,EAMEE,aANF;;AAQAL,IAAAA,uCAAuC,CAACQ,UAAD,CAAvC,GAAsD,IAAtD;AACD;AACF;AAED;;;;;AAGA,IAAMC,oBAAoB,GAAG;AAC3B;;;;;;;AAOAC,EAAAA,SAAS,EAAE,UAASR,cAAT,EAAyB;AAClC,WAAO,KAAP;AACD,GAV0B;;AAY3B;;;;;;;;;;;;;;;AAeAS,EAAAA,kBAAkB,EAAE,UAAST,cAAT,EAAyBU,QAAzB,EAAmCT,UAAnC,EAA+C;AACjEF,IAAAA,QAAQ,CAACC,cAAD,EAAiB,aAAjB,CAAR;AACD,GA7B0B;;AA+B3B;;;;;;;;;;;;;AAaAW,EAAAA,mBAAmB,EAAE,UACnBX,cADmB,EAEnBY,aAFmB,EAGnBF,QAHmB,EAInBT,UAJmB,EAKnB;AACAF,IAAAA,QAAQ,CAACC,cAAD,EAAiB,cAAjB,CAAR;AACD,GAnD0B;;AAqD3B;;;;;;;;;;;;AAYAa,EAAAA,eAAe,EAAE,UACfb,cADe,EAEfc,YAFe,EAGfJ,QAHe,EAIfT,UAJe,EAKf;AACAF,IAAAA,QAAQ,CAACC,cAAD,EAAiB,UAAjB,CAAR;AACD;AAxE0B,CAA7B;;ACzBA,IAAMe,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ACCA,IAAME,WAAW,GAAG,EAApB;;AACA,AAAa;AACXD,EAAAA,MAAM,CAACE,MAAP,CAAcD,WAAd;AACD;AAED;;;;;AAGA,SAASE,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AAC1C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF0C;;AAI1C,OAAKE,IAAL,GAAYN,WAAZ,CAJ0C;AAM1C;;AACA,OAAKK,OAAL,GAAeA,OAAO,IAAIf,oBAA1B;AACD;;AAEDY,SAAS,CAACzB,SAAV,CAAoB8B,gBAApB,GAAuC,EAAvC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAL,SAAS,CAACzB,SAAV,CAAoB+B,QAApB,GAA+B,UAASX,YAAT,EAAuBJ,QAAvB,EAAiC;AAC9D,MACE,OAAOI,YAAP,KAAwB,QAAxB,IACA,OAAOA,YAAP,KAAwB,UADxB,IAEAA,YAAY,IAAI,IAHlB,EAIE;AACA,UAAM,IAAIY,KAAJ,CACJ,sEACE,sDAFE,CAAN;AAID;;AAED,OAAKJ,OAAL,CAAaT,eAAb,CAA6B,IAA7B,EAAmCC,YAAnC,EAAiDJ,QAAjD,EAA2D,UAA3D;AACD,CAbD;AAeA;;;;;;;;;;;;;;;;AAcAS,SAAS,CAACzB,SAAV,CAAoBiC,WAApB,GAAkC,UAASjB,QAAT,EAAmB;AACnD,OAAKY,OAAL,CAAab,kBAAb,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgD,aAAhD;AACD,CAFD;AAIA;;;;;;;AAKA,AAAa;AACX,MAAMkB,cAAc,GAAG;AACrBpB,IAAAA,SAAS,EAAE,CACT,WADS,EAET,0EACE,+CAHO,CADU;AAMrBqB,IAAAA,YAAY,EAAE,CACZ,cADY,EAEZ,qDACE,iDAHU;AANO,GAAvB;;AAYA,MAAMC,wBAAwB,GAAG,UAASC,UAAT,EAAqBC,IAArB,EAA2B;AAC1DhB,IAAAA,MAAM,CAACiB,cAAP,CAAsBd,SAAS,CAACzB,SAAhC,EAA2CqC,UAA3C,EAAuD;AACrDG,MAAAA,GAAG,EAAE,YAAW;AACd,aACE,6DADF,EAEEF,IAAI,CAAC,CAAD,CAFN,EAGEA,IAAI,CAAC,CAAD,CAHN;;AAKA,eAAOG,SAAP;AACD;AARoD,KAAvD;AAUD,GAXD;;AAYA,OAAK,IAAMC,MAAX,IAAqBR,cAArB,EAAqC;AACnC,QAAIA,cAAc,CAACS,cAAf,CAA8BD,MAA9B,CAAJ,EAA2C;AACzCN,MAAAA,wBAAwB,CAACM,MAAD,EAASR,cAAc,CAACQ,MAAD,CAAvB,CAAxB;AACD;AACF;AACF;;AAED,SAASE,cAAT,GAA0B;;AAC1BA,cAAc,CAAC5C,SAAf,GAA2ByB,SAAS,CAACzB,SAArC;AAEA;;;;AAGA,SAAS6C,aAAT,CAAuBnB,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AAC9C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF8C;;AAI9C,OAAKE,IAAL,GAAYN,WAAZ;AACA,OAAKK,OAAL,GAAeA,OAAO,IAAIf,oBAA1B;AACD;;AAED,IAAMiC,sBAAsB,GAAID,aAAa,CAAC7C,SAAd,GAA0B,IAAI4C,cAAJ,EAA1D;AACAE,sBAAsB,CAACtC,WAAvB,GAAqCqC,aAArC;;AAEAxB,MAAM,CAACyB,sBAAD,EAAyBrB,SAAS,CAACzB,SAAnC,CAAN;AACA8C,sBAAsB,CAACC,oBAAvB,GAA8C,IAA9C;;ACrIA;AACA,AAAO,SAASC,SAAT,GAAgC;AACrC,MAAMC,SAAS,GAAG;AAChBlF,IAAAA,OAAO,EAAE;AADO,GAAlB;;AAGA,EAAa;AACXuD,IAAAA,MAAM,CAAC4B,IAAP,CAAYD,SAAZ;AACD;;AACD,SAAOA,SAAP;AACD;;ACRD,IAAME,WAAW,GAAGC,KAAK,CAACC,OAA1B;;AAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;AAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;AACD;;ACPD;;;;;;;;;AAUA;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AACtC,EAAa;AACX;AACA,QAAMC,cAAc,GAAG,OAAOnH,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACoH,WAA9D;AACA,QAAMC,IAAI,GACPF,cAAc,IAAKD,KAAD,CAAalH,MAAM,CAACoH,WAApB,CAAnB,IACCF,KAAD,CAAahD,WAAb,CAAyBG,IADzB,IAEA,QAHF;AAIA,WAAOgD,IAAP;AACD;AACF;;;AAGD,SAASC,iBAAT,CAA2BJ,KAA3B,EAAkD;AAChD,EAAa;AACX,QAAI;AACFK,MAAAA,kBAAkB,CAACL,KAAD,CAAlB;AACA,aAAO,KAAP;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF;AACF;;AAED,SAASD,kBAAT,CAA4BL,KAA5B,EAA0C;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,KAAMA,KAAb;AACD;AAmBM,SAASO,sBAAT,CAAgCP,KAAhC,EAA8C;AACnD,EAAa;AACX,QAAII,iBAAiB,CAACJ,KAAD,CAArB,EAA8B;AAC5B,YACE,gDACE,sEAFJ,EAGED,QAAQ,CAACC,KAAD,CAHV;;AAKA,aAAOK,kBAAkB,CAACL,KAAD,CAAzB,CAN4B;AAO7B;AACF;AACF;;AC/DD,SAASQ,cAAT,CACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIU;AACR,MAAMzD,WAAW,GAAIuD,SAAD,CAAiBvD,WAArC;;AACA,MAAIA,WAAJ,EAAiB;AACf,WAAOA,WAAP;AACD;;AACD,MAAM0D,YAAY,GAAGF,SAAS,CAACxD,WAAV,IAAyBwD,SAAS,CAACvD,IAAnC,IAA2C,EAAhE;AACA,SAAOyD,YAAY,KAAK,EAAjB,GAAyBD,WAAzB,SAAwCC,YAAxC,SAA0DD,WAAjE;AACD;;;AAGD,SAASE,cAAT,CAAwBV,IAAxB,EAAiD;AAC/C,SAAOA,IAAI,CAACjD,WAAL,IAAoB,SAA3B;AACD;;;AAGD,AAAe,SAAS4D,wBAAT,CAAkCX,IAAlC,EAA8D;AAC3E,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,WAAO,IAAP;AACD;;AACD,EAAa;AACX,QAAI,OAAQA,IAAD,CAAYY,GAAnB,KAA2B,QAA/B,EAAyC;AACvC,YACE,kEACE,sDAFJ;AAID;AACF;;AACD,MAAI,OAAOZ,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAQA,IAAD,CAAYjD,WAAZ,IAA2BiD,IAAI,CAAChD,IAAhC,IAAwC,IAA/C;AACD;;AACD,MAAI,OAAOgD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,UAAQA,IAAR;AACE,SAAKlH,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,iBAAL;AACE,aAAO,QAAP;;AACF,SAAKG,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,sBAAL;AACE,aAAO,YAAP;;AACF,SAAKM,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKC,wBAAL;AACE,aAAO,cAAP;;AACF,SAAKK,gBAAL;AACE,MAAiB;AACf,eAAO,OAAP;AACD;;AAhBL;;AAuBA,MAAI,OAAOqG,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACa,QAAb;AACE,WAAK3H,kBAAL;AACE,YAAM8E,OAA0B,GAAIgC,IAApC;AACA,eAAOU,cAAc,CAAC1C,OAAD,CAAd,GAA0B,WAAjC;;AACF,WAAK/E,mBAAL;AACE,YAAM6H,QAAgC,GAAId,IAA1C;AACA,eAAOU,cAAc,CAACI,QAAQ,CAACC,QAAV,CAAd,GAAoC,WAA3C;;AACF,WAAK3H,sBAAL;AACE,eAAOiH,cAAc,CAACL,IAAD,EAAOA,IAAI,CAACgB,MAAZ,EAAoB,YAApB,CAArB;;AACF,WAAKzH,eAAL;AACE,YAAM0H,SAAS,GAAIjB,IAAD,CAAYjD,WAAZ,IAA2B,IAA7C;;AACA,YAAIkE,SAAS,KAAK,IAAlB,EAAwB;AACtB,iBAAOA,SAAP;AACD;;AACD,eAAON,wBAAwB,CAACX,IAAI,CAACA,IAAN,CAAxB,IAAuC,MAA9C;;AACF,WAAKxG,eAAL;AAAsB;AACpB,cAAM0H,aAAsC,GAAIlB,IAAhD;AACA,cAAMmB,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF,mBAAOX,wBAAwB,CAACU,IAAI,CAACF,OAAD,CAAL,CAA/B;AACD,WAFD,CAEE,OAAOI,CAAP,EAAU;AACV,mBAAO,IAAP;AACD;AACF;;AACD,WAAKpI,yBAAL;AACE,QAAyB;AACvB,cAAMqI,QAAQ,GAAKxB,IAAnB;AACA,iBAAO,CAACwB,QAAQ,CAACzE,WAAT,IAAwByE,QAAQ,CAACC,WAAlC,IAAiD,WAAxD;AACD;;AACH;AA9BF;AAgCD;;AACD,SAAO,IAAP;AACD;;AC3HD,IAAMzC,cAAc,GAAGrB,MAAM,CAACtB,SAAP,CAAiB2C,cAAxC;;ACMA,IAAM0C,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,IADgB;AAErBC,EAAAA,GAAG,EAAE,IAFgB;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA,IAAIC,0BAAJ,EACEC,0BADF,EAEEC,sBAFF;;AAIA,AAAa;AACXA,EAAAA,sBAAsB,GAAG,EAAzB;AACD;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,EAAa;AACX,QAAInD,cAAc,CAACzC,IAAf,CAAoB4F,MAApB,EAA4B,KAA5B,CAAJ,EAAwC;AACtC,UAAMC,MAAM,GAAGzE,MAAM,CAAC0E,wBAAP,CAAgCF,MAAhC,EAAwC,KAAxC,EAA+CtD,GAA9D;;AACA,UAAIuD,MAAM,IAAIA,MAAM,CAACE,cAArB,EAAqC;AACnC,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAOH,MAAM,CAACP,GAAP,KAAe9C,SAAtB;AACD;;AAED,SAASyD,WAAT,CAAqBJ,MAArB,EAA6B;AAC3B,EAAa;AACX,QAAInD,cAAc,CAACzC,IAAf,CAAoB4F,MAApB,EAA4B,KAA5B,CAAJ,EAAwC;AACtC,UAAMC,MAAM,GAAGzE,MAAM,CAAC0E,wBAAP,CAAgCF,MAAhC,EAAwC,KAAxC,EAA+CtD,GAA9D;;AACA,UAAIuD,MAAM,IAAIA,MAAM,CAACE,cAArB,EAAqC;AACnC,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAOH,MAAM,CAACR,GAAP,KAAe7C,SAAtB;AACD;;AAED,SAAS0D,0BAAT,CAAoCzE,KAApC,EAA2ChB,WAA3C,EAAwD;AACtD,MAAM0F,qBAAqB,GAAG,YAAW;AACvC,IAAa;AACX,UAAI,CAACV,0BAAL,EAAiC;AAC/BA,QAAAA,0BAA0B,GAAG,IAA7B;;AACA,cACE,8DACE,gEADF,GAEE,sEAFF,GAGE,gDAJJ,EAKEhF,WALF;AAOD;AACF;AACF,GAbD;;AAcA0F,EAAAA,qBAAqB,CAACH,cAAtB,GAAuC,IAAvC;AACA3E,EAAAA,MAAM,CAACiB,cAAP,CAAsBb,KAAtB,EAA6B,KAA7B,EAAoC;AAClCc,IAAAA,GAAG,EAAE4D,qBAD6B;AAElCC,IAAAA,YAAY,EAAE;AAFoB,GAApC;AAID;;AAED,SAASC,0BAAT,CAAoC5E,KAApC,EAA2ChB,WAA3C,EAAwD;AACtD,MAAM6F,qBAAqB,GAAG,YAAW;AACvC,IAAa;AACX,UAAI,CAACZ,0BAAL,EAAiC;AAC/BA,QAAAA,0BAA0B,GAAG,IAA7B;;AACA,cACE,8DACE,gEADF,GAEE,sEAFF,GAGE,gDAJJ,EAKEjF,WALF;AAOD;AACF;AACF,GAbD;;AAcA6F,EAAAA,qBAAqB,CAACN,cAAtB,GAAuC,IAAvC;AACA3E,EAAAA,MAAM,CAACiB,cAAP,CAAsBb,KAAtB,EAA6B,KAA7B,EAAoC;AAClCc,IAAAA,GAAG,EAAE+D,qBAD6B;AAElCF,IAAAA,YAAY,EAAE;AAFoB,GAApC;AAID;;AAED,SAASG,oCAAT,CAA8CV,MAA9C,EAAsD;AACpD,EAAa;AACX,QACE,OAAOA,MAAM,CAACP,GAAd,KAAsB,QAAtB,IACAlH,iBAAiB,CAACN,OADlB,IAEA+H,MAAM,CAACN,MAFP,IAGAnH,iBAAiB,CAACN,OAAlB,CAA0B0I,SAA1B,KAAwCX,MAAM,CAACN,MAJjD,EAKE;AACA,UAAM/E,aAAa,GAAG6D,wBAAwB,CAC5CjG,iBAAiB,CAACN,OAAlB,CAA0B4F,IADkB,CAA9C;;AAIA,UAAI,CAACiC,sBAAsB,CAACnF,aAAD,CAA3B,EAA4C;AAC1C,cACE,kDACE,qEADF,GAEE,oEAFF,GAGE,iFAHF,GAIE,2CAJF,GAKE,iDANJ,EAOEA,aAPF,EAQEqF,MAAM,CAACP,GART;;AAUAK,QAAAA,sBAAsB,CAACnF,aAAD,CAAtB,GAAwC,IAAxC;AACD;AACF;AACF;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMiG,YAAY,GAAG,UAAS/C,IAAT,EAAe2B,GAAf,EAAoBC,GAApB,EAAyBoB,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CnF,KAA9C,EAAqD;AACxE,MAAMoF,OAAO,GAAG;AACd;AACAtC,IAAAA,QAAQ,EAAEnI,kBAFI;AAId;AACAsH,IAAAA,IAAI,EAAEA,IALQ;AAMd2B,IAAAA,GAAG,EAAEA,GANS;AAOdC,IAAAA,GAAG,EAAEA,GAPS;AAQd7D,IAAAA,KAAK,EAAEA,KARO;AAUd;AACAqF,IAAAA,MAAM,EAAEF;AAXM,GAAhB;;AAcA,EAAa;AACX;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACE,MAAR,GAAiB,EAAjB,CALW;AAQX;AACA;AACA;;AACA1F,IAAAA,MAAM,CAACiB,cAAP,CAAsBuE,OAAO,CAACE,MAA9B,EAAsC,WAAtC,EAAmD;AACjDX,MAAAA,YAAY,EAAE,KADmC;AAEjDY,MAAAA,UAAU,EAAE,KAFqC;AAGjDC,MAAAA,QAAQ,EAAE,IAHuC;AAIjD1D,MAAAA,KAAK,EAAE;AAJ0C,KAAnD,EAXW;;AAkBXlC,IAAAA,MAAM,CAACiB,cAAP,CAAsBuE,OAAtB,EAA+B,OAA/B,EAAwC;AACtCT,MAAAA,YAAY,EAAE,KADwB;AAEtCY,MAAAA,UAAU,EAAE,KAF0B;AAGtCC,MAAAA,QAAQ,EAAE,KAH4B;AAItC1D,MAAAA,KAAK,EAAEmD;AAJ+B,KAAxC,EAlBW;AAyBX;;AACArF,IAAAA,MAAM,CAACiB,cAAP,CAAsBuE,OAAtB,EAA+B,SAA/B,EAA0C;AACxCT,MAAAA,YAAY,EAAE,KAD0B;AAExCY,MAAAA,UAAU,EAAE,KAF4B;AAGxCC,MAAAA,QAAQ,EAAE,KAH8B;AAIxC1D,MAAAA,KAAK,EAAEoD;AAJiC,KAA1C;;AAMA,QAAItF,MAAM,CAACE,MAAX,EAAmB;AACjBF,MAAAA,MAAM,CAACE,MAAP,CAAcsF,OAAO,CAACpF,KAAtB;AACAJ,MAAAA,MAAM,CAACE,MAAP,CAAcsF,OAAd;AACD;AACF;;AAED,SAAOA,OAAP;AACD,CAtDD;AAwDA,AA0JA;;;;;AAIA,AAAO,SAASK,aAAT,CAAuBxD,IAAvB,EAA6BmC,MAA7B,EAAqCsB,QAArC,EAA+C;AACpD,MAAIC,QAAJ,CADoD;;AAIpD,MAAM3F,KAAK,GAAG,EAAd;AAEA,MAAI4D,GAAG,GAAG,IAAV;AACA,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIoB,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAId,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBP,MAAAA,GAAG,GAAGO,MAAM,CAACP,GAAb;;AAEA,MAAa;AACXiB,QAAAA,oCAAoC,CAACV,MAAD,CAApC;AACD;AACF;;AACD,QAAII,WAAW,CAACJ,MAAD,CAAf,EAAyB;AACvB,MAAa;AACX/B,QAAAA,sBAAsB,CAAC+B,MAAM,CAACR,GAAR,CAAtB;AACD;;AACDA,MAAAA,GAAG,GAAG,KAAKQ,MAAM,CAACR,GAAlB;AACD;;AAEDqB,IAAAA,IAAI,GAAGb,MAAM,CAACN,MAAP,KAAkB/C,SAAlB,GAA8B,IAA9B,GAAqCqD,MAAM,CAACN,MAAnD;AACAoB,IAAAA,MAAM,GAAGd,MAAM,CAACL,QAAP,KAAoBhD,SAApB,GAAgC,IAAhC,GAAuCqD,MAAM,CAACL,QAAvD,CAhBkB;;AAkBlB,SAAK4B,QAAL,IAAiBvB,MAAjB,EAAyB;AACvB,UACEnD,cAAc,CAACzC,IAAf,CAAoB4F,MAApB,EAA4BuB,QAA5B,KACA,CAAChC,cAAc,CAAC1C,cAAf,CAA8B0E,QAA9B,CAFH,EAGE;AACA3F,QAAAA,KAAK,CAAC2F,QAAD,CAAL,GAAkBvB,MAAM,CAACuB,QAAD,CAAxB;AACD;AACF;AACF,GArCmD;AAwCpD;;;AACA,MAAMC,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;AACxB5F,IAAAA,KAAK,CAAC0F,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIE,cAAc,GAAG,CAArB,EAAwB;AAC7B,QAAMG,UAAU,GAAGrE,KAAK,CAACkE,cAAD,CAAxB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;AACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;AACD;;AACD,IAAa;AACX,UAAIpG,MAAM,CAACE,MAAX,EAAmB;AACjBF,QAAAA,MAAM,CAACE,MAAP,CAAciG,UAAd;AACD;AACF;;AACD/F,IAAAA,KAAK,CAAC0F,QAAN,GAAiBK,UAAjB;AACD,GAvDmD;;;AA0DpD,MAAI9D,IAAI,IAAIA,IAAI,CAACgE,YAAjB,EAA+B;AAC7B,QAAMA,YAAY,GAAGhE,IAAI,CAACgE,YAA1B;;AACA,SAAKN,QAAL,IAAiBM,YAAjB,EAA+B;AAC7B,UAAIjG,KAAK,CAAC2F,QAAD,CAAL,KAAoB5E,SAAxB,EAAmC;AACjCf,QAAAA,KAAK,CAAC2F,QAAD,CAAL,GAAkBM,YAAY,CAACN,QAAD,CAA9B;AACD;AACF;AACF;;AACD,EAAa;AACX,QAAI/B,GAAG,IAAIC,GAAX,EAAgB;AACd,UAAM7E,WAAW,GACf,OAAOiD,IAAP,KAAgB,UAAhB,GACIA,IAAI,CAACjD,WAAL,IAAoBiD,IAAI,CAAChD,IAAzB,IAAiC,SADrC,GAEIgD,IAHN;;AAIA,UAAI2B,GAAJ,EAAS;AACPa,QAAAA,0BAA0B,CAACzE,KAAD,EAAQhB,WAAR,CAA1B;AACD;;AACD,UAAI6E,GAAJ,EAAS;AACPe,QAAAA,0BAA0B,CAAC5E,KAAD,EAAQhB,WAAR,CAA1B;AACD;AACF;AACF;;AACD,SAAOgG,YAAY,CACjB/C,IADiB,EAEjB2B,GAFiB,EAGjBC,GAHiB,EAIjBoB,IAJiB,EAKjBC,MALiB,EAMjBvI,iBAAiB,CAACN,OAND,EAOjB2D,KAPiB,CAAnB;AASD;AAED,AAeO,SAASkG,kBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;AACrD,MAAMC,UAAU,GAAGrB,YAAY,CAC7BmB,UAAU,CAAClE,IADkB,EAE7BmE,MAF6B,EAG7BD,UAAU,CAACtC,GAHkB,EAI7BsC,UAAU,CAACG,KAJkB,EAK7BH,UAAU,CAACI,OALkB,EAM7BJ,UAAU,CAACd,MANkB,EAO7Bc,UAAU,CAACnG,KAPkB,CAA/B;AAUA,SAAOqG,UAAP;AACD;AAED;;;;;AAIA,AAAO,SAASG,YAAT,CAAsBpB,OAAtB,EAA+BhB,MAA/B,EAAuCsB,QAAvC,EAAiD;AACtD,MAAIN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKrE,SAApC,EAA+C;AAC7C,UAAM,IAAIT,KAAJ,oFAC6E8E,OAD7E,OAAN;AAGD;;AAED,MAAIO,QAAJ,CAPsD;;AAUtD,MAAM3F,KAAK,GAAGL,MAAM,CAAC,EAAD,EAAKyF,OAAO,CAACpF,KAAb,CAApB,CAVsD;;AAatD,MAAI4D,GAAG,GAAGwB,OAAO,CAACxB,GAAlB;AACA,MAAIC,GAAG,GAAGuB,OAAO,CAACvB,GAAlB,CAdsD;;AAgBtD,MAAMoB,IAAI,GAAGG,OAAO,CAACkB,KAArB,CAhBsD;AAkBtD;AACA;;AACA,MAAMpB,MAAM,GAAGE,OAAO,CAACmB,OAAvB,CApBsD;;AAuBtD,MAAIpB,KAAK,GAAGC,OAAO,CAACC,MAApB;;AAEA,MAAIjB,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvB;AACAP,MAAAA,GAAG,GAAGO,MAAM,CAACP,GAAb;AACAsB,MAAAA,KAAK,GAAGxI,iBAAiB,CAACN,OAA1B;AACD;;AACD,QAAImI,WAAW,CAACJ,MAAD,CAAf,EAAyB;AACvB,MAAa;AACX/B,QAAAA,sBAAsB,CAAC+B,MAAM,CAACR,GAAR,CAAtB;AACD;;AACDA,MAAAA,GAAG,GAAG,KAAKQ,MAAM,CAACR,GAAlB;AACD,KAXiB;;;AAclB,QAAIqC,YAAJ;;AACA,QAAIb,OAAO,CAACnD,IAAR,IAAgBmD,OAAO,CAACnD,IAAR,CAAagE,YAAjC,EAA+C;AAC7CA,MAAAA,YAAY,GAAGb,OAAO,CAACnD,IAAR,CAAagE,YAA5B;AACD;;AACD,SAAKN,QAAL,IAAiBvB,MAAjB,EAAyB;AACvB,UACEnD,cAAc,CAACzC,IAAf,CAAoB4F,MAApB,EAA4BuB,QAA5B,KACA,CAAChC,cAAc,CAAC1C,cAAf,CAA8B0E,QAA9B,CAFH,EAGE;AACA,YAAIvB,MAAM,CAACuB,QAAD,CAAN,KAAqB5E,SAArB,IAAkCkF,YAAY,KAAKlF,SAAvD,EAAkE;AAChE;AACAf,UAAAA,KAAK,CAAC2F,QAAD,CAAL,GAAkBM,YAAY,CAACN,QAAD,CAA9B;AACD,SAHD,MAGO;AACL3F,UAAAA,KAAK,CAAC2F,QAAD,CAAL,GAAkBvB,MAAM,CAACuB,QAAD,CAAxB;AACD;AACF;AACF;AACF,GAxDqD;AA2DtD;;;AACA,MAAMC,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;AACxB5F,IAAAA,KAAK,CAAC0F,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIE,cAAc,GAAG,CAArB,EAAwB;AAC7B,QAAMG,UAAU,GAAGrE,KAAK,CAACkE,cAAD,CAAxB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;AACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;AACD;;AACDhG,IAAAA,KAAK,CAAC0F,QAAN,GAAiBK,UAAjB;AACD;;AAED,SAAOf,YAAY,CAACI,OAAO,CAACnD,IAAT,EAAe2B,GAAf,EAAoBC,GAApB,EAAyBoB,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CnF,KAA9C,CAAnB;AACD;AAED;;;;;;;;AAOA,AAAO,SAASyG,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAAC5D,QAAP,KAAoBnI,kBAHtB;AAKD;;ACviBD,IAAMgM,SAAS,GAAG,GAAlB;AACA,IAAMC,YAAY,GAAG,GAArB;AAEA;;;;;;;AAMA,SAASC,MAAT,CAAgBjD,GAAhB,EAAqC;AACnC,MAAMkD,WAAW,GAAG,OAApB;AACA,MAAMC,aAAa,GAAG;AACpB,SAAK,IADe;AAEpB,SAAK;AAFe,GAAtB;AAIA,MAAMC,aAAa,GAAGpD,GAAG,CAACqD,OAAJ,CAAYH,WAAZ,EAAyB,UAASI,KAAT,EAAgB;AAC7D,WAAOH,aAAa,CAACG,KAAD,CAApB;AACD,GAFqB,CAAtB;AAIA,SAAO,MAAMF,aAAb;AACD;AAED;;;;;;AAKA,IAAIG,gBAAgB,GAAG,KAAvB;AAEA,IAAMC,0BAA0B,GAAG,MAAnC;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;AACnD,SAAOA,IAAI,CAACL,OAAL,CAAaG,0BAAb,EAAyC,KAAzC,CAAP;AACD;AAED;;;;;;;;;AAOA,SAASG,aAAT,CAAuBnC,OAAvB,EAAqCoC,KAArC,EAA4D;AAC1D;AACA;AACA,MAAI,OAAOpC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmDA,OAAO,CAACxB,GAAR,IAAe,IAAtE,EAA4E;AAC1E;AACA,IAAa;AACXvB,MAAAA,sBAAsB,CAAC+C,OAAO,CAACxB,GAAT,CAAtB;AACD;;AACD,WAAOiD,MAAM,CAAC,KAAKzB,OAAO,CAACxB,GAAd,CAAb;AACD,GATyD;;;AAW1D,SAAO4D,KAAK,CAACC,QAAN,CAAe,EAAf,CAAP;AACD;;AAED,SAASC,YAAT,CACEhC,QADF,EAEEiC,KAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEvI,QALF,EAMU;AACR,MAAM2C,IAAI,GAAG,OAAOyD,QAApB;;AAEA,MAAIzD,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAArC,EAAgD;AAC9C;AACAyD,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAIoC,cAAc,GAAG,KAArB;;AAEA,MAAIpC,QAAQ,KAAK,IAAjB,EAAuB;AACrBoC,IAAAA,cAAc,GAAG,IAAjB;AACD,GAFD,MAEO;AACL,YAAQ7F,IAAR;AACE,WAAK,QAAL;AACA,WAAK,QAAL;AACE6F,QAAAA,cAAc,GAAG,IAAjB;AACA;;AACF,WAAK,QAAL;AACE,gBAASpC,QAAD,CAAgB5C,QAAxB;AACE,eAAKnI,kBAAL;AACA,eAAKG,iBAAL;AACEgN,YAAAA,cAAc,GAAG,IAAjB;AAHJ;;AANJ;AAYD;;AAED,MAAIA,cAAJ,EAAoB;AAClB,QAAMC,MAAK,GAAGrC,QAAd;AACA,QAAIsC,WAAW,GAAG1I,QAAQ,CAACyI,MAAD,CAA1B,CAFkB;AAIlB;;AACA,QAAME,QAAQ,GACZJ,SAAS,KAAK,EAAd,GAAmBlB,SAAS,GAAGY,aAAa,CAACQ,MAAD,EAAQ,CAAR,CAA5C,GAAyDF,SAD3D;;AAEA,QAAIlG,OAAO,CAACqG,WAAD,CAAX,EAA0B;AACxB,UAAIE,eAAe,GAAG,EAAtB;;AACA,UAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpBC,QAAAA,eAAe,GAAGb,qBAAqB,CAACY,QAAD,CAArB,GAAkC,GAApD;AACD;;AACDP,MAAAA,YAAY,CAACM,WAAD,EAAcL,KAAd,EAAqBO,eAArB,EAAsC,EAAtC,EAA0C,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAA3C,CAAZ;AACD,KAND,MAMO,IAAIH,WAAW,IAAI,IAAnB,EAAyB;AAC9B,UAAIvB,cAAc,CAACuB,WAAD,CAAlB,EAAiC;AAC/B,QAAa;AACX;AACA;AACA;AACA,cAAIA,WAAW,CAACpE,GAAZ,KAAoB,CAACmE,MAAD,IAAUA,MAAK,CAACnE,GAAN,KAAcoE,WAAW,CAACpE,GAAxD,CAAJ,EAAkE;AAChEvB,YAAAA,sBAAsB,CAAC2F,WAAW,CAACpE,GAAb,CAAtB;AACD;AACF;;AACDoE,QAAAA,WAAW,GAAG9B,kBAAkB,CAC9B8B,WAD8B;AAG9B;AACAJ,QAAAA,aAAa;AAEVI,QAAAA,WAAW,CAACpE,GAAZ,KAAoB,CAACmE,MAAD,IAAUA,MAAK,CAACnE,GAAN,KAAcoE,WAAW,CAACpE,GAAxD;AAEG;AACAyD,QAAAA,qBAAqB,CAAC,KAAKW,WAAW,CAACpE,GAAlB,CAArB,GAA8C,GAHjD,GAIG,EANO,CAAb,GAOEqE,QAX4B,CAAhC;AAaD;;AACDN,MAAAA,KAAK,CAACS,IAAN,CAAWJ,WAAX;AACD;;AACD,WAAO,CAAP;AACD;;AAED,MAAID,KAAJ;AACA,MAAIM,QAAJ;AACA,MAAIC,YAAY,GAAG,CAAnB,CAvEQ;;AAwER,MAAMC,cAAc,GAClBV,SAAS,KAAK,EAAd,GAAmBlB,SAAnB,GAA+BkB,SAAS,GAAGjB,YAD7C;;AAGA,MAAIjF,OAAO,CAAC+D,QAAD,CAAX,EAAuB;AACrB,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACI,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxC+B,MAAAA,KAAK,GAAGrC,QAAQ,CAACM,CAAD,CAAhB;AACAqC,MAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQ/B,CAAR,CAAzC;AACAsC,MAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1B/I,QAL0B,CAA5B;AAOD;AACF,GAZD,MAYO;AACL,QAAMkJ,UAAU,GAAGvM,aAAa,CAACyJ,QAAD,CAAhC;;AACA,QAAI,OAAO8C,UAAP,KAAsB,UAA1B,EAAsC;AACpC,UAAMC,gBAEL,GAAI/C,QAFL;;AAIA,MAAa;AACX;AACA,YAAI8C,UAAU,KAAKC,gBAAgB,CAACC,OAApC,EAA6C;AAC3C,cAAI,CAACvB,gBAAL,EAAuB;AACrB,iBACE,8CACE,8CAFJ;AAID;;AACDA,UAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AAED,UAAMpL,QAAQ,GAAGyM,UAAU,CAAChK,IAAX,CAAgBiK,gBAAhB,CAAjB;AACA,UAAIE,IAAJ;AACA,UAAIC,EAAE,GAAG,CAAT;;AACA,aAAO,CAAC,CAACD,IAAI,GAAG5M,QAAQ,CAAC8M,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrCf,QAAAA,KAAK,GAAGY,IAAI,CAAC7G,KAAb;AACAuG,QAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQa,EAAE,EAAV,CAAzC;AACAN,QAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1B/I,QAL0B,CAA5B;AAOD;AACF,KAhCD,MAgCO,IAAI2C,IAAI,KAAK,QAAb,EAAuB;AAC5B;AACA,UAAM8G,cAAc,GAAG5K,MAAM,CAAEuH,QAAF,CAA7B;AAEA,YAAM,IAAIpF,KAAJ,CACJ,qDACEyI,cAAc,KAAK,iBAAnB,GACI,uBACAnJ,MAAM,CAACoJ,IAAP,CAAatD,QAAb,EAA6BuD,IAA7B,CAAkC,IAAlC,CADA,GAEA,GAHJ,GAIIF,cALN,YAOE,gEAPF,GAQE,UATE,CAAN;AAWD;AACF;;AAED,SAAOT,YAAP;AACD;;AAID;;;;;;;;;;;;;AAaA,SAASY,WAAT,CACExD,QADF,EAEEyD,IAFF,EAGElJ,OAHF,EAIsB;AACpB,MAAIyF,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,MAAM0D,MAAM,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA3B,EAAAA,YAAY,CAAChC,QAAD,EAAW0D,MAAX,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,UAASrB,KAAT,EAAgB;AACrD,WAAOoB,IAAI,CAAC3K,IAAL,CAAUyB,OAAV,EAAmB8H,KAAnB,EAA0BsB,KAAK,EAA/B,CAAP;AACD,GAFW,CAAZ;AAGA,SAAOD,MAAP;AACD;AAED;;;;;;;;;;;AASA,SAASE,aAAT,CAAuB5D,QAAvB,EAAyD;AACvD,MAAI6D,CAAC,GAAG,CAAR;AACAL,EAAAA,WAAW,CAACxD,QAAD,EAAW,YAAM;AAC1B6D,IAAAA,CAAC,GADyB;AAG3B,GAHU,CAAX;AAIA,SAAOA,CAAP;AACD;;AAID;;;;;;;;;;;;AAYA,SAASC,eAAT,CACE9D,QADF,EAEE+D,WAFF,EAGEC,cAHF,EAIQ;AACNR,EAAAA,WAAW,CACTxD,QADS,EAET,YAAW;AACT+D,IAAAA,WAAW,CAAClL,KAAZ,CAAkB,IAAlB,EAAwBsH,SAAxB,EADS;AAGV,GALQ,EAMT6D,cANS,CAAX;AAQD;AAED;;;;;;;;AAMA,SAASC,OAAT,CAAiBjE,QAAjB,EAA8D;AAC5D,SAAOwD,WAAW,CAACxD,QAAD,EAAW,UAAAqC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAhB,CAAX,IAAyC,EAAhD;AACD;AAED;;;;;;;;;;;;;;;;AAcA,SAAS6B,SAAT,CAAsBlE,QAAtB,EAAsC;AACpC,MAAI,CAACe,cAAc,CAACf,QAAD,CAAnB,EAA+B;AAC7B,UAAM,IAAIpF,KAAJ,CACJ,uEADI,CAAN;AAGD;;AAED,SAAOoF,QAAP;AACD;;ACjUM,SAASmE,aAAT,CAA0BC,YAA1B,EAA4D;AACjE;AACA;AAEA,MAAM7J,OAAwB,GAAG;AAC/B6C,IAAAA,QAAQ,EAAE3H,kBADqB;AAE/B;AACA;AACA;AACA;AACA;AACA4O,IAAAA,aAAa,EAAED,YAPgB;AAQ/BE,IAAAA,cAAc,EAAEF,YARe;AAS/B;AACA;AACAG,IAAAA,YAAY,EAAE,CAXiB;AAY/B;AACAC,IAAAA,QAAQ,EAAG,IAboB;AAc/BC,IAAAA,QAAQ,EAAG,IAdoB;AAgB/B;AACAC,IAAAA,aAAa,EAAG,IAjBe;AAkB/B1G,IAAAA,WAAW,EAAG;AAlBiB,GAAjC;AAqBAzD,EAAAA,OAAO,CAACiK,QAAR,GAAmB;AACjBpH,IAAAA,QAAQ,EAAE5H,mBADO;AAEjB8H,IAAAA,QAAQ,EAAE/C;AAFO,GAAnB;AAKA,MAAIoK,yCAAyC,GAAG,KAAhD;AACA,MAAIC,mCAAmC,GAAG,KAA1C;AACA,MAAIC,mCAAmC,GAAG,KAA1C;;AAEA,EAAa;AACX;AACA;AACA;AACA,QAAMJ,QAAQ,GAAG;AACfrH,MAAAA,QAAQ,EAAE3H,kBADK;AAEf6H,MAAAA,QAAQ,EAAE/C;AAFK,KAAjB,CAJW;;AASXL,IAAAA,MAAM,CAAC4K,gBAAP,CAAwBL,QAAxB,EAAkC;AAChCD,MAAAA,QAAQ,EAAE;AACRpJ,QAAAA,GADQ,cACF;AACJ,cAAI,CAACwJ,mCAAL,EAA0C;AACxCA,YAAAA,mCAAmC,GAAG,IAAtC;;AACA,kBACE,mFACE,4EAFJ;AAID;;AACD,iBAAOrK,OAAO,CAACiK,QAAf;AACD,SAVO;AAWRO,QAAAA,GAXQ,YAWJC,SAXI,EAWO;AACbzK,UAAAA,OAAO,CAACiK,QAAR,GAAmBQ,SAAnB;AACD;AAbO,OADsB;AAgBhCX,MAAAA,aAAa,EAAE;AACbjJ,QAAAA,GADa,cACP;AACJ,iBAAOb,OAAO,CAAC8J,aAAf;AACD,SAHY;AAIbU,QAAAA,GAJa,YAITV,aAJS,EAIM;AACjB9J,UAAAA,OAAO,CAAC8J,aAAR,GAAwBA,aAAxB;AACD;AANY,OAhBiB;AAwBhCC,MAAAA,cAAc,EAAE;AACdlJ,QAAAA,GADc,cACR;AACJ,iBAAOb,OAAO,CAAC+J,cAAf;AACD,SAHa;AAIdS,QAAAA,GAJc,YAIVT,cAJU,EAIM;AAClB/J,UAAAA,OAAO,CAAC+J,cAAR,GAAyBA,cAAzB;AACD;AANa,OAxBgB;AAgChCC,MAAAA,YAAY,EAAE;AACZnJ,QAAAA,GADY,cACN;AACJ,iBAAOb,OAAO,CAACgK,YAAf;AACD,SAHW;AAIZQ,QAAAA,GAJY,YAIRR,YAJQ,EAIM;AAChBhK,UAAAA,OAAO,CAACgK,YAAR,GAAuBA,YAAvB;AACD;AANW,OAhCkB;AAwChCE,MAAAA,QAAQ,EAAE;AACRrJ,QAAAA,GADQ,cACF;AACJ,cAAI,CAACuJ,yCAAL,EAAgD;AAC9CA,YAAAA,yCAAyC,GAAG,IAA5C;;AACA,kBACE,mFACE,4EAFJ;AAID;;AACD,iBAAOpK,OAAO,CAACkK,QAAf;AACD;AAVO,OAxCsB;AAoDhCnL,MAAAA,WAAW,EAAE;AACX8B,QAAAA,GADW,cACL;AACJ,iBAAOb,OAAO,CAACjB,WAAf;AACD,SAHU;AAIXyL,QAAAA,GAJW,YAIPzL,WAJO,EAIM;AACf,cAAI,CAACuL,mCAAL,EAA0C;AACxC,iBACE,8DACE,4EAFJ,EAGEvL,WAHF;;AAKAuL,YAAAA,mCAAmC,GAAG,IAAtC;AACD;AACF;AAbU;AApDmB,KAAlC,EATW;;AA8EXtK,IAAAA,OAAO,CAACkK,QAAR,GAAmBA,QAAnB;AACD,GA/ED;;AAmFA,EAAa;AACXlK,IAAAA,OAAO,CAAC0K,gBAAR,GAA2B,IAA3B;AACA1K,IAAAA,OAAO,CAAC2K,iBAAR,GAA4B,IAA5B;AACD;;AAED,SAAO3K,OAAP;AACD;;AC3HD,IAAM4K,aAAa,GAAG,CAAC,CAAvB;AACA,IAAMC,OAAO,GAAG,CAAhB;AACA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,QAAQ,GAAG,CAAjB;;AAkCA,SAASC,eAAT,CAA4B7H,OAA5B,EAAoD;AAClD,MAAIA,OAAO,CAAC8H,OAAR,KAAoBL,aAAxB,EAAuC;AACrC,QAAMM,IAAI,GAAG/H,OAAO,CAACgI,OAArB;AACA,QAAMC,QAAQ,GAAGF,IAAI,EAArB,CAFqC;AAIrC;AACA;AACA;AACA;;AACAE,IAAAA,QAAQ,CAACC,IAAT,CACE,UAAAC,YAAY,EAAI;AACd,UAAInI,OAAO,CAAC8H,OAAR,KAAoBJ,OAApB,IAA+B1H,OAAO,CAAC8H,OAAR,KAAoBL,aAAvD,EAAsE;AACpE;AACA,YAAMW,QAA4B,GAAIpI,OAAtC;AACAoI,QAAAA,QAAQ,CAACN,OAAT,GAAmBH,QAAnB;AACAS,QAAAA,QAAQ,CAACJ,OAAT,GAAmBG,YAAnB;AACD;AACF,KARH,EASE,UAAA1N,KAAK,EAAI;AACP,UAAIuF,OAAO,CAAC8H,OAAR,KAAoBJ,OAApB,IAA+B1H,OAAO,CAAC8H,OAAR,KAAoBL,aAAvD,EAAsE;AACpE;AACA,YAAMY,QAAyB,GAAIrI,OAAnC;AACAqI,QAAAA,QAAQ,CAACP,OAAT,GAAmBF,QAAnB;AACAS,QAAAA,QAAQ,CAACL,OAAT,GAAmBvN,KAAnB;AACD;AACF,KAhBH;;AAkBA,QAAIuF,OAAO,CAAC8H,OAAR,KAAoBL,aAAxB,EAAuC;AACrC;AACA;AACA,UAAMa,OAAuB,GAAItI,OAAjC;AACAsI,MAAAA,OAAO,CAACR,OAAR,GAAkBJ,OAAlB;AACAY,MAAAA,OAAO,CAACN,OAAR,GAAkBC,QAAlB;AACD;AACF;;AACD,MAAIjI,OAAO,CAAC8H,OAAR,KAAoBH,QAAxB,EAAkC;AAChC,QAAMQ,YAAY,GAAGnI,OAAO,CAACgI,OAA7B;;AACA,IAAa;AACX,UAAIG,YAAY,KAAKxK,SAArB,EAAgC;AAC9B,cACE,+CACE,cADF,GAEE,0DAFF;AAIE,4CAJF,GAKE,2BALF,GAME,0DAPJ,EAQEwK,YARF;AAUD;AACF;;AACD,IAAa;AACX,UAAI,EAAE,aAAaA,YAAf,CAAJ,EAAkC;AAChC,cACE,+CACE,cADF,GAEE,0DAFF;AAIE,4CAJF,GAKE,uBANJ,EAOEA,YAPF;AASD;AACF;;AACD,WAAOA,YAAY,CAACI,OAApB;AACD,GA9BD,MA8BO;AACL,UAAMvI,OAAO,CAACgI,OAAd;AACD;AACF;;AAED,AAAO,SAASQ,IAAT,CACLT,IADK,EAEyB;AAC9B,MAAM/H,OAAmB,GAAG;AAC1B;AACA8H,IAAAA,OAAO,EAAEL,aAFiB;AAG1BO,IAAAA,OAAO,EAAED;AAHiB,GAA5B;AAMA,MAAMU,QAAsC,GAAG;AAC7C/I,IAAAA,QAAQ,EAAErH,eADmC;AAE7C4H,IAAAA,QAAQ,EAAED,OAFmC;AAG7CG,IAAAA,KAAK,EAAE0H;AAHsC,GAA/C;;AAMA,EAAa;AACX;AACA,QAAIhF,YAAJ;AACA,QAAI6F,SAAJ,CAHW;;AAKXlM,IAAAA,MAAM,CAAC4K,gBAAP,CAAwBqB,QAAxB,EAAkC;AAChC5F,MAAAA,YAAY,EAAE;AACZtB,QAAAA,YAAY,EAAE,IADF;AAEZ7D,QAAAA,GAFY,cAEN;AACJ,iBAAOmF,YAAP;AACD,SAJW;AAKZwE,QAAAA,GALY,YAKRsB,eALQ,EAKS;AACnB,gBACE,sEACE,mEADF,GAEE,uDAHJ;;AAKA9F,UAAAA,YAAY,GAAG8F,eAAf,CANmB;AAQnB;;AACAnM,UAAAA,MAAM,CAACiB,cAAP,CAAsBgL,QAAtB,EAAgC,cAAhC,EAAgD;AAC9CtG,YAAAA,UAAU,EAAE;AADkC,WAAhD;AAGD;AAjBW,OADkB;AAoBhCuG,MAAAA,SAAS,EAAE;AACTnH,QAAAA,YAAY,EAAE,IADL;AAET7D,QAAAA,GAFS,cAEH;AACJ,iBAAOgL,SAAP;AACD,SAJQ;AAKTrB,QAAAA,GALS,YAKLuB,YALK,EAKS;AAChB,gBACE,mEACE,mEADF,GAEE,uDAHJ;;AAKAF,UAAAA,SAAS,GAAGE,YAAZ,CANgB;AAQhB;;AACApM,UAAAA,MAAM,CAACiB,cAAP,CAAsBgL,QAAtB,EAAgC,WAAhC,EAA6C;AAC3CtG,YAAAA,UAAU,EAAE;AAD+B,WAA7C;AAGD;AAjBQ;AApBqB,KAAlC;AAwCD;;AAED,SAAOsG,QAAP;AACD;;AC9KM,SAASI,UAAT,CACLhJ,MADK,EAEL;AACA,EAAa;AACX,QAAIA,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACH,QAAP,KAAoBtH,eAA1C,EAA2D;AACzD,YACE,iEACE,mDADF,GAEE,wBAHJ;AAKD,KAND,MAMO,IAAI,OAAOyH,MAAP,KAAkB,UAAtB,EAAkC;AACvC,YACE,yDADF,EAEEA,MAAM,KAAK,IAAX,GAAkB,MAAlB,GAA2B,OAAOA,MAFpC;AAID,KALM,MAKA;AACL,UAAIA,MAAM,CAAC6C,MAAP,KAAkB,CAAlB,IAAuB7C,MAAM,CAAC6C,MAAP,KAAkB,CAA7C,EAAgD;AAC9C,cACE,8EADF,EAEE7C,MAAM,CAAC6C,MAAP,KAAkB,CAAlB,GACI,0CADJ,GAEI,6CAJN;AAMD;AACF;;AAED,QAAI7C,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAIA,MAAM,CAACgD,YAAP,IAAuB,IAAvB,IAA+BhD,MAAM,CAAC6I,SAAP,IAAoB,IAAvD,EAA6D;AAC3D,cACE,2EACE,8CAFJ;AAID;AACF;AACF;;AAED,MAAMI,WAAW,GAAG;AAClBpJ,IAAAA,QAAQ,EAAEzH,sBADQ;AAElB4H,IAAAA,MAAM,EAANA;AAFkB,GAApB;;AAIA,EAAa;AACX,QAAIkJ,OAAJ;AACAvM,IAAAA,MAAM,CAACiB,cAAP,CAAsBqL,WAAtB,EAAmC,aAAnC,EAAkD;AAChD3G,MAAAA,UAAU,EAAE,KADoC;AAEhDZ,MAAAA,YAAY,EAAE,IAFkC;AAGhD7D,MAAAA,GAAG,EAAE,YAAW;AACd,eAAOqL,OAAP;AACD,OAL+C;AAMhD1B,MAAAA,GAAG,EAAE,UAASxL,IAAT,EAAe;AAClBkN,QAAAA,OAAO,GAAGlN,IAAV,CADkB;AAIlB;AACA;AACA;AACA;AACA;AACA;;AACA,YAAI,CAACgE,MAAM,CAAChE,IAAR,IAAgB,CAACgE,MAAM,CAACjE,WAA5B,EAAyC;AACvCiE,UAAAA,MAAM,CAACjE,WAAP,GAAqBC,IAArB;AACD;AACF;AAnB+C,KAAlD;AAqBD;;AACD,SAAOiN,WAAP;AACD;;ACtCD,IAAIE,sBAAJ;;AACA,AAMO;AACLA,EAAAA,sBAAsB,GAAGxR,MAAM,CAACC,GAAP,CAAW,wBAAX,CAAzB;AACD;;AAED,AAAe,SAASwR,kBAAT,CAA4BpK,IAA5B,EAAyC;AACtD,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAhD,EAA4D;AAC1D,WAAO,IAAP;AACD,GAHqD;;;AAMtD,MACEA,IAAI,KAAKlH,mBAAT,IACAkH,IAAI,KAAKhH,mBADT,IAECqC,kBAAkB,CAFnB,IAGA2E,IAAI,KAAKjH,sBAHT,IAIAiH,IAAI,KAAK3G,mBAJT,IAKA2G,IAAI,KAAK1G,wBALT,IAMC8B,kBAAkB,CANnB,IAOA4E,IAAI,KAAKtG,oBAPT,IAQCwB,cAAc,CARf,IASCmP,CAAsBrK,IAAI,KAAKrG,gBAThC,IAUCwB,uBAAuB,CAX1B,EAYE;AACA,WAAO,IAAP;AACD;;AAED,MAAI,OAAO6E,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC7C,QACEA,IAAI,CAACa,QAAL,KAAkBrH,eAAlB,IACAwG,IAAI,CAACa,QAAL,KAAkBtH,eADlB,IAEAyG,IAAI,CAACa,QAAL,KAAkB5H,mBAFlB,IAGA+G,IAAI,CAACa,QAAL,KAAkB3H,kBAHlB,IAIA8G,IAAI,CAACa,QAAL,KAAkBzH,sBAJlB;AAMA;AACA;AACA;AACA4G,IAAAA,IAAI,CAACa,QAAL,KAAkBsJ,sBATlB,IAUAnK,IAAI,CAACsK,WAAL,KAAqBxL,SAXvB,EAYE;AACA,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AC7EM,SAASyL,IAAT,CACLvK,IADK,EAELwK,OAFK,EAGL;AACA,EAAa;AACX,QAAI,CAACJ,kBAAkB,CAACpK,IAAD,CAAvB,EAA+B;AAC7B,YACE,2DACE,cAFJ,EAGEA,IAAI,KAAK,IAAT,GAAgB,MAAhB,GAAyB,OAAOA,IAHlC;AAKD;AACF;;AACD,MAAMiK,WAAW,GAAG;AAClBpJ,IAAAA,QAAQ,EAAEtH,eADQ;AAElByG,IAAAA,IAAI,EAAJA,IAFkB;AAGlBwK,IAAAA,OAAO,EAAEA,OAAO,KAAK1L,SAAZ,GAAwB,IAAxB,GAA+B0L;AAHtB,GAApB;;AAKA,EAAa;AACX,QAAIN,OAAJ;AACAvM,IAAAA,MAAM,CAACiB,cAAP,CAAsBqL,WAAtB,EAAmC,aAAnC,EAAkD;AAChD3G,MAAAA,UAAU,EAAE,KADoC;AAEhDZ,MAAAA,YAAY,EAAE,IAFkC;AAGhD7D,MAAAA,GAAG,EAAE,YAAW;AACd,eAAOqL,OAAP;AACD,OAL+C;AAMhD1B,MAAAA,GAAG,EAAE,UAASxL,IAAT,EAAe;AAClBkN,QAAAA,OAAO,GAAGlN,IAAV,CADkB;AAIlB;AACA;AACA;AACA;AACA;AACA;;AACA,YAAI,CAACgD,IAAI,CAAChD,IAAN,IAAc,CAACgD,IAAI,CAACjD,WAAxB,EAAqC;AACnCiD,UAAAA,IAAI,CAACjD,WAAL,GAAmBC,IAAnB;AACD;AACF;AAnB+C,KAAlD;AAqBD;;AACD,SAAOiN,WAAP;AACD;;AC/BD,SAASQ,iBAAT,GAA6B;AAC3B,MAAMC,UAAU,GAAGvQ,sBAAsB,CAACC,OAA1C;;AACA,EAAa;AACX,QAAIsQ,UAAU,KAAK,IAAnB,EAAyB;AACvB,YACE,kHACE,kCADF,GAEE,wFAFF,GAGE,+CAHF,GAIE,iEAJF,GAKE,kGANJ;AAQD;AACF,GAb0B;AAe3B;AACA;;;AACA,SAASA,UAAT;AACD;;AAED,AAAO,SAASC,cAAT,GAAuC;AAC5C,MAAMD,UAAU,GAAGD,iBAAiB,EAApC,CAD4C;;AAG5C,SAAOC,UAAU,CAACC,cAAX,EAAP;AACD;AAED,AAAO,SAASC,eAAT,CAA4BC,YAA5B,EAAsD;AAC3D,MAAMH,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;AAG3D,SAAOC,UAAU,CAACE,eAAX,CAA2BC,YAA3B,CAAP;AACD;AAED,AAAO,SAASC,UAAT,CAAuBC,OAAvB,EAAoD;AACzD,MAAML,UAAU,GAAGD,iBAAiB,EAApC;;AACA,EAAa;AACX;AACA,QAAKM,OAAD,CAAehK,QAAf,KAA4BjC,SAAhC,EAA2C;AACzC,UAAMkM,WAAW,GAAID,OAAD,CAAehK,QAAnC,CADyC;AAGzC;;AACA,UAAIiK,WAAW,CAAC9C,QAAZ,KAAyB6C,OAA7B,EAAsC;AACpC,cACE,wFACE,sFAFJ;AAID,OALD,MAKO,IAAIC,WAAW,CAAC/C,QAAZ,KAAyB8C,OAA7B,EAAsC;AAC3C,cACE,4DACE,mDAFJ;AAID;AACF;AACF;;AACD,SAAOL,UAAU,CAACI,UAAX,CAAsBC,OAAtB,CAAP;AACD;AAED,AAAO,SAASE,QAAT,CACLC,YADK,EAE+B;AACpC,MAAMR,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACO,QAAX,CAAoBC,YAApB,CAAP;AACD;AAED,AAAO,SAASC,UAAT,CACLC,OADK,EAELC,UAFK,EAGLhK,IAHK,EAIa;AAClB,MAAMqJ,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACS,UAAX,CAAsBC,OAAtB,EAA+BC,UAA/B,EAA2ChK,IAA3C,CAAP;AACD;AAED,AAAO,SAASiK,MAAT,CAAmBC,YAAnB,EAAoD;AACzD,MAAMb,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACY,MAAX,CAAkBC,YAAlB,CAAP;AACD;AAED,AAAO,SAASC,SAAT,CACLC,MADK,EAELC,IAFK,EAGC;AACN,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACc,SAAX,CAAqBC,MAArB,EAA6BC,IAA7B,CAAP;AACD;AAED,AAAO,SAASC,kBAAT,CACLF,MADK,EAELC,IAFK,EAGC;AACN,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACiB,kBAAX,CAA8BF,MAA9B,EAAsCC,IAAtC,CAAP;AACD;AAED,AAAO,SAASE,eAAT,CACLH,MADK,EAELC,IAFK,EAGC;AACN,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACkB,eAAX,CAA2BH,MAA3B,EAAmCC,IAAnC,CAAP;AACD;AAED,AAAO,SAASG,WAAT,CACLxO,QADK,EAELqO,IAFK,EAGF;AACH,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACmB,WAAX,CAAuBxO,QAAvB,EAAiCqO,IAAjC,CAAP;AACD;AAED,AAAO,SAASI,OAAT,CACLL,MADK,EAELC,IAFK,EAGF;AACH,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACoB,OAAX,CAAmBL,MAAnB,EAA2BC,IAA3B,CAAP;AACD;AAED,AAAO,SAASK,mBAAT,CACLnK,GADK,EAEL6J,MAFK,EAGLC,IAHK,EAIC;AACN,MAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACqB,mBAAX,CAA+BnK,GAA/B,EAAoC6J,MAApC,EAA4CC,IAA5C,CAAP;AACD;AAED,AAAO,SAASM,aAAT,CACLnM,KADK,EAELoM,WAFK,EAGC;AACN,EAAa;AACX,QAAMvB,UAAU,GAAGD,iBAAiB,EAApC;AACA,WAAOC,UAAU,CAACsB,aAAX,CAAyBnM,KAAzB,EAAgCoM,WAAhC,CAAP;AACD;AACF;AAED,AAEO,SAASC,aAAT,GAGL;AACA,MAAMxB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACwB,aAAX,EAAP;AACD;AAED,AAAO,SAASC,gBAAT,CAA6BtM,KAA7B,EAA0C;AAC/C,MAAM6K,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACyB,gBAAX,CAA4BtM,KAA5B,CAAP;AACD;AAED,AAAO,SAASuM,KAAT,GAAyB;AAC9B,MAAM1B,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAAC0B,KAAX,EAAP;AACD;AAED,AASO,SAASC,oBAAT,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,EAIF;AACH,MAAM9B,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAAC2B,oBAAX,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,CAAP;AAKD;AAED,AAAO,SAASC,eAAT,GAAsD;AAC3D,MAAM/B,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;AAG3D,SAAOC,UAAU,CAAC+B,eAAX,EAAP;AACD;;ACpMD;AACA;AACA;AACA;AAEA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB;;AACvBA,WAAW,CAACC,kBAAZ,GAAiC,IAAjC;AAEA,AAAO,SAASC,WAAT,GAA6B;AAClC,EAAa;AACX,QAAIV,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACAC,MAAAA,OAAO,GAAGnQ,OAAO,CAAC6Q,GAAlB;AACAT,MAAAA,QAAQ,GAAGpQ,OAAO,CAACmC,IAAnB;AACAkO,MAAAA,QAAQ,GAAGrQ,OAAO,CAAChB,IAAnB;AACAsR,MAAAA,SAAS,GAAGtQ,OAAO,CAACZ,KAApB;AACAmR,MAAAA,SAAS,GAAGvQ,OAAO,CAAC8Q,KAApB;AACAN,MAAAA,kBAAkB,GAAGxQ,OAAO,CAAC+Q,cAA7B;AACAN,MAAAA,YAAY,GAAGzQ,OAAO,CAACgR,QAAvB,CARuB;;AAUvB,UAAMzP,KAAK,GAAG;AACZ2E,QAAAA,YAAY,EAAE,IADF;AAEZY,QAAAA,UAAU,EAAE,IAFA;AAGZzD,QAAAA,KAAK,EAAEqN,WAHK;AAIZ3J,QAAAA,QAAQ,EAAE;AAJE,OAAd,CAVuB;;AAiBvB5F,MAAAA,MAAM,CAAC4K,gBAAP,CAAwB/L,OAAxB,EAAiC;AAC/BmC,QAAAA,IAAI,EAAEZ,KADyB;AAE/BsP,QAAAA,GAAG,EAAEtP,KAF0B;AAG/BvC,QAAAA,IAAI,EAAEuC,KAHyB;AAI/BnC,QAAAA,KAAK,EAAEmC,KAJwB;AAK/BuP,QAAAA,KAAK,EAAEvP,KALwB;AAM/BwP,QAAAA,cAAc,EAAExP,KANe;AAO/ByP,QAAAA,QAAQ,EAAEzP;AAPqB,OAAjC;AASA;AACD;;AACD2O,IAAAA,aAAa;AACd;AACF;AAED,AAAO,SAASe,YAAT,GAA8B;AACnC,EAAa;AACXf,IAAAA,aAAa;;AACb,QAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA,UAAM3O,KAAK,GAAG;AACZ2E,QAAAA,YAAY,EAAE,IADF;AAEZY,QAAAA,UAAU,EAAE,IAFA;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd,CAFuB;;AAQvB5F,MAAAA,MAAM,CAAC4K,gBAAP,CAAwB/L,OAAxB,EAAiC;AAC/B6Q,QAAAA,GAAG,aAAMtP,KAAN;AAAa8B,UAAAA,KAAK,EAAE8M;AAApB,UAD4B;AAE/BhO,QAAAA,IAAI,aAAMZ,KAAN;AAAa8B,UAAAA,KAAK,EAAE+M;AAApB,UAF2B;AAG/BpR,QAAAA,IAAI,aAAMuC,KAAN;AAAa8B,UAAAA,KAAK,EAAEgN;AAApB,UAH2B;AAI/BjR,QAAAA,KAAK,aAAMmC,KAAN;AAAa8B,UAAAA,KAAK,EAAEiN;AAApB,UAJ0B;AAK/BQ,QAAAA,KAAK,aAAMvP,KAAN;AAAa8B,UAAAA,KAAK,EAAEkN;AAApB,UAL0B;AAM/BQ,QAAAA,cAAc,aAAMxP,KAAN;AAAa8B,UAAAA,KAAK,EAAEmN;AAApB,UANiB;AAO/BQ,QAAAA,QAAQ,aAAMzP,KAAN;AAAa8B,UAAAA,KAAK,EAAEoN;AAApB;AAPuB,OAAjC;AASA;AACD;;AACD,QAAIP,aAAa,GAAG,CAApB,EAAuB;AACrB,YACE,oCACE,+CAFJ;AAID;AACF;AACF;;IC5DMvS,2BAA0BoB,qBAA1BpB;AAEP,IAAIuT,MAAJ;AACA,AAAO,SAASC,6BAAT,CACL3Q,IADK,EAELiG,MAFK,EAGL2K,OAHK,EAIG;AACR,EAAmC;AACjC,QAAIF,MAAM,KAAK5O,SAAf,EAA0B;AACxB;AACA,UAAI;AACF,cAAMT,KAAK,EAAX;AACD,OAFD,CAEE,OAAOkD,CAAP,EAAU;AACV,YAAM0D,KAAK,GAAG1D,CAAC,CAACzG,KAAF,CAAQ+S,IAAR,GAAe5I,KAAf,CAAqB,cAArB,CAAd;AACAyI,QAAAA,MAAM,GAAIzI,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAf,IAAuB,EAAhC;AACD;AACF,KATgC;;;AAWjC,WAAO,OAAOyI,MAAP,GAAgB1Q,IAAvB;AACD,GAZD;AAmBD;AAED,IAAI8Q,OAAO,GAAG,KAAd;AACA,IAAIC,mBAAJ;;AACA,AAAa;AACX,MAAMC,eAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE;AACAH,EAAAA,mBAAmB,GAAG,IAAIC,eAAJ,EAAtB;AACD;;AAED,AAAO,SAASG,4BAAT,CACLC,EADK,EAELC,SAFK,EAGG;AACR;AACA,MAAIC,CAAgC,CAACF,EAAjC,IAAuCN,OAA3C,EAAoD;AAClD,WAAO,EAAP;AACD;;AAED,EAAa;AACX,QAAMS,KAAK,GAAGR,mBAAmB,CAAClP,GAApB,CAAwBuP,EAAxB,CAAd;;AACA,QAAIG,KAAK,KAAKzP,SAAd,EAAyB;AACvB,aAAOyP,KAAP;AACD;AACF;;AAED,MAAIC,OAAJ;AAEAV,EAAAA,OAAO,GAAG,IAAV;AACA,MAAMW,yBAAyB,GAAGpQ,KAAK,CAACqQ,iBAAxC,CAhBQ;;AAkBRrQ,EAAAA,KAAK,CAACqQ,iBAAN,GAA0B5P,SAA1B;AACA,MAAI6P,kBAAJ;;AACA,EAAa;AACXA,IAAAA,kBAAkB,GAAGxU,wBAAsB,CAACC,OAA5C,CADW;AAGX;;AACAD,IAAAA,wBAAsB,CAACC,OAAvB,GAAiC,IAAjC;AACAgT,IAAAA,WAAW;AACZ;;AACD,MAAI;AACF;AACA,QAAIiB,SAAJ,EAAe;AACb;AACA,UAAMO,IAAI,GAAG,YAAW;AACtB,cAAMvQ,KAAK,EAAX;AACD,OAFD,CAFa;;;AAMbV,MAAAA,MAAM,CAACiB,cAAP,CAAsBgQ,IAAI,CAACvS,SAA3B,EAAsC,OAAtC,EAA+C;AAC7CmM,QAAAA,GAAG,EAAE,YAAW;AACd;AACA;AACA,gBAAMnK,KAAK,EAAX;AACD;AAL4C,OAA/C;;AAOA,UAAI,OAAOwQ,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACR,SAA3C,EAAsD;AACpD;AACA;AACA,YAAI;AACFQ,UAAAA,OAAO,CAACR,SAAR,CAAkBO,IAAlB,EAAwB,EAAxB;AACD,SAFD,CAEE,OAAOrN,CAAP,EAAU;AACViN,UAAAA,OAAO,GAAGjN,CAAV;AACD;;AACDsN,QAAAA,OAAO,CAACR,SAAR,CAAkBD,EAAlB,EAAsB,EAAtB,EAA0BQ,IAA1B;AACD,OATD,MASO;AACL,YAAI;AACFA,UAAAA,IAAI,CAACrS,IAAL;AACD,SAFD,CAEE,OAAOgF,CAAP,EAAU;AACViN,UAAAA,OAAO,GAAGjN,CAAV;AACD;;AACD6M,QAAAA,EAAE,CAAC7R,IAAH,CAAQqS,IAAI,CAACvS,SAAb;AACD;AACF,KA9BD,MA8BO;AACL,UAAI;AACF,cAAMgC,KAAK,EAAX;AACD,OAFD,CAEE,OAAOkD,CAAP,EAAU;AACViN,QAAAA,OAAO,GAAGjN,CAAV;AACD,OALI;AAOL;AACA;;;AACA6M,MAAAA,EAAE;AACH;AACF,GA3CD,CA2CE,OAAOU,MAAP,EAAe;AACf;AACA,QAAIA,MAAM,IAAIN,OAAV,IAAqB,OAAOM,MAAM,CAAChU,KAAd,KAAwB,QAAjD,EAA2D;AACzD;AACA;AACA,UAAMiU,WAAW,GAAGD,MAAM,CAAChU,KAAP,CAAakU,KAAb,CAAmB,IAAnB,CAApB;AACA,UAAMC,YAAY,GAAGT,OAAO,CAAC1T,KAAR,CAAckU,KAAd,CAAoB,IAApB,CAArB;AACA,UAAIE,CAAC,GAAGH,WAAW,CAAClL,MAAZ,GAAqB,CAA7B;AACA,UAAIqC,CAAC,GAAG+I,YAAY,CAACpL,MAAb,GAAsB,CAA9B;;AACA,aAAOqL,CAAC,IAAI,CAAL,IAAUhJ,CAAC,IAAI,CAAf,IAAoB6I,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAAC/I,CAAD,CAA1D,EAA+D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACAA,QAAAA,CAAC;AACF;;AACD,aAAOgJ,CAAC,IAAI,CAAL,IAAUhJ,CAAC,IAAI,CAAtB,EAAyBgJ,CAAC,IAAIhJ,CAAC,EAA/B,EAAmC;AACjC;AACA;AACA,YAAI6I,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAAC/I,CAAD,CAAnC,EAAwC;AACtC;AACA;AACA;AACA;AACA;AACA,cAAIgJ,CAAC,KAAK,CAAN,IAAWhJ,CAAC,KAAK,CAArB,EAAwB;AACtB,eAAG;AACDgJ,cAAAA,CAAC;AACDhJ,cAAAA,CAAC,GAFA;AAID;;AACA,kBAAIA,CAAC,GAAG,CAAJ,IAAS6I,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAAC/I,CAAD,CAA5C,EAAiD;AAC/C;AACA,oBAAIqI,MAAK,GAAG,OAAOQ,WAAW,CAACG,CAAD,CAAX,CAAelK,OAAf,CAAuB,UAAvB,EAAmC,MAAnC,CAAnB,CAF+C;AAK/C;AACA;;;AACA,oBAAIoJ,EAAE,CAACrR,WAAH,IAAkBwR,MAAK,CAACY,QAAN,CAAe,aAAf,CAAtB,EAAqD;AACnDZ,kBAAAA,MAAK,GAAGA,MAAK,CAACvJ,OAAN,CAAc,aAAd,EAA6BoJ,EAAE,CAACrR,WAAhC,CAAR;AACD;;AAED,gBAAa;AACX,sBAAI,OAAOqR,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,oBAAAA,mBAAmB,CAACvF,GAApB,CAAwB4F,EAAxB,EAA4BG,MAA5B;AACD;AACF,iBAf8C;;;AAiB/C,uBAAOA,MAAP;AACD;AACF,aAxBD,QAwBSW,CAAC,IAAI,CAAL,IAAUhJ,CAAC,IAAI,CAxBxB;AAyBD;;AACD;AACD;AACF;AACF;AACF,GArGD,SAqGU;AACR4H,IAAAA,OAAO,GAAG,KAAV;;AACA,IAAa;AACX3T,MAAAA,wBAAsB,CAACC,OAAvB,GAAiCuU,kBAAjC;AACAlB,MAAAA,YAAY;AACb;;AACDpP,IAAAA,KAAK,CAACqQ,iBAAN,GAA0BD,yBAA1B;AACD,GAvIO;;;AAyIR,MAAMzR,IAAI,GAAGoR,EAAE,GAAGA,EAAE,CAACrR,WAAH,IAAkBqR,EAAE,CAACpR,IAAxB,GAA+B,EAA9C;AACA,MAAMoS,cAAc,GAAGpS,IAAI,GAAG2Q,6BAA6B,CAAC3Q,IAAD,CAAhC,GAAyC,EAApE;;AACA,EAAa;AACX,QAAI,OAAOoR,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,MAAAA,mBAAmB,CAACvF,GAApB,CAAwB4F,EAAxB,EAA4BgB,cAA5B;AACD;AACF;;AACD,SAAOA,cAAP;AACD;AAED,AA0CO,SAASC,8BAAT,CACLjB,EADK,EAELnL,MAFK,EAGL2K,OAHK,EAIG;AACR,EAAmC;AACjC,WAAOO,4BAA4B,CAACC,EAAD,EAAK,KAAL,CAAnC;AACD,GAFD;AAaD;;AAED,SAASkB,eAAT,CAAyBxR,SAAzB,EAA8C;AAC5C,MAAMzB,SAAS,GAAGyB,SAAS,CAACzB,SAA5B;AACA,SAAO,CAAC,EAAEA,SAAS,IAAIA,SAAS,CAAC8B,gBAAzB,CAAR;AACD;;AAED,AAAO,SAASoR,oCAAT,CACLvP,IADK,EAELiD,MAFK,EAGL2K,OAHK,EAIG;AACR;AAGA,MAAI5N,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,IAAmC;AACjC,aAAOmO,4BAA4B,CAACnO,IAAD,EAAOsP,eAAe,CAACtP,IAAD,CAAtB,CAAnC;AACD,KAFD;AAKD;;AACD,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO2N,6BAA6B,CAAC3N,IAAD,AAAA,CAApC;AACD;;AACD,UAAQA,IAAR;AACE,SAAK3G,mBAAL;AACE,aAAOsU,6BAA6B,CAAC,UAAD,AAAA,CAApC;;AACF,SAAKrU,wBAAL;AACE,aAAOqU,6BAA6B,CAAC,cAAD,AAAA,CAApC;AAJJ;;AAMA,MAAI,OAAO3N,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACa,QAAb;AACE,WAAKzH,sBAAL;AACE,eAAOiW,8BAA8B,CAACrP,IAAI,CAACgB,MAAN,AAAA,CAArC;;AACF,WAAKzH,eAAL;AACE;AACA,eAAOgW,oCAAoC,CAACvP,IAAI,CAACA,IAAN,EAAYiD,MAAZ,EAAoB2K,OAApB,CAA3C;;AACF,WAAKpU,eAAL;AAAsB;AACpB,cAAM0H,aAAsC,GAAIlB,IAAhD;AACA,cAAMmB,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF;AACA,mBAAOiO,oCAAoC,CACzClO,IAAI,CAACF,OAAD,CADqC,EAEzC8B,MAFyC,EAGzC2K,OAHyC,CAA3C;AAKD,WAPD,CAOE,OAAOrM,CAAP,EAAU;AACb;AAlBH;AAoBD;;AACD,SAAO,EAAP;AACD;;ACnUD,IAAMiO,kBAAkB,GAAG,EAA3B;AAEA,AAKA,IAAM7U,wBAAsB,GAAGY,oBAAoB,CAACZ,sBAApD;;AAEA,SAAS8U,6BAAT,CAAuCtM,OAAvC,EAAgD;AAC9C,EAAa;AACX,QAAIA,OAAJ,EAAa;AACX,UAAMD,KAAK,GAAGC,OAAO,CAACC,MAAtB;AACA,UAAMtI,KAAK,GAAGyU,oCAAoC,CAChDpM,OAAO,CAACnD,IADwC,EAEhDmD,OAAO,CAACmB,OAFwC,EAGhDpB,KAAK,GAAGA,KAAK,CAAClD,IAAT,GAAgB,IAH2B,CAAlD;AAKArF,MAAAA,wBAAsB,CAACE,kBAAvB,CAA0CC,KAA1C;AACD,KARD,MAQO;AACLH,MAAAA,wBAAsB,CAACE,kBAAvB,CAA0C,IAA1C;AACD;AACF;AACF;;AAED,AAAe,SAAS6U,cAAT,CACbC,SADa,EAEbC,MAFa,EAGbC,QAHa,EAIb/S,aAJa,EAKbqG,OALa,EAMP;AACN,EAAa;AACX;AACA,QAAM2M,GAAG,GAAG1T,QAAQ,CAACG,IAAT,CAAcwT,IAAd,CAAmB/Q,cAAnB,CAAZ;;AACA,SAAK,IAAMgR,YAAX,IAA2BL,SAA3B,EAAsC;AACpC,UAAIG,GAAG,CAACH,SAAD,EAAYK,YAAZ,CAAP,EAAkC;AAChC,YAAIpU,OAAK,SAAT,CADgC;AAGhC;AACA;;AACA,YAAI;AACF;AACA;AACA,cAAI,OAAO+T,SAAS,CAACK,YAAD,CAAhB,KAAmC,UAAvC,EAAmD;AACjD;AACA,gBAAMC,GAAG,GAAG5R,KAAK,CACf,CAACvB,aAAa,IAAI,aAAlB,IACE,IADF,GAEE+S,QAFF,GAGE,SAHF,GAIEG,YAJF,GAKE,gBALF,GAME,8EANF,GAOE,OAAOL,SAAS,CAACK,YAAD,CAPlB,GAQE,IARF,GASE,+FAVa,CAAjB;AAYAC,YAAAA,GAAG,CAACjT,IAAJ,GAAW,qBAAX;AACA,kBAAMiT,GAAN;AACD;;AACDrU,UAAAA,OAAK,GAAG+T,SAAS,CAACK,YAAD,CAAT,CACNJ,MADM,EAENI,YAFM,EAGNlT,aAHM,EAIN+S,QAJM,EAKN,IALM,EAMN,8CANM,CAAR;AAQD,SA5BD,CA4BE,OAAOK,EAAP,EAAW;AACXtU,UAAAA,OAAK,GAAGsU,EAAR;AACD;;AACD,YAAItU,OAAK,IAAI,EAAEA,OAAK,YAAYyC,KAAnB,CAAb,EAAwC;AACtCoR,UAAAA,6BAA6B,CAACtM,OAAD,CAA7B;;AACA,gBACE,iCACE,qCADF,GAEE,+DAFF,GAGE,iEAHF,GAIE,gEAJF,GAKE,iCANJ,EAOErG,aAAa,IAAI,aAPnB,EAQE+S,QARF,EASEG,YATF,EAUE,OAAOpU,OAVT;;AAYA6T,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;;AACD,YAAI7T,OAAK,YAAYyC,KAAjB,IAA0B,EAAEzC,OAAK,CAACuU,OAAN,IAAiBX,kBAAnB,CAA9B,EAAsE;AACpE;AACA;AACAA,UAAAA,kBAAkB,CAAC5T,OAAK,CAACuU,OAAP,CAAlB,GAAoC,IAApC;AACAV,UAAAA,6BAA6B,CAACtM,OAAD,CAA7B;;AACA,gBAAc,oBAAd,EAAoC0M,QAApC,EAA8CjU,OAAK,CAACuU,OAApD;;AACAV,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AACF;AACF;AACF;;ACtED,SAASA,+BAAT,CAAuCtM,OAAvC,EAAgD;AAC9C,EAAa;AACX,QAAIA,OAAJ,EAAa;AACX,UAAMD,KAAK,GAAGC,OAAO,CAACC,MAAtB;AACA,UAAMtI,KAAK,GAAGyU,oCAAoC,CAChDpM,OAAO,CAACnD,IADwC,EAEhDmD,OAAO,CAACmB,OAFwC,EAGhDpB,KAAK,GAAGA,KAAK,CAAClD,IAAT,GAAgB,IAH2B,CAAlD;AAKAnF,MAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,KARD,MAQO;AACLD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF;AACF;;AAED,IAAIuV,6BAAJ;;AAEA,AAAa;AACXA,EAAAA,6BAA6B,GAAG,KAAhC;AACD;;AAED,SAASC,2BAAT,GAAuC;AACrC,MAAI3V,iBAAiB,CAACN,OAAtB,EAA+B;AAC7B,QAAM4C,IAAI,GAAG2D,wBAAwB,CAACjG,iBAAiB,CAACN,OAAlB,CAA0B4F,IAA3B,CAArC;;AACA,QAAIhD,IAAJ,EAAU;AACR,aAAO,qCAAqCA,IAArC,GAA4C,IAAnD;AACD;AACF;;AACD,SAAO,EAAP;AACD;;AAED,SAASsT,0BAAT,CAAoCrN,MAApC,EAA4C;AAC1C,MAAIA,MAAM,KAAKnE,SAAf,EAA0B;AACxB,QAAMyR,QAAQ,GAAGtN,MAAM,CAACsN,QAAP,CAAgBvL,OAAhB,CAAwB,WAAxB,EAAqC,EAArC,CAAjB;AACA,QAAMwL,UAAU,GAAGvN,MAAM,CAACuN,UAA1B;AACA,WAAO,4BAA4BD,QAA5B,GAAuC,GAAvC,GAA6CC,UAA7C,GAA0D,GAAjE;AACD;;AACD,SAAO,EAAP;AACD;;AAED,SAASC,kCAAT,CAA4CC,YAA5C,EAA0D;AACxD,MAAIA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK5R,SAA9C,EAAyD;AACvD,WAAOwR,0BAA0B,CAACI,YAAY,CAAC5O,QAAd,CAAjC;AACD;;AACD,SAAO,EAAP;AACD;AAED;;;;;;;AAKA,IAAM6O,qBAAqB,GAAG,EAA9B;;AAEA,SAASC,4BAAT,CAAsCC,UAAtC,EAAkD;AAChD,MAAIlS,IAAI,GAAG0R,2BAA2B,EAAtC;;AAEA,MAAI,CAAC1R,IAAL,EAAW;AACT,QAAMmS,UAAU,GACd,OAAOD,UAAP,KAAsB,QAAtB,GACIA,UADJ,GAEIA,UAAU,CAAC9T,WAAX,IAA0B8T,UAAU,CAAC7T,IAH3C;;AAIA,QAAI8T,UAAJ,EAAgB;AACdnS,MAAAA,IAAI,mDAAiDmS,UAAjD,OAAJ;AACD;AACF;;AACD,SAAOnS,IAAP;AACD;AAED;;;;;;;;;;;;;AAWA,SAASoS,mBAAT,CAA6B5N,OAA7B,EAAsC0N,UAAtC,EAAkD;AAChD,MAAI,CAAC1N,OAAO,CAACE,MAAT,IAAmBF,OAAO,CAACE,MAAR,CAAe2N,SAAlC,IAA+C7N,OAAO,CAACxB,GAAR,IAAe,IAAlE,EAAwE;AACtE;AACD;;AACDwB,EAAAA,OAAO,CAACE,MAAR,CAAe2N,SAAf,GAA2B,IAA3B;AAEA,MAAMC,yBAAyB,GAAGL,4BAA4B,CAACC,UAAD,CAA9D;;AACA,MAAIF,qBAAqB,CAACM,yBAAD,CAAzB,EAAsD;AACpD;AACD;;AACDN,EAAAA,qBAAqB,CAACM,yBAAD,CAArB,GAAmD,IAAnD,CAVgD;AAahD;AACA;;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MACE/N,OAAO,IACPA,OAAO,CAACC,MADR,IAEAD,OAAO,CAACC,MAAR,KAAmB1I,iBAAiB,CAACN,OAHvC,EAIE;AACA;AACA8W,IAAAA,UAAU,oCAAkCvQ,wBAAwB,CAClEwC,OAAO,CAACC,MAAR,CAAepD,IADmD,CAA1D,MAAV;AAGD;;AAED,EAAa;AACXyP,IAAAA,+BAA6B,CAACtM,OAAD,CAA7B;;AACA,UACE,0DACE,sEAFJ,EAGE8N,yBAHF,EAIEC,UAJF;;AAMAzB,IAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AAED;;;;;;;;;;;AASA,SAAS0B,iBAAT,CAA2BC,IAA3B,EAAiCP,UAAjC,EAA6C;AAC3C,MAAI,OAAOO,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACD;;AACD,MAAI1R,OAAO,CAAC0R,IAAD,CAAX,EAAmB;AACjB,SAAK,IAAIrN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqN,IAAI,CAACvN,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,UAAM+B,KAAK,GAAGsL,IAAI,CAACrN,CAAD,CAAlB;;AACA,UAAIS,cAAc,CAACsB,KAAD,CAAlB,EAA2B;AACzBiL,QAAAA,mBAAmB,CAACjL,KAAD,EAAQ+K,UAAR,CAAnB;AACD;AACF;AACF,GAPD,MAOO,IAAIrM,cAAc,CAAC4M,IAAD,CAAlB,EAA0B;AAC/B;AACA,QAAIA,IAAI,CAAC/N,MAAT,EAAiB;AACf+N,MAAAA,IAAI,CAAC/N,MAAL,CAAY2N,SAAZ,GAAwB,IAAxB;AACD;AACF,GALM,MAKA,IAAII,IAAJ,EAAU;AACf,QAAM7K,UAAU,GAAGvM,aAAa,CAACoX,IAAD,CAAhC;;AACA,QAAI,OAAO7K,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACA;AACA,UAAIA,UAAU,KAAK6K,IAAI,CAAC3K,OAAxB,EAAiC;AAC/B,YAAM3M,QAAQ,GAAGyM,UAAU,CAAChK,IAAX,CAAgB6U,IAAhB,CAAjB;AACA,YAAI1K,IAAJ;;AACA,eAAO,CAAC,CAACA,IAAI,GAAG5M,QAAQ,CAAC8M,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrC,cAAIrC,cAAc,CAACkC,IAAI,CAAC7G,KAAN,CAAlB,EAAgC;AAC9BkR,YAAAA,mBAAmB,CAACrK,IAAI,CAAC7G,KAAN,EAAagR,UAAb,CAAnB;AACD;AACF;AACF;AACF;AACF;AACF;AAED;;;;;;;;AAMA,SAASQ,iBAAT,CAA2BlO,OAA3B,EAAoC;AAClC,EAAa;AACX,QAAMnD,IAAI,GAAGmD,OAAO,CAACnD,IAArB;;AACA,QAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKlB,SAA1B,IAAuC,OAAOkB,IAAP,KAAgB,QAA3D,EAAqE;AACnE;AACD;;AACD,QAAI6J,SAAJ;;AACA,QAAI,OAAO7J,IAAP,KAAgB,UAApB,EAAgC;AAC9B6J,MAAAA,SAAS,GAAG7J,IAAI,CAAC6J,SAAjB;AACD,KAFD,MAEO,IACL,OAAO7J,IAAP,KAAgB,QAAhB,KACCA,IAAI,CAACa,QAAL,KAAkBzH,sBAAlB;AAEC;AACA4G,IAAAA,IAAI,CAACa,QAAL,KAAkBtH,eAJpB,CADK,EAML;AACAsQ,MAAAA,SAAS,GAAG7J,IAAI,CAAC6J,SAAjB;AACD,KARM,MAQA;AACL;AACD;;AACD,QAAIA,SAAJ,EAAe;AACb;AACA,UAAM7M,IAAI,GAAG2D,wBAAwB,CAACX,IAAD,CAArC;AACA0P,MAAAA,cAAc,CAAC7F,SAAD,EAAY1G,OAAO,CAACpF,KAApB,EAA2B,MAA3B,EAAmCf,IAAnC,EAAyCmG,OAAzC,CAAd;AACD,KAJD,MAIO,IAAInD,IAAI,CAACsR,SAAL,KAAmBxS,SAAnB,IAAgC,CAACsR,6BAArC,EAAoE;AACzEA,MAAAA,6BAA6B,GAAG,IAAhC,CADyE;;AAGzE,UAAMpT,KAAI,GAAG2D,wBAAwB,CAACX,IAAD,CAArC;;AACA,YACE,qGADF,EAEEhD,KAAI,IAAI,SAFV;AAID;;AACD,QACE,OAAOgD,IAAI,CAACuR,eAAZ,KAAgC,UAAhC,IACA,CAACvR,IAAI,CAACuR,eAAL,CAAqBC,oBAFxB,EAGE;AACA,YACE,+DACE,kEAFJ;AAID;AACF;AACF;AAED;;;;;;AAIA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,EAAa;AACX,QAAM3K,IAAI,GAAGpJ,MAAM,CAACoJ,IAAP,CAAY2K,QAAQ,CAAC3T,KAArB,CAAb;;AACA,SAAK,IAAIgG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgD,IAAI,CAAClD,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,UAAMpC,GAAG,GAAGoF,IAAI,CAAChD,CAAD,CAAhB;;AACA,UAAIpC,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,KAAlC,EAAyC;AACvC8N,QAAAA,+BAA6B,CAACiC,QAAD,CAA7B;;AACA,cACE,qDACE,0DAFJ,EAGE/P,GAHF;;AAKA8N,QAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACA;AACD;AACF;;AAED,QAAIiC,QAAQ,CAAC9P,GAAT,KAAiB,IAArB,EAA2B;AACzB6N,MAAAA,+BAA6B,CAACiC,QAAD,CAA7B;;AACA,YAAc,uDAAd;;AACAjC,MAAAA,+BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AACF;AAqIM,SAASkC,2BAAT,CAAqC3R,IAArC,EAA2CjC,KAA3C,EAAkD0F,QAAlD,EAA4D;AACjE,MAAMmO,SAAS,GAAGxH,kBAAkB,CAACpK,IAAD,CAApC,CADiE;AAIjE;;AACA,MAAI,CAAC4R,SAAL,EAAgB;AACd,QAAIjT,IAAI,GAAG,EAAX;;AACA,QACEqB,IAAI,KAAKlB,SAAT,IACC,OAAOkB,IAAP,KAAgB,QAAhB,IACCA,IAAI,KAAK,IADV,IAECrC,MAAM,CAACoJ,IAAP,CAAY/G,IAAZ,EAAkB6D,MAAlB,KAA6B,CAJjC,EAKE;AACAlF,MAAAA,IAAI,IACF,+DACA,wEAFF;AAGD;;AAED,QAAMkT,UAAU,GAAGpB,kCAAkC,CAAC1S,KAAD,CAArD;;AACA,QAAI8T,UAAJ,EAAgB;AACdlT,MAAAA,IAAI,IAAIkT,UAAR;AACD,KAFD,MAEO;AACLlT,MAAAA,IAAI,IAAI0R,2BAA2B,EAAnC;AACD;;AAED,QAAIyB,UAAJ;;AACA,QAAI9R,IAAI,KAAK,IAAb,EAAmB;AACjB8R,MAAAA,UAAU,GAAG,MAAb;AACD,KAFD,MAEO,IAAIpS,OAAO,CAACM,IAAD,CAAX,EAAmB;AACxB8R,MAAAA,UAAU,GAAG,OAAb;AACD,KAFM,MAEA,IAAI9R,IAAI,KAAKlB,SAAT,IAAsBkB,IAAI,CAACa,QAAL,KAAkBnI,kBAA5C,EAAgE;AACrEoZ,MAAAA,UAAU,UAAOnR,wBAAwB,CAACX,IAAI,CAACA,IAAN,CAAxB,IAAuC,SAA9C,SAAV;AACArB,MAAAA,IAAI,GACF,oEADF;AAED,KAJM,MAIA;AACLmT,MAAAA,UAAU,GAAG,OAAO9R,IAApB;AACD;;AAED,IAAa;AACX,YACE,oEACE,0DADF,GAEE,4BAHJ,EAIE8R,UAJF,EAKEnT,IALF;AAOD;AACF;;AAED,MAAMwE,OAAO,GAAGK,aAAa,CAAClH,KAAd,CAAoB,IAApB,EAA0BsH,SAA1B,CAAhB,CAjDiE;AAoDjE;;AACA,MAAIT,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAOA,OAAP;AACD,GAvDgE;AA0DjE;AACA;AACA;AACA;;;AACA,MAAIyO,SAAJ,EAAe;AACb,SAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCoN,MAAAA,iBAAiB,CAACvN,SAAS,CAACG,CAAD,CAAV,EAAe/D,IAAf,CAAjB;AACD;AACF;;AAED,MAAIA,IAAI,KAAKlH,mBAAb,EAAkC;AAChC2Y,IAAAA,qBAAqB,CAACtO,OAAD,CAArB;AACD,GAFD,MAEO;AACLkO,IAAAA,iBAAiB,CAAClO,OAAD,CAAjB;AACD;;AAED,SAAOA,OAAP;AACD;AAED,IAAI4O,mCAAmC,GAAG,KAA1C;AAEA,AAAO,SAASC,2BAAT,CAAqChS,IAArC,EAA2C;AAChD,MAAMiS,gBAAgB,GAAGN,2BAA2B,CAAC5B,IAA5B,CAAiC,IAAjC,EAAuC/P,IAAvC,CAAzB;AACAiS,EAAAA,gBAAgB,CAACjS,IAAjB,GAAwBA,IAAxB;;AACA,EAAa;AACX,QAAI,CAAC+R,mCAAL,EAA0C;AACxCA,MAAAA,mCAAmC,GAAG,IAAtC;;AACA,WACE,gEACE,6CADF,GAEE,gDAHJ;AAKD,KARU;;;AAUXpU,IAAAA,MAAM,CAACiB,cAAP,CAAsBqT,gBAAtB,EAAwC,MAAxC,EAAgD;AAC9C3O,MAAAA,UAAU,EAAE,KADkC;AAE9CzE,MAAAA,GAAG,EAAE,YAAW;AACd,aACE,2DACE,qCAFJ;;AAIAlB,QAAAA,MAAM,CAACiB,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;AAClCiB,UAAAA,KAAK,EAAEG;AAD2B,SAApC;AAGA,eAAOA,IAAP;AACD;AAX6C,KAAhD;AAaD;;AAED,SAAOiS,gBAAP;AACD;AAED,AAAO,SAASC,0BAAT,CAAoC/O,OAApC,EAA6CpF,KAA7C,EAAoD0F,QAApD,EAA8D;AACnE,MAAMW,UAAU,GAAGG,YAAY,CAACjI,KAAb,CAAmB,IAAnB,EAAyBsH,SAAzB,CAAnB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCoN,IAAAA,iBAAiB,CAACvN,SAAS,CAACG,CAAD,CAAV,EAAeK,UAAU,CAACpE,IAA1B,CAAjB;AACD;;AACDqR,EAAAA,iBAAiB,CAACjN,UAAD,CAAjB;AACA,SAAOA,UAAP;AACD;;AC1fD,IAAM9I,iBAAe,GAAGC,oBAAoB,CAACD,eAA7C;AAEA,AAAO,SAAS6W,mBAAT,CACLC,UADK,EAELvK,YAFK,EAGkB;AACvB;AAGA,MAAIwK,UAAU,GAAG,IAAjB;;AACA,MAAI,CAAC/W,iBAAe,CAAC8W,UAAD,CAApB,EAAkC;AAChCC,IAAAA,UAAU,GAAG,KAAb;AACA,QAAMrU,QAA8B,GAAG;AACrC6C,MAAAA,QAAQ,EAAE1H,yBAD2B;AAGrC;AACA;AACA;AACA;AACA;AACA2O,MAAAA,aAAa,EAAED,YARsB;AASrCE,MAAAA,cAAc,EAAEF,YATqB;AAWrCM,MAAAA,aAAa,EAAEN,YAXsB;AAarC;AACA;AACAG,MAAAA,YAAY,EAAE,CAfuB;AAgBrC;AACAC,MAAAA,QAAQ,EAAG,IAjB0B;AAkBrCC,MAAAA,QAAQ,EAAG,IAlB0B;AAmBrCzG,MAAAA,WAAW,EAAE2Q;AAnBwB,KAAvC;AAsBApU,IAAAA,QAAO,CAACiK,QAAR,GAAmB;AACjBpH,MAAAA,QAAQ,EAAE5H,mBADO;AAEjB8H,MAAAA,QAAQ,EAAE/C;AAFO,KAAnB;;AAKA,IAAa;AACX,UAAIsU,2BAAJ;AACAtU,MAAAA,QAAO,CAAC0K,gBAAR,GAA2B,IAA3B;AACA1K,MAAAA,QAAO,CAAC2K,iBAAR,GAA4B,IAA5B;AACAhL,MAAAA,MAAM,CAAC4K,gBAAP,CACEvK,QADF,EAEG;AACCkK,QAAAA,QAAQ,EAAE;AACRrJ,UAAAA,GADQ,cACF;AACJ,gBAAI,CAACyT,2BAAL,EAAkC;AAChC,oBACE,yDADF;;AAGAA,cAAAA,2BAA2B,GAAG,IAA9B;AACD;;AACD,mBAAO,IAAP;AACD;AATO;AADX,OAFH;AAgBD;;AACDhX,IAAAA,iBAAe,CAAC8W,UAAD,CAAf,GAA8BpU,QAA9B;AACD;;AAED,MAAMA,OAAO,GAAG1C,iBAAe,CAAC8W,UAAD,CAA/B;;AACA,MAAIpU,OAAO,CAACmK,aAAR,KAA0BvO,6CAA9B,EAA6E;AAC3EoE,IAAAA,OAAO,CAACmK,aAAR,GAAwBN,YAAxB;;AACA,QACE7J,OAAO,CAAC8J,aAAR,KAA0BlO,6CAD5B,EAEE;AACAoE,MAAAA,OAAO,CAAC8J,aAAR,GAAwBD,YAAxB;AACD;;AACD,QACE7J,OAAO,CAAC+J,cAAR,KAA2BnO,6CAD7B,EAEE;AACAoE,MAAAA,OAAO,CAAC+J,cAAR,GAAyBF,YAAzB;AACD;AACF,GAZD,MAYO,IAAIwK,UAAJ,EAAgB;AACrB,UAAM,IAAIhU,KAAJ,qBAA4B+T,UAA5B,sBAAN;AACD;;AACD,SAAOpU,OAAP;AACD;;AC1FM,SAASuU,eAAT,CACLC,KADK,EAELC,OAFK,EAGL;AACA,MAAMC,cAAc,GAAGrY,uBAAuB,CAACC,UAA/C;AACAD,EAAAA,uBAAuB,CAACC,UAAxB,GAAqC,EAArC;AACA,MAAMqY,iBAAiB,GAAGtY,uBAAuB,CAACC,UAAlD;;AAEA,EAAa;AACXD,IAAAA,uBAAuB,CAACC,UAAxB,CAAmCsY,cAAnC,GAAoD,IAAIC,GAAJ,EAApD;AACD;;AASD,MAAI;AACFL,IAAAA,KAAK;AACN,GAFD,SAEU;AACRnY,IAAAA,uBAAuB,CAACC,UAAxB,GAAqCoY,cAArC;;AAEA,IAAa;AACX,UAAIA,cAAc,KAAK,IAAnB,IAA2BC,iBAAiB,CAACC,cAAjD,EAAiE;AAC/D,YAAME,kBAAkB,GAAGH,iBAAiB,CAACC,cAAlB,CAAiCG,IAA5D;;AACA,YAAID,kBAAkB,GAAG,EAAzB,EAA6B;AAC3B,eACE,gEACE,mFADF,GAEE,yDAHJ;AAKD;;AACDH,QAAAA,iBAAiB,CAACC,cAAlB,CAAiCI,KAAjC;AACD;AACF;AACF;AACF;;AC1CD,IAAIC,0BAA0B,GAAG,KAAjC;AACA,IAAIC,eAAe,GAAG,IAAtB;AAEA,AAAe,SAASC,WAAT,CAAqBC,IAArB,EAAuC;AACpD,MAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,QAAI;AACF;AACA;AACA,UAAMG,aAAa,GAAG,CAAC,YAAYC,IAAI,CAACC,MAAL,EAAb,EAA4BC,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAAtB;AACA,UAAMC,WAAW,GAAGC,MAAM,IAAIA,MAAM,CAACL,aAAD,CAApC,CAJE;AAMF;;AACAH,MAAAA,eAAe,GAAGO,WAAW,CAAClX,IAAZ,CAAiBmX,MAAjB,EAAyB,QAAzB,EAAmCC,YAArD;AACD,KARD,CAQE,OAAOC,IAAP,EAAa;AACb;AACA;AACA;AACAV,MAAAA,eAAe,GAAG,UAAS7V,QAAT,EAA+B;AAC/C,QAAa;AACX,cAAI4V,0BAA0B,KAAK,KAAnC,EAA0C;AACxCA,YAAAA,0BAA0B,GAAG,IAA7B;;AACA,gBAAI,OAAOY,cAAP,KAA0B,WAA9B,EAA2C;AACzC,oBACE,iEACE,+DADF,GAEE,mEAFF,GAGE,gCAJJ;AAMD;AACF;AACF;;AACD,YAAMC,OAAO,GAAG,IAAID,cAAJ,EAAhB;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAcC,SAAd,GAA0B3W,QAA1B;AACAyW,QAAAA,OAAO,CAACG,KAAR,CAAcC,WAAd,CAA0BpV,SAA1B;AACD,OAjBD;AAkBD;AACF;;AACD,SAAOoU,eAAe,CAACE,IAAD,CAAtB;AACD;;AClCD,IAAIe,aAAa,GAAG,CAApB;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AAEA,AAAO,SAASC,GAAT,CAAgBhX,QAAhB,EAA8D;AACnE,EAAa;AACX;AACA;AACA,QAAMiX,iBAAiB,GAAGH,aAA1B;AACAA,IAAAA,aAAa;;AAEb,QAAI5Z,oBAAoB,CAACH,OAArB,KAAiC,IAArC,EAA2C;AACzC;AACA;AACAG,MAAAA,oBAAoB,CAACH,OAArB,GAA+B,EAA/B;AACD;;AAED,QAAMma,oBAAoB,GAAGha,oBAAoB,CAACC,gBAAlD;AACA,QAAI2M,MAAJ;;AACA,QAAI;AACF;AACA;AACA;AACA;AACA5M,MAAAA,oBAAoB,CAACC,gBAArB,GAAwC,IAAxC;AACA2M,MAAAA,MAAM,GAAG9J,QAAQ,EAAjB,CANE;AASF;AACA;;AACA,UACE,CAACkX,oBAAD,IACAha,oBAAoB,CAACE,uBAFvB,EAGE;AACA,YAAM+Z,KAAK,GAAGja,oBAAoB,CAACH,OAAnC;;AACA,YAAIoa,KAAK,KAAK,IAAd,EAAoB;AAClBja,UAAAA,oBAAoB,CAACE,uBAArB,GAA+C,KAA/C;AACAga,UAAAA,aAAa,CAACD,KAAD,CAAb;AACD;AACF;AACF,KArBD,CAqBE,OAAO5Y,KAAP,EAAc;AACd8Y,MAAAA,WAAW,CAACJ,iBAAD,CAAX;AACA,YAAM1Y,KAAN;AACD,KAxBD,SAwBU;AACRrB,MAAAA,oBAAoB,CAACC,gBAArB,GAAwC+Z,oBAAxC;AACD;;AAED,QACEpN,MAAM,KAAK,IAAX,IACA,OAAOA,MAAP,KAAkB,QADlB,IAEA,OAAOA,MAAM,CAACkC,IAAd,KAAuB,UAHzB,EAIE;AACA,UAAMsL,cAA2B,GAAIxN,MAArC,CADA;AAGA;;AACA,UAAIyN,UAAU,GAAG,KAAjB;AACA,UAAMxL,QAAqB,GAAG;AAC5BC,QAAAA,IAD4B,YACvBwL,OADuB,EACdC,MADc,EACN;AACpBF,UAAAA,UAAU,GAAG,IAAb;AACAD,UAAAA,cAAc,CAACtL,IAAf,CACE,UAAA0L,WAAW,EAAI;AACbL,YAAAA,WAAW,CAACJ,iBAAD,CAAX;;AACA,gBAAIH,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA;AACAa,cAAAA,4BAA4B,CAACD,WAAD,EAAcF,OAAd,EAAuBC,MAAvB,CAA5B;AACD,aAJD,MAIO;AACLD,cAAAA,OAAO,CAACE,WAAD,CAAP;AACD;AACF,WAVH,EAWE,UAAAnZ,KAAK,EAAI;AACP;AACA8Y,YAAAA,WAAW,CAACJ,iBAAD,CAAX;AACAQ,YAAAA,MAAM,CAAClZ,KAAD,CAAN;AACD,WAfH;AAiBD;AApB2B,OAA9B;;AAuBA,MAAa;AACX,YAAI,CAACwY,iBAAD,IAAsB,OAAOa,OAAP,KAAmB,WAA7C,EAA0D;AACxD;AACAA,UAAAA,OAAO,CAACJ,OAAR,GACGxL,IADH,CACQ,YAAM,EADd,EAEGA,IAFH,CAEQ,YAAM;AACV,gBAAI,CAACuL,UAAL,EAAiB;AACfR,cAAAA,iBAAiB,GAAG,IAApB;;AACA,oBACE,oDACE,mDADF,GAEE,mDAFF,GAGE,UAHF,GAIE,0CALJ;AAOD;AACF,WAbH;AAcD;AACF;;AACD,aAAOhL,QAAP;AACD,KApDD,MAoDO;AACL,UAAM2L,WAAc,GAAI5N,MAAxB,CADK;AAGL;;AACAuN,MAAAA,WAAW,CAACJ,iBAAD,CAAX;;AACA,UAAIH,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA,YAAMK,MAAK,GAAGja,oBAAoB,CAACH,OAAnC;;AACA,YAAIoa,MAAK,KAAK,IAAd,EAAoB;AAClBC,UAAAA,aAAa,CAACD,MAAD,CAAb;AACAja,UAAAA,oBAAoB,CAACH,OAArB,GAA+B,IAA/B;AACD,SANsB;AAQvB;;;AACA,YAAMgP,SAAqB,GAAG;AAC5BC,UAAAA,IAD4B,YACvBwL,OADuB,EACdC,MADc,EACN;AACpB;AACA;AACA;AACA,gBAAIva,oBAAoB,CAACH,OAArB,KAAiC,IAArC,EAA2C;AACzC;AACAG,cAAAA,oBAAoB,CAACH,OAArB,GAA+B,EAA/B;AACA4a,cAAAA,4BAA4B,CAACD,WAAD,EAAcF,OAAd,EAAuBC,MAAvB,CAA5B;AACD,aAJD,MAIO;AACLD,cAAAA,OAAO,CAACE,WAAD,CAAP;AACD;AACF;AAZ2B,SAA9B;AAcA,eAAO3L,SAAP;AACD,OAxBD,MAwBO;AACL;AACA;AACA,YAAMA,UAAqB,GAAG;AAC5BC,UAAAA,IAD4B,YACvBwL,OADuB,EACdC,MADc,EACN;AACpBD,YAAAA,OAAO,CAACE,WAAD,CAAP;AACD;AAH2B,SAA9B;AAKA,eAAO3L,UAAP;AACD;AACF;AACF,GAtID;AAyID;;AAED,SAASsL,WAAT,CAAqBJ,iBAArB,EAAwC;AACtC,EAAa;AACX,QAAIA,iBAAiB,KAAKH,aAAa,GAAG,CAA1C,EAA6C;AAC3C,YACE,sEACE,iEAFJ;AAID;;AACDA,IAAAA,aAAa,GAAGG,iBAAhB;AACD;AACF;;AAED,SAASU,4BAAT,CACED,WADF,EAEEF,OAFF,EAGEC,MAHF,EAIE;AACA,EAAa;AACX,QAAMN,KAAK,GAAGja,oBAAoB,CAACH,OAAnC;;AACA,QAAIoa,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAI;AACFC,QAAAA,aAAa,CAACD,KAAD,CAAb;AACArB,QAAAA,WAAW,CAAC,YAAM;AAChB,cAAIqB,KAAK,CAAC3Q,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACAtJ,YAAAA,oBAAoB,CAACH,OAArB,GAA+B,IAA/B;AACAya,YAAAA,OAAO,CAACE,WAAD,CAAP;AACD,WAJD,MAIO;AACL;AACAC,YAAAA,4BAA4B,CAACD,WAAD,EAAcF,OAAd,EAAuBC,MAAvB,CAA5B;AACD;AACF,SATU,CAAX;AAUD,OAZD,CAYE,OAAOlZ,KAAP,EAAc;AACdkZ,QAAAA,MAAM,CAAClZ,KAAD,CAAN;AACD;AACF,KAhBD,MAgBO;AACLiZ,MAAAA,OAAO,CAACE,WAAD,CAAP;AACD;AACF;AACF;;AAED,IAAIG,UAAU,GAAG,KAAjB;;AACA,SAAST,aAAT,CAAuBD,KAAvB,EAA8B;AAC5B,EAAa;AACX,QAAI,CAACU,UAAL,EAAiB;AACf;AACAA,MAAAA,UAAU,GAAG,IAAb;AACA,UAAInR,CAAC,GAAG,CAAR;;AACA,UAAI;AACF,eAAOA,CAAC,GAAGyQ,KAAK,CAAC3Q,MAAjB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,cAAI1G,QAAQ,GAAGmX,KAAK,CAACzQ,CAAD,CAApB;;AACA,aAAG;AACD1G,YAAAA,QAAQ,GAAGA,QAAQ,CAAC,IAAD,CAAnB;AACD,WAFD,QAESA,QAAQ,KAAK,IAFtB;AAGD;;AACDmX,QAAAA,KAAK,CAAC3Q,MAAN,GAAe,CAAf;AACD,OARD,CAQE,OAAOjI,KAAP,EAAc;AACd;AACA4Y,QAAAA,KAAK,GAAGA,KAAK,CAAChB,KAAN,CAAYzP,CAAC,GAAG,CAAhB,CAAR;AACA,cAAMnI,KAAN;AACD,OAZD,SAYU;AACRsZ,QAAAA,UAAU,GAAG,KAAb;AACD;AACF;AACF;AACF;;ICvJK1R,eAAa,GAAG2R,CAAUxD,2BAAH;AAC7B,IAAMpN,cAAY,GAAG4Q,CAAUjD,0BAAH;AAC5B,IAAMkD,aAAa,GAAGD,CAAUnD,2BAAH;AAE7B,IAAMqD,QAAQ,GAAG;AACfrZ,EAAAA,GAAG,EAAHA,WADe;AAEfsZ,EAAAA,OAAO,EAAPA,eAFe;AAGflO,EAAAA,KAAK,EAALA,aAHe;AAIfM,EAAAA,OAAO,EAAPA,OAJe;AAKf6N,EAAAA,IAAI,EAAJA;AALe,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react.production.min.js b/node_modules/react/cjs/react.production.min.js
new file mode 100644
index 0000000..9ac47be
--- /dev/null
+++ b/node_modules/react/cjs/react.production.min.js
@@ -0,0 +1,1058 @@
+'use strict';
+
+// TODO: this is special because it gets imported during build.
+//
+// TODO: 18.0.0 has not been released to NPM;
+// It exists as a placeholder so that DevTools can support work tag changes between releases.
+// When we next publish a release, update the matching TODO in backend/renderer.js
+// TODO: This module is used both by the release scripts and to expose a version
+// at runtime. We should instead inject the version number as part of the build
+// process, and use the ReactVersions.js module as the single source of truth.
+var ReactVersion = '18.2.0';
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+const REACT_PORTAL_TYPE = Symbol.for('react.portal');
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+const REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+const REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+const REACT_CONTEXT_TYPE = Symbol.for('react.context');
+const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+const REACT_MEMO_TYPE = Symbol.for('react.memo');
+const REACT_LAZY_TYPE = Symbol.for('react.lazy');
+const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+const REACT_CACHE_TYPE = Symbol.for('react.cache');
+const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');
+const MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+const FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+/**
+ * This is the abstract API for an update queue.
+ */
+
+
+const ReactNoopUpdateQueue = {
+  /**
+   * Checks whether or not this composite component is mounted.
+   * @param {ReactClass} publicInstance The instance we want to test.
+   * @return {boolean} True if mounted, false otherwise.
+   * @protected
+   * @final
+   */
+  isMounted: function (publicInstance) {
+    return false;
+  },
+
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueForceUpdate: function (publicInstance, callback, callerName) {
+  },
+
+  /**
+   * Replaces all of the state. Always use this or `setState` to mutate state.
+   * You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} completeState Next state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+  },
+
+  /**
+   * Sets a subset of the state. This only exists because _pendingState is
+   * internal. This provides a merging strategy that is not available to deep
+   * properties which is confusing. TODO: Expose pendingState or don't use it
+   * during the merge.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} partialState Next partial state to be merged with state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} Name of the calling function in the public API.
+   * @internal
+   */
+  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+  }
+};
+
+const assign = Object.assign;
+
+const emptyObject = {};
+/**
+ * Base class helpers for the updating state of a component.
+ */
+
+
+function Component(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+  // renderer.
+
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+Component.prototype.isReactComponent = {};
+/**
+ * Sets a subset of the state. Always use this to mutate
+ * state. You should treat `this.state` as immutable.
+ *
+ * There is no guarantee that `this.state` will be immediately updated, so
+ * accessing `this.state` after calling this method may return the old value.
+ *
+ * There is no guarantee that calls to `setState` will run synchronously,
+ * as they may eventually be batched together.  You can provide an optional
+ * callback that will be executed when the call to setState is actually
+ * completed.
+ *
+ * When a function is provided to setState, it will be called at some point in
+ * the future (not synchronously). It will be called with the up to date
+ * component arguments (state, props, context). These values can be different
+ * from this.* because your function may be called after receiveProps but before
+ * shouldComponentUpdate, and this new state, props, and context will not yet be
+ * assigned to this.
+ *
+ * @param {object|function} partialState Next partial state or function to
+ *        produce next partial state to be merged with current state.
+ * @param {?function} callback Called after state is updated.
+ * @final
+ * @protected
+ */
+
+Component.prototype.setState = function (partialState, callback) {
+  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+  }
+
+  this.updater.enqueueSetState(this, partialState, callback, 'setState');
+};
+/**
+ * Forces an update. This should only be invoked when it is known with
+ * certainty that we are **not** in a DOM transaction.
+ *
+ * You may want to call this when you know that some deeper aspect of the
+ * component's state has changed but `setState` was not called.
+ *
+ * This will not invoke `shouldComponentUpdate`, but it will invoke
+ * `componentWillUpdate` and `componentDidUpdate`.
+ *
+ * @param {?function} callback Called after update is complete.
+ * @final
+ * @protected
+ */
+
+
+Component.prototype.forceUpdate = function (callback) {
+  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+};
+
+function ComponentDummy() {}
+
+ComponentDummy.prototype = Component.prototype;
+/**
+ * Convenience component with default shallow equality check for sCU.
+ */
+
+function PureComponent(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject;
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+const pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+assign(pureComponentPrototype, Component.prototype);
+pureComponentPrototype.isPureReactComponent = true;
+
+// an immutable object with a single mutable value
+function createRef() {
+  const refObject = {
+    current: null
+  };
+
+  return refObject;
+}
+
+const isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+/**
+ * Keeps track of the current owner.
+ *
+ * The current owner is the component who should own any components that are
+ * currently being constructed.
+ */
+const ReactCurrentOwner = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+const RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+
+function hasValidRef(config) {
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+
+  return config.key !== undefined;
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+const ReactElement = function (type, key, ref, self, source, owner, props) {
+  const element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  return element;
+};
+/**
+ * Create and return a new ReactElement of the given type.
+ * See https://reactjs.org/docs/react-api.html#createelement
+ */
+
+function createElement(type, config, children) {
+  let propName; // Reserved names are extracted
+
+  const props = {};
+  let key = null;
+  let ref = null;
+  let self = null;
+  let source = null;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      ref = config.ref;
+    }
+
+    if (hasValidKey(config)) {
+
+      key = '' + config.key;
+    }
+
+    self = config.__self === undefined ? null : config.__self;
+    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  const childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    const childArray = Array(childrenLength);
+
+    for (let i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    const defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+}
+/**
+ * Return a function that produces ReactElements of a given type.
+ * See https://reactjs.org/docs/react-api.html#createfactory
+ */
+
+function createFactory(type) {
+  const factory = createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be
+  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
+  // This should not be named `constructor` since this may not be the function
+  // that created the element, and it may not even be a constructor.
+  // Legacy hook: remove it
+
+  factory.type = type;
+  return factory;
+}
+function cloneAndReplaceKey(oldElement, newKey) {
+  const newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+  return newElement;
+}
+/**
+ * Clone and return a new ReactElement using element as the starting point.
+ * See https://reactjs.org/docs/react-api.html#cloneelement
+ */
+
+function cloneElement(element, config, children) {
+  if (element === null || element === undefined) {
+    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+  }
+
+  let propName; // Original props are copied
+
+  const props = assign({}, element.props); // Reserved names are extracted
+
+  let key = element.key;
+  let ref = element.ref; // Self is preserved since the owner is preserved.
+
+  const self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+  // transpiler, and the original source is probably a better indicator of the
+  // true owner.
+
+  const source = element._source; // Owner will be preserved, unless ref is overridden
+
+  let owner = element._owner;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      // Silently steal the ref from the parent.
+      ref = config.ref;
+      owner = ReactCurrentOwner.current;
+    }
+
+    if (hasValidKey(config)) {
+
+      key = '' + config.key;
+    } // Remaining properties override existing props
+
+
+    let defaultProps;
+
+    if (element.type && element.type.defaultProps) {
+      defaultProps = element.type.defaultProps;
+    }
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        if (config[propName] === undefined && defaultProps !== undefined) {
+          // Resolve default props
+          props[propName] = defaultProps[propName];
+        } else {
+          props[propName] = config[propName];
+        }
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  const childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    const childArray = Array(childrenLength);
+
+    for (let i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  }
+
+  return ReactElement(element.type, key, ref, self, source, owner, props);
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+function isValidElement(object) {
+  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+}
+
+const SEPARATOR = '.';
+const SUBSEPARATOR = ':';
+/**
+ * Escape and wrap key so it is safe to use as a reactid
+ *
+ * @param {string} key to be escaped.
+ * @return {string} the escaped key.
+ */
+
+function escape(key) {
+  const escapeRegex = /[=:]/g;
+  const escaperLookup = {
+    '=': '=0',
+    ':': '=2'
+  };
+  const escapedString = key.replace(escapeRegex, function (match) {
+    return escaperLookup[match];
+  });
+  return '$' + escapedString;
+}
+const userProvidedKeyEscapeRegex = /\/+/g;
+
+function escapeUserProvidedKey(text) {
+  return text.replace(userProvidedKeyEscapeRegex, '$&/');
+}
+/**
+ * Generate a key string that identifies a element within a set.
+ *
+ * @param {*} element A element that could contain a manual key.
+ * @param {number} index Index that is used if a manual key is not provided.
+ * @return {string}
+ */
+
+
+function getElementKey(element, index) {
+  // Do some typechecking here since we call this blindly. We want to ensure
+  // that we don't block potential future ES APIs.
+  if (typeof element === 'object' && element !== null && element.key != null) {
+
+    return escape('' + element.key);
+  } // Implicit key determined by the index in the set
+
+
+  return index.toString(36);
+}
+
+function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+  const type = typeof children;
+
+  if (type === 'undefined' || type === 'boolean') {
+    // All of the above are perceived as null.
+    children = null;
+  }
+
+  let invokeCallback = false;
+
+  if (children === null) {
+    invokeCallback = true;
+  } else {
+    switch (type) {
+      case 'string':
+      case 'number':
+        invokeCallback = true;
+        break;
+
+      case 'object':
+        switch (children.$$typeof) {
+          case REACT_ELEMENT_TYPE:
+          case REACT_PORTAL_TYPE:
+            invokeCallback = true;
+        }
+
+    }
+  }
+
+  if (invokeCallback) {
+    const child = children;
+    let mappedChild = callback(child); // If it's the only child, treat the name as if it was wrapped in an array
+    // so that it's consistent if the number of children grows:
+
+    const childKey = nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;
+
+    if (isArray(mappedChild)) {
+      let escapedChildKey = '';
+
+      if (childKey != null) {
+        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+      }
+
+      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);
+    } else if (mappedChild != null) {
+      if (isValidElement(mappedChild)) {
+
+        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+        // traverseAllChildren used to do for objects as children
+        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+        mappedChild.key && (!child || child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+      }
+
+      array.push(mappedChild);
+    }
+
+    return 1;
+  }
+
+  let child;
+  let nextName;
+  let subtreeCount = 0; // Count of children found in the current subtree.
+
+  const nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+  if (isArray(children)) {
+    for (let i = 0; i < children.length; i++) {
+      child = children[i];
+      nextName = nextNamePrefix + getElementKey(child, i);
+      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+    }
+  } else {
+    const iteratorFn = getIteratorFn(children);
+
+    if (typeof iteratorFn === 'function') {
+      const iterableChildren = children;
+
+      const iterator = iteratorFn.call(iterableChildren);
+      let step;
+      let ii = 0;
+
+      while (!(step = iterator.next()).done) {
+        child = step.value;
+        nextName = nextNamePrefix + getElementKey(child, ii++);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else if (type === 'object') {
+      // eslint-disable-next-line react-internal/safe-string-coercion
+      const childrenString = String(children);
+      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+    }
+  }
+
+  return subtreeCount;
+}
+
+/**
+ * Maps children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+ *
+ * The provided mapFunction(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} func The map function.
+ * @param {*} context Context for mapFunction.
+ * @return {object} Object containing the ordered map of results.
+ */
+function mapChildren(children, func, context) {
+  if (children == null) {
+    return children;
+  }
+
+  const result = [];
+  let count = 0;
+  mapIntoArray(children, result, '', '', function (child) {
+    return func.call(context, child, count++);
+  });
+  return result;
+}
+/**
+ * Count the number of children that are typically specified as
+ * `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrencount
+ *
+ * @param {?*} children Children tree container.
+ * @return {number} The number of children.
+ */
+
+
+function countChildren(children) {
+  let n = 0;
+  mapChildren(children, () => {
+    n++; // Don't return anything
+  });
+  return n;
+}
+
+/**
+ * Iterates through children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+ *
+ * The provided forEachFunc(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} forEachFunc
+ * @param {*} forEachContext Context for forEachContext.
+ */
+function forEachChildren(children, forEachFunc, forEachContext) {
+  mapChildren(children, function () {
+    forEachFunc.apply(this, arguments); // Don't return anything.
+  }, forEachContext);
+}
+/**
+ * Flatten a children object (typically specified as `props.children`) and
+ * return an array with appropriately re-keyed children.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+ */
+
+
+function toArray(children) {
+  return mapChildren(children, child => child) || [];
+}
+/**
+ * Returns the first child in a collection of children and verifies that there
+ * is only one child in the collection.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+ *
+ * The current implementation of this function assumes that a single child gets
+ * passed without a wrapper, but the purpose of this helper function is to
+ * abstract away the particular structure of children.
+ *
+ * @param {?object} children Child collection structure.
+ * @return {ReactElement} The first and only `ReactElement` contained in the
+ * structure.
+ */
+
+
+function onlyChild(children) {
+  if (!isValidElement(children)) {
+    throw new Error('React.Children.only expected to receive a single React element child.');
+  }
+
+  return children;
+}
+
+function createContext(defaultValue) {
+  // TODO: Second argument used to be an optional `calculateChangedBits`
+  // function. Warn to reserve for future use?
+  const context = {
+    $$typeof: REACT_CONTEXT_TYPE,
+    // As a workaround to support multiple concurrent renderers, we categorize
+    // some renderers as primary and others as secondary. We only expect
+    // there to be two concurrent renderers at most: React Native (primary) and
+    // Fabric (secondary); React DOM (primary) and React ART (secondary).
+    // Secondary renderers store their context values on separate fields.
+    _currentValue: defaultValue,
+    _currentValue2: defaultValue,
+    // Used to track how many concurrent renderers this context currently
+    // supports within in a single renderer. Such as parallel server rendering.
+    _threadCount: 0,
+    // These are circular
+    Provider: null,
+    Consumer: null,
+    // Add these to use same hidden class in VM as ServerContext
+    _defaultValue: null,
+    _globalName: null
+  };
+  context.Provider = {
+    $$typeof: REACT_PROVIDER_TYPE,
+    _context: context
+  };
+
+  {
+    context.Consumer = context;
+  }
+
+  return context;
+}
+
+const Uninitialized = -1;
+const Pending = 0;
+const Resolved = 1;
+const Rejected = 2;
+
+function lazyInitializer(payload) {
+  if (payload._status === Uninitialized) {
+    const ctor = payload._result;
+    const thenable = ctor(); // Transition to the next state.
+    // This might throw either because it's missing or throws. If so, we treat it
+    // as still uninitialized and try again next time. Which is the same as what
+    // happens if the ctor or any wrappers processing the ctor throws. This might
+    // end up fixing it if the resolution was a concurrency bug.
+
+    thenable.then(moduleObject => {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        const resolved = payload;
+        resolved._status = Resolved;
+        resolved._result = moduleObject;
+      }
+    }, error => {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        const rejected = payload;
+        rejected._status = Rejected;
+        rejected._result = error;
+      }
+    });
+
+    if (payload._status === Uninitialized) {
+      // In case, we're still uninitialized, then we're waiting for the thenable
+      // to resolve. Set it as pending in the meantime.
+      const pending = payload;
+      pending._status = Pending;
+      pending._result = thenable;
+    }
+  }
+
+  if (payload._status === Resolved) {
+    const moduleObject = payload._result;
+
+    return moduleObject.default;
+  } else {
+    throw payload._result;
+  }
+}
+
+function lazy(ctor) {
+  const payload = {
+    // We use these fields to store the result.
+    _status: Uninitialized,
+    _result: ctor
+  };
+  const lazyType = {
+    $$typeof: REACT_LAZY_TYPE,
+    _payload: payload,
+    _init: lazyInitializer
+  };
+
+  return lazyType;
+}
+
+function forwardRef(render) {
+
+  const elementType = {
+    $$typeof: REACT_FORWARD_REF_TYPE,
+    render
+  };
+
+  return elementType;
+}
+
+function memo(type, compare) {
+
+  const elementType = {
+    $$typeof: REACT_MEMO_TYPE,
+    type,
+    compare: compare === undefined ? null : compare
+  };
+
+  return elementType;
+}
+
+/**
+ * Keeps track of the current dispatcher.
+ */
+const ReactCurrentDispatcher = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+function resolveDispatcher() {
+  const dispatcher = ReactCurrentDispatcher.current;
+  // intentionally don't throw our own error because this is in a hot path.
+  // Also helps ensure this is inlined.
+
+
+  return dispatcher;
+}
+
+function getCacheSignal() {
+  const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheSignal();
+}
+function getCacheForType(resourceType) {
+  const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheForType(resourceType);
+}
+function useContext(Context) {
+  const dispatcher = resolveDispatcher();
+
+  return dispatcher.useContext(Context);
+}
+function useState(initialState) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useState(initialState);
+}
+function useReducer(reducer, initialArg, init) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useReducer(reducer, initialArg, init);
+}
+function useRef(initialValue) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useRef(initialValue);
+}
+function useEffect(create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useEffect(create, deps);
+}
+function useInsertionEffect(create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useInsertionEffect(create, deps);
+}
+function useLayoutEffect(create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useLayoutEffect(create, deps);
+}
+function useCallback(callback, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useCallback(callback, deps);
+}
+function useMemo(create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useMemo(create, deps);
+}
+function useImperativeHandle(ref, create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useImperativeHandle(ref, create, deps);
+}
+function useDebugValue(value, formatterFn) {
+}
+function useTransition() {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useTransition();
+}
+function useDeferredValue(value) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useDeferredValue(value);
+}
+function useId() {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useId();
+}
+function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
+}
+function useCacheRefresh() {
+  const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.useCacheRefresh();
+}
+
+/**
+ * Keeps track of the current batch's configuration such as how long an update
+ * should suspend for if it needs to.
+ */
+const ReactCurrentBatchConfig = {
+  transition: null
+};
+
+const ContextRegistry = {};
+
+const ReactSharedInternals = {
+  ReactCurrentDispatcher,
+  ReactCurrentBatchConfig,
+  ReactCurrentOwner
+};
+
+{
+  ReactSharedInternals.ContextRegistry = ContextRegistry;
+}
+
+const ContextRegistry$1 = ReactSharedInternals.ContextRegistry;
+function createServerContext(globalName, defaultValue) {
+
+  let wasDefined = true;
+
+  if (!ContextRegistry$1[globalName]) {
+    wasDefined = false;
+    const context = {
+      $$typeof: REACT_SERVER_CONTEXT_TYPE,
+      // As a workaround to support multiple concurrent renderers, we categorize
+      // some renderers as primary and others as secondary. We only expect
+      // there to be two concurrent renderers at most: React Native (primary) and
+      // Fabric (secondary); React DOM (primary) and React ART (secondary).
+      // Secondary renderers store their context values on separate fields.
+      _currentValue: defaultValue,
+      _currentValue2: defaultValue,
+      _defaultValue: defaultValue,
+      // Used to track how many concurrent renderers this context currently
+      // supports within in a single renderer. Such as parallel server rendering.
+      _threadCount: 0,
+      // These are circular
+      Provider: null,
+      Consumer: null,
+      _globalName: globalName
+    };
+    context.Provider = {
+      $$typeof: REACT_PROVIDER_TYPE,
+      _context: context
+    };
+
+    ContextRegistry$1[globalName] = context;
+  }
+
+  const context = ContextRegistry$1[globalName];
+
+  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+    context._defaultValue = defaultValue;
+
+    if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._currentValue = defaultValue;
+    }
+
+    if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._currentValue2 = defaultValue;
+    }
+  } else if (wasDefined) {
+    throw new Error("ServerContext: " + globalName + " already defined");
+  }
+
+  return context;
+}
+
+function startTransition(scope, options) {
+  const prevTransition = ReactCurrentBatchConfig.transition;
+  ReactCurrentBatchConfig.transition = {};
+
+  try {
+    scope();
+  } finally {
+    ReactCurrentBatchConfig.transition = prevTransition;
+  }
+}
+
+function act(callback) {
+  {
+    throw new Error('act(...) is not supported in production builds of React.');
+  }
+}
+
+const createElement$1 =  createElement;
+const cloneElement$1 =  cloneElement;
+const createFactory$1 =  createFactory;
+const Children = {
+  map: mapChildren,
+  forEach: forEachChildren,
+  count: countChildren,
+  toArray,
+  only: onlyChild
+};
+
+exports.Children = Children;
+exports.Component = Component;
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.Profiler = REACT_PROFILER_TYPE;
+exports.PureComponent = PureComponent;
+exports.StrictMode = REACT_STRICT_MODE_TYPE;
+exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
+exports.cloneElement = cloneElement$1;
+exports.createContext = createContext;
+exports.createElement = createElement$1;
+exports.createFactory = createFactory$1;
+exports.createRef = createRef;
+exports.createServerContext = createServerContext;
+exports.forwardRef = forwardRef;
+exports.isValidElement = isValidElement;
+exports.lazy = lazy;
+exports.memo = memo;
+exports.startTransition = startTransition;
+exports.unstable_Cache = REACT_CACHE_TYPE;
+exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+exports.unstable_Offscreen = REACT_OFFSCREEN_TYPE;
+exports.unstable_act = act;
+exports.unstable_getCacheForType = getCacheForType;
+exports.unstable_getCacheSignal = getCacheSignal;
+exports.unstable_useCacheRefresh = useCacheRefresh;
+exports.useCallback = useCallback;
+exports.useContext = useContext;
+exports.useDebugValue = useDebugValue;
+exports.useDeferredValue = useDeferredValue;
+exports.useEffect = useEffect;
+exports.useId = useId;
+exports.useImperativeHandle = useImperativeHandle;
+exports.useInsertionEffect = useInsertionEffect;
+exports.useLayoutEffect = useLayoutEffect;
+exports.useMemo = useMemo;
+exports.useReducer = useReducer;
+exports.useRef = useRef;
+exports.useState = useState;
+exports.useSyncExternalStore = useSyncExternalStore;
+exports.useTransition = useTransition;
+exports.version = ReactVersion;
+//# sourceMappingURL=react.production.min.js.map
diff --git a/node_modules/react/cjs/react.production.min.js.map b/node_modules/react/cjs/react.production.min.js.map
new file mode 100644
index 0000000..3976ab1
--- /dev/null
+++ b/node_modules/react/cjs/react.production.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.production.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactAct.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","startTransition","scope","options","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":";;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAe,QAAf;;ACNA;AACA;AACA;AAEA;AACA,AAAO,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,AAAO,MAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;AACP,MAAaE,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,MAAaG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,MAAaI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,AAAO,MAAMK,mBAAmB,GAAGN,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,AAAO,MAAMM,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,AAAO,MAAMO,yBAAyB,GAAGR,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAlC;AACP,AAAO,MAAMQ,sBAAsB,GAAGT,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,MAAaS,mBAAmB,GAAGV,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,MAAaU,wBAAwB,GAAGX,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACP,AAAO,MAAMW,eAAe,GAAGZ,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,AAAO,MAAMY,eAAe,GAAGb,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,MACaa,6BAA6B,GAAGd,MAAM,CAACC,GAAP,CAC3C,wBAD2C,CAAtC;AAGP,MAAac,oBAAoB,GAAGf,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA7B;AACP,MACae,gBAAgB,GAAGhB,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AACP,AACO,MAAMgB,6CAA6C,GAAGjB,MAAM,CAACC,GAAP,CAC3D,qBAD2D,CAAtD;AAIP,MAAMiB,qBAAqB,GAAGlB,MAAM,CAACmB,QAArC;AACA,MAAMC,oBAAoB,GAAG,YAA7B;AAEA,AAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;AACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,WAAO,IAAP;AACD;;AACD,QAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;AAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOA,aAAP;AACD;;AACD,SAAO,IAAP;AACD;;ACtBD;;;;;AAGA,MAAMC,oBAAoB,GAAG;AAC3B;;;;;;;AAOAC,EAAAA,SAAS,EAAE,UAASC,cAAT,EAAyB;AAClC,WAAO,KAAP;AACD,GAV0B;;AAY3B;;;;;;;;;;;;;;;AAeAC,EAAAA,kBAAkB,EAAE,UAASD,cAAT,EAAyBE,QAAzB,EAAmCC,UAAnC,EAA+C;AACjEC,AACD,GA7B0B;;AA+B3B;;;;;;;;;;;;;AAaAC,EAAAA,mBAAmB,EAAE,UACnBL,cADmB,EAEnBM,aAFmB,EAGnBJ,QAHmB,EAInBC,UAJmB,EAKnB;AACAC,AACD,GAnD0B;;AAqD3B;;;;;;;;;;;;AAYAG,EAAAA,eAAe,EAAE,UACfP,cADe,EAEfQ,YAFe,EAGfN,QAHe,EAIfC,UAJe,EAKf;AACAC,AACD;AAxE0B,CAA7B;;ACzBA,MAAMK,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ACCA,MAAME,WAAW,GAAG,EAApB;AAKA;;;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AAC1C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF0C;;AAI1C,OAAKE,IAAL,GAAYL,WAAZ,CAJ0C;AAM1C;;AACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;AACD;;AAEDc,SAAS,CAACK,SAAV,CAAoBC,gBAApB,GAAuC,EAAvC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAN,SAAS,CAACK,SAAV,CAAoBE,QAApB,GAA+B,UAASX,YAAT,EAAuBN,QAAvB,EAAiC;AAC9D,MACE,OAAOM,YAAP,KAAwB,QAAxB,IACA,OAAOA,YAAP,KAAwB,UADxB,IAEAA,YAAY,IAAI,IAHlB,EAIE;AACA,UAAM,IAAIY,KAAJ,CACJ,sEACE,sDAFE,CAAN;AAID;;AAED,OAAKL,OAAL,CAAaR,eAAb,CAA6B,IAA7B,EAAmCC,YAAnC,EAAiDN,QAAjD,EAA2D,UAA3D;AACD,CAbD;AAeA;;;;;;;;;;;;;;;;AAcAU,SAAS,CAACK,SAAV,CAAoBI,WAApB,GAAkC,UAASnB,QAAT,EAAmB;AACnD,OAAKa,OAAL,CAAad,kBAAb,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgD,aAAhD;AACD,CAFD;AAIA;AAqCA,SAASoB,cAAT,GAA0B;;AAC1BA,cAAc,CAACL,SAAf,GAA2BL,SAAS,CAACK,SAArC;AAEA;;;;AAGA,SAASM,aAAT,CAAuBV,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AAC9C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF8C;;AAI9C,OAAKE,IAAL,GAAYL,WAAZ;AACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;AACD;;AAED,MAAM0B,sBAAsB,GAAID,aAAa,CAACN,SAAd,GAA0B,IAAIK,cAAJ,EAA1D;AACAE,sBAAsB,CAACC,WAAvB,GAAqCF,aAArC;;AAEAd,MAAM,CAACe,sBAAD,EAAyBZ,SAAS,CAACK,SAAnC,CAAN;AACAO,sBAAsB,CAACE,oBAAvB,GAA8C,IAA9C;;ACrIA;AACA,AAAO,SAASC,SAAT,GAAgC;AACrC,QAAMC,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAE;AADO,GAAlB;;AAMA,SAAOD,SAAP;AACD;;ACRD,MAAME,WAAW,GAAGC,KAAK,CAACC,OAA1B;;AAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;AAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;AACD;;ACPD,MAAMC,cAAc,GAAGxB,MAAM,CAACO,SAAP,CAAiBiB,cAAxC;;ACEA;;;;;;AAMA,MAAMC,iBAAiB,GAAG;AACxB;;;;AAIAN,EAAAA,OAAO,EAAG;AALc,CAA1B;;ACFA,MAAMO,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,IADgB;AAErBC,EAAAA,GAAG,EAAE,IAFgB;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA;AAQA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACJ,GAAP,KAAeK,SAAtB;AACD;;AAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACL,GAAP,KAAeM,SAAtB;AACD;AA2ED;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAME,YAAY,GAAG,UAASC,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,EAAqD;AACxE,QAAMqC,OAAO,GAAG;AACd;AACAC,IAAAA,QAAQ,EAAE9E,kBAFI;AAId;AACAyE,IAAAA,IAAI,EAAEA,IALQ;AAMdT,IAAAA,GAAG,EAAEA,GANS;AAOdC,IAAAA,GAAG,EAAEA,GAPS;AAQdzB,IAAAA,KAAK,EAAEA,KARO;AAUd;AACAuC,IAAAA,MAAM,EAAEH;AAXM,GAAhB;;AAoDA,SAAOC,OAAP;AACD,CAtDD;AAwDA,AA0JA;;;;;AAIA,AAAO,SAASG,aAAT,CAAuBP,IAAvB,EAA6BJ,MAA7B,EAAqCY,QAArC,EAA+C;AACpD,MAAIC,QAAJ,CADoD;;AAIpD,QAAM1C,KAAK,GAAG,EAAd;AAEA,MAAIwB,GAAG,GAAG,IAAV;AACA,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIS,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIN,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AAKD;;AACD,QAAIM,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;AAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;AACD;;AAEDU,IAAAA,IAAI,GAAGL,MAAM,CAACH,MAAP,KAAkBI,SAAlB,GAA8B,IAA9B,GAAqCD,MAAM,CAACH,MAAnD;AACAS,IAAAA,MAAM,GAAGN,MAAM,CAACF,QAAP,KAAoBG,SAApB,GAAgC,IAAhC,GAAuCD,MAAM,CAACF,QAAvD,CAhBkB;;AAkBlB,SAAKe,QAAL,IAAiBb,MAAjB,EAAyB;AACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;AACA1C,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;AACD;AACF;AACF,GArCmD;AAwCpD;;;AACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;AACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;AAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;AACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;AACD;;AAMDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;AACD,GAvDmD;;;AA0DpD,MAAId,IAAI,IAAIA,IAAI,CAACgB,YAAjB,EAA+B;AAC7B,UAAMA,YAAY,GAAGhB,IAAI,CAACgB,YAA1B;;AACA,SAAKP,QAAL,IAAiBO,YAAjB,EAA+B;AAC7B,UAAIjD,KAAK,CAAC0C,QAAD,CAAL,KAAoBZ,SAAxB,EAAmC;AACjC9B,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;AACD;AACF;AACF;;AAeD,SAAOV,YAAY,CACjBC,IADiB,EAEjBT,GAFiB,EAGjBC,GAHiB,EAIjBS,IAJiB,EAKjBC,MALiB,EAMjBb,iBAAiB,CAACN,OAND,EAOjBhB,KAPiB,CAAnB;AASD;AAED;;;;;AAIA,AAAO,SAASkD,aAAT,CAAuBjB,IAAvB,EAA6B;AAClC,QAAMkB,OAAO,GAAGX,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyBnB,IAAzB,CAAhB,CADkC;AAGlC;AACA;AACA;AACA;;AACAkB,EAAAA,OAAO,CAAClB,IAAR,GAAeA,IAAf;AACA,SAAOkB,OAAP;AACD;AAED,AAAO,SAASE,kBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;AACrD,QAAMC,UAAU,GAAGxB,YAAY,CAC7BsB,UAAU,CAACrB,IADkB,EAE7BsB,MAF6B,EAG7BD,UAAU,CAAC7B,GAHkB,EAI7B6B,UAAU,CAACG,KAJkB,EAK7BH,UAAU,CAACI,OALkB,EAM7BJ,UAAU,CAACf,MANkB,EAO7Be,UAAU,CAACtD,KAPkB,CAA/B;AAUA,SAAOwD,UAAP;AACD;AAED;;;;;AAIA,AAAO,SAASG,YAAT,CAAsBtB,OAAtB,EAA+BR,MAA/B,EAAuCY,QAAvC,EAAiD;AACtD,MAAIJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKP,SAApC,EAA+C;AAC7C,UAAM,IAAIvB,KAAJ,oFAC6E8B,OAD7E,OAAN;AAGD;;AAED,MAAIK,QAAJ,CAPsD;;AAUtD,QAAM1C,KAAK,GAAGJ,MAAM,CAAC,EAAD,EAAKyC,OAAO,CAACrC,KAAb,CAApB,CAVsD;;AAatD,MAAIwB,GAAG,GAAGa,OAAO,CAACb,GAAlB;AACA,MAAIC,GAAG,GAAGY,OAAO,CAACZ,GAAlB,CAdsD;;AAgBtD,QAAMS,IAAI,GAAGG,OAAO,CAACoB,KAArB,CAhBsD;AAkBtD;AACA;;AACA,QAAMtB,MAAM,GAAGE,OAAO,CAACqB,OAAvB,CApBsD;;AAuBtD,MAAItB,KAAK,GAAGC,OAAO,CAACE,MAApB;;AAEA,MAAIV,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvB;AACAJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AACAW,MAAAA,KAAK,GAAGd,iBAAiB,CAACN,OAA1B;AACD;;AACD,QAAIe,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;AAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;AACD,KAXiB;;;AAclB,QAAIyB,YAAJ;;AACA,QAAIZ,OAAO,CAACJ,IAAR,IAAgBI,OAAO,CAACJ,IAAR,CAAagB,YAAjC,EAA+C;AAC7CA,MAAAA,YAAY,GAAGZ,OAAO,CAACJ,IAAR,CAAagB,YAA5B;AACD;;AACD,SAAKP,QAAL,IAAiBb,MAAjB,EAAyB;AACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;AACA,YAAIb,MAAM,CAACa,QAAD,CAAN,KAAqBZ,SAArB,IAAkCmB,YAAY,KAAKnB,SAAvD,EAAkE;AAChE;AACA9B,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;AACD,SAHD,MAGO;AACL1C,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;AACD;AACF;AACF;AACF,GAxDqD;AA2DtD;;;AACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;AACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;AAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;AACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;AACD;;AACDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;AACD;;AAED,SAAOf,YAAY,CAACK,OAAO,CAACJ,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,CAAnB;AACD;AAED;;;;;;;;AAOA,AAAO,SAAS4D,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAACvB,QAAP,KAAoB9E,kBAHtB;AAKD;;ACviBD,MAAMsG,SAAS,GAAG,GAAlB;AACA,MAAMC,YAAY,GAAG,GAArB;AAEA;;;;;;;AAMA,SAASC,MAAT,CAAgBxC,GAAhB,EAAqC;AACnC,QAAMyC,WAAW,GAAG,OAApB;AACA,QAAMC,aAAa,GAAG;AACpB,SAAK,IADe;AAEpB,SAAK;AAFe,GAAtB;AAIA,QAAMC,aAAa,GAAG3C,GAAG,CAAC4C,OAAJ,CAAYH,WAAZ,EAAyB,UAASI,KAAT,EAAgB;AAC7D,WAAOH,aAAa,CAACG,KAAD,CAApB;AACD,GAFqB,CAAtB;AAIA,SAAO,MAAMF,aAAb;AACD;AAED,AAOA,MAAMG,0BAA0B,GAAG,MAAnC;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;AACnD,SAAOA,IAAI,CAACJ,OAAL,CAAaE,0BAAb,EAAyC,KAAzC,CAAP;AACD;AAED;;;;;;;;;AAOA,SAASG,aAAT,CAAuBpC,OAAvB,EAAqCqC,KAArC,EAA4D;AAC1D;AACA;AACA,MAAI,OAAOrC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmDA,OAAO,CAACb,GAAR,IAAe,IAAtE,EAA4E;AAC1E;AAIA,WAAOwC,MAAM,CAAC,KAAK3B,OAAO,CAACb,GAAd,CAAb;AACD,GATyD;;;AAW1D,SAAOkD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAP;AACD;;AAED,SAASC,YAAT,CACEnC,QADF,EAEEoC,KAFF,EAGEC,aAHF,EAIEC,SAJF,EAKE1F,QALF,EAMU;AACR,QAAM4C,IAAI,GAAG,OAAOQ,QAApB;;AAEA,MAAIR,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAArC,EAAgD;AAC9C;AACAQ,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAIuC,cAAc,GAAG,KAArB;;AAEA,MAAIvC,QAAQ,KAAK,IAAjB,EAAuB;AACrBuC,IAAAA,cAAc,GAAG,IAAjB;AACD,GAFD,MAEO;AACL,YAAQ/C,IAAR;AACE,WAAK,QAAL;AACA,WAAK,QAAL;AACE+C,QAAAA,cAAc,GAAG,IAAjB;AACA;;AACF,WAAK,QAAL;AACE,gBAASvC,QAAD,CAAgBH,QAAxB;AACE,eAAK9E,kBAAL;AACA,eAAKG,iBAAL;AACEqH,YAAAA,cAAc,GAAG,IAAjB;AAHJ;;AANJ;AAYD;;AAED,MAAIA,cAAJ,EAAoB;AAClB,UAAMC,KAAK,GAAGxC,QAAd;AACA,QAAIyC,WAAW,GAAG7F,QAAQ,CAAC4F,KAAD,CAA1B,CAFkB;AAIlB;;AACA,UAAME,QAAQ,GACZJ,SAAS,KAAK,EAAd,GAAmBjB,SAAS,GAAGW,aAAa,CAACQ,KAAD,EAAQ,CAAR,CAA5C,GAAyDF,SAD3D;;AAEA,QAAI5D,OAAO,CAAC+D,WAAD,CAAX,EAA0B;AACxB,UAAIE,eAAe,GAAG,EAAtB;;AACA,UAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpBC,QAAAA,eAAe,GAAGb,qBAAqB,CAACY,QAAD,CAArB,GAAkC,GAApD;AACD;;AACDP,MAAAA,YAAY,CAACM,WAAD,EAAcL,KAAd,EAAqBO,eAArB,EAAsC,EAAtC,EAA0CC,CAAC,IAAIA,CAA/C,CAAZ;AACD,KAND,MAMO,IAAIH,WAAW,IAAI,IAAnB,EAAyB;AAC9B,UAAItB,cAAc,CAACsB,WAAD,CAAlB,EAAiC;AAC/B;AAQAA,QAAAA,WAAW,GAAG7B,kBAAkB,CAC9B6B,WAD8B;AAG9B;AACAJ,QAAAA,aAAa;AAEVI,QAAAA,WAAW,CAAC1D,GAAZ,KAAoB,CAACyD,KAAD,IAAUA,KAAK,CAACzD,GAAN,KAAc0D,WAAW,CAAC1D,GAAxD;AAEG;AACA+C,QAAAA,qBAAqB,CAAC,KAAKW,WAAW,CAAC1D,GAAlB,CAArB,GAA8C,GAHjD,GAIG,EANO,CAAb,GAOE2D,QAX4B,CAAhC;AAaD;;AACDN,MAAAA,KAAK,CAACS,IAAN,CAAWJ,WAAX;AACD;;AACD,WAAO,CAAP;AACD;;AAED,MAAID,KAAJ;AACA,MAAIM,QAAJ;AACA,MAAIC,YAAY,GAAG,CAAnB,CAvEQ;;AAwER,QAAMC,cAAc,GAClBV,SAAS,KAAK,EAAd,GAAmBjB,SAAnB,GAA+BiB,SAAS,GAAGhB,YAD7C;;AAGA,MAAI5C,OAAO,CAACsB,QAAD,CAAX,EAAuB;AACrB,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACK,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxCiC,MAAAA,KAAK,GAAGxC,QAAQ,CAACO,CAAD,CAAhB;AACAuC,MAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQjC,CAAR,CAAzC;AACAwC,MAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;AAOD;AACF,GAZD,MAYO;AACL,UAAMqG,UAAU,GAAG5G,aAAa,CAAC2D,QAAD,CAAhC;;AACA,QAAI,OAAOiD,UAAP,KAAsB,UAA1B,EAAsC;AACpC,YAAMC,gBAEL,GAAIlD,QAFL;;AAiBA,YAAM7D,QAAQ,GAAG8G,UAAU,CAAC/C,IAAX,CAAgBgD,gBAAhB,CAAjB;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAE,GAAG,CAAT;;AACA,aAAO,CAAC,CAACD,IAAI,GAAGhH,QAAQ,CAACkH,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrCd,QAAAA,KAAK,GAAGW,IAAI,CAACI,KAAb;AACAT,QAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQY,EAAE,EAAV,CAAzC;AACAL,QAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;AAOD;AACF,KAhCD,MAgCO,IAAI4C,IAAI,KAAK,QAAb,EAAuB;AAC5B;AACA,YAAMgE,cAAc,GAAGC,MAAM,CAAEzD,QAAF,CAA7B;AAEA,YAAM,IAAIlC,KAAJ,CACJ,qDACE0F,cAAc,KAAK,iBAAnB,GACI,uBACApG,MAAM,CAACsG,IAAP,CAAa1D,QAAb,EAA6B2D,IAA7B,CAAkC,IAAlC,CADA,GAEA,GAHJ,GAIIH,cALN,YAOE,gEAPF,GAQE,UATE,CAAN;AAWD;AACF;;AAED,SAAOT,YAAP;AACD;;AAID;;;;;;;;;;;;;AAaA,SAASa,WAAT,CACE5D,QADF,EAEE6D,IAFF,EAGErG,OAHF,EAIsB;AACpB,MAAIwC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,QAAM8D,MAAM,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA5B,EAAAA,YAAY,CAACnC,QAAD,EAAW8D,MAAX,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,UAAStB,KAAT,EAAgB;AACrD,WAAOqB,IAAI,CAAC3D,IAAL,CAAU1C,OAAV,EAAmBgF,KAAnB,EAA0BuB,KAAK,EAA/B,CAAP;AACD,GAFW,CAAZ;AAGA,SAAOD,MAAP;AACD;AAED;;;;;;;;;;;AASA,SAASE,aAAT,CAAuBhE,QAAvB,EAAyD;AACvD,MAAIiE,CAAC,GAAG,CAAR;AACAL,EAAAA,WAAW,CAAC5D,QAAD,EAAW,MAAM;AAC1BiE,IAAAA,CAAC,GADyB;AAG3B,GAHU,CAAX;AAIA,SAAOA,CAAP;AACD;;AAID;;;;;;;;;;;;AAYA,SAASC,eAAT,CACElE,QADF,EAEEmE,WAFF,EAGEC,cAHF,EAIQ;AACNR,EAAAA,WAAW,CACT5D,QADS,EAET,YAAW;AACTmE,IAAAA,WAAW,CAACE,KAAZ,CAAkB,IAAlB,EAAwBjE,SAAxB,EADS;AAGV,GALQ,EAMTgE,cANS,CAAX;AAQD;AAED;;;;;;;;AAMA,SAASE,OAAT,CAAiBtE,QAAjB,EAA8D;AAC5D,SAAO4D,WAAW,CAAC5D,QAAD,EAAWwC,KAAK,IAAIA,KAApB,CAAX,IAAyC,EAAhD;AACD;AAED;;;;;;;;;;;;;;;;AAcA,SAAS+B,SAAT,CAAsBvE,QAAtB,EAAsC;AACpC,MAAI,CAACmB,cAAc,CAACnB,QAAD,CAAnB,EAA+B;AAC7B,UAAM,IAAIlC,KAAJ,CACJ,uEADI,CAAN;AAGD;;AAED,SAAOkC,QAAP;AACD;;ACjUM,SAASwE,aAAT,CAA0BC,YAA1B,EAA4D;AACjE;AACA;AAEA,QAAMjH,OAAwB,GAAG;AAC/BqC,IAAAA,QAAQ,EAAEtE,kBADqB;AAE/B;AACA;AACA;AACA;AACA;AACAmJ,IAAAA,aAAa,EAAED,YAPgB;AAQ/BE,IAAAA,cAAc,EAAEF,YARe;AAS/B;AACA;AACAG,IAAAA,YAAY,EAAE,CAXiB;AAY/B;AACAC,IAAAA,QAAQ,EAAG,IAboB;AAc/BC,IAAAA,QAAQ,EAAG,IAdoB;AAgB/B;AACAC,IAAAA,aAAa,EAAG,IAjBe;AAkB/BC,IAAAA,WAAW,EAAG;AAlBiB,GAAjC;AAqBAxH,EAAAA,OAAO,CAACqH,QAAR,GAAmB;AACjBhF,IAAAA,QAAQ,EAAEvE,mBADO;AAEjB2J,IAAAA,QAAQ,EAAEzH;AAFO,GAAnB;AAKA;AAIA,EA+EO;AACLA,IAAAA,OAAO,CAACsH,QAAR,GAAmBtH,OAAnB;AACD;;AAOD,SAAOA,OAAP;AACD;;AC3HD,MAAM0H,aAAa,GAAG,CAAC,CAAvB;AACA,MAAMC,OAAO,GAAG,CAAhB;AACA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAG,CAAjB;;AAkCA,SAASC,eAAT,CAA4BC,OAA5B,EAAoD;AAClD,MAAIA,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;AACrC,UAAMO,IAAI,GAAGF,OAAO,CAACG,OAArB;AACA,UAAMC,QAAQ,GAAGF,IAAI,EAArB,CAFqC;AAIrC;AACA;AACA;AACA;;AACAE,IAAAA,QAAQ,CAACC,IAAT,CACEC,YAAY,IAAI;AACd,UAAIN,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;AACpE;AACA,cAAMY,QAA4B,GAAIP,OAAtC;AACAO,QAAAA,QAAQ,CAACN,OAAT,GAAmBJ,QAAnB;AACAU,QAAAA,QAAQ,CAACJ,OAAT,GAAmBG,YAAnB;AACD;AACF,KARH,EASEE,KAAK,IAAI;AACP,UAAIR,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;AACpE;AACA,cAAMc,QAAyB,GAAIT,OAAnC;AACAS,QAAAA,QAAQ,CAACR,OAAT,GAAmBH,QAAnB;AACAW,QAAAA,QAAQ,CAACN,OAAT,GAAmBK,KAAnB;AACD;AACF,KAhBH;;AAkBA,QAAIR,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;AACrC;AACA;AACA,YAAMe,OAAuB,GAAIV,OAAjC;AACAU,MAAAA,OAAO,CAACT,OAAR,GAAkBL,OAAlB;AACAc,MAAAA,OAAO,CAACP,OAAR,GAAkBC,QAAlB;AACD;AACF;;AACD,MAAIJ,OAAO,CAACC,OAAR,KAAoBJ,QAAxB,EAAkC;AAChC,UAAMS,YAAY,GAAGN,OAAO,CAACG,OAA7B;;AA4BA,WAAOG,YAAY,CAACK,OAApB;AACD,GA9BD,MA8BO;AACL,UAAMX,OAAO,CAACG,OAAd;AACD;AACF;;AAED,AAAO,SAASS,IAAT,CACLV,IADK,EAEyB;AAC9B,QAAMF,OAAmB,GAAG;AAC1B;AACAC,IAAAA,OAAO,EAAEN,aAFiB;AAG1BQ,IAAAA,OAAO,EAAED;AAHiB,GAA5B;AAMA,QAAMW,QAAsC,GAAG;AAC7CvG,IAAAA,QAAQ,EAAEhE,eADmC;AAE7CwK,IAAAA,QAAQ,EAAEd,OAFmC;AAG7Ce,IAAAA,KAAK,EAAEhB;AAHsC,GAA/C;;AAqDA,SAAOc,QAAP;AACD;;AC9KM,SAASG,UAAT,CACLC,MADK,EAEL;AACA;AAiCA,QAAMC,WAAW,GAAG;AAClB5G,IAAAA,QAAQ,EAAEpE,sBADQ;AAElB+K,IAAAA;AAFkB,GAApB;;AA4BA,SAAOC,WAAP;AACD;;AC/DM,SAASC,IAAT,CACLlH,IADK,EAELmH,OAFK,EAGL;AACA;AASA,QAAMF,WAAW,GAAG;AAClB5G,IAAAA,QAAQ,EAAEjE,eADQ;AAElB4D,IAAAA,IAFkB;AAGlBmH,IAAAA,OAAO,EAAEA,OAAO,KAAKtH,SAAZ,GAAwB,IAAxB,GAA+BsH;AAHtB,GAApB;;AA6BA,SAAOF,WAAP;AACD;;AC3CD;;;AAGA,MAAMG,sBAAsB,GAAG;AAC7B;;;;AAIArI,EAAAA,OAAO,EAAG;AALmB,CAA/B;;ACSA,SAASsI,iBAAT,GAA6B;AAC3B,QAAMC,UAAU,GAAGF,sBAAsB,CAACrI,OAA1C;AAcA;AACA;;;AACA,SAASuI,UAAT;AACD;;AAED,AAAO,SAASC,cAAT,GAAuC;AAC5C,QAAMD,UAAU,GAAGD,iBAAiB,EAApC,CAD4C;;AAG5C,SAAOC,UAAU,CAACC,cAAX,EAAP;AACD;AAED,AAAO,SAASC,eAAT,CAA4BC,YAA5B,EAAsD;AAC3D,QAAMH,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;AAG3D,SAAOC,UAAU,CAACE,eAAX,CAA2BC,YAA3B,CAAP;AACD;AAED,AAAO,SAASC,UAAT,CAAuBC,OAAvB,EAAoD;AACzD,QAAML,UAAU,GAAGD,iBAAiB,EAApC;;AAoBA,SAAOC,UAAU,CAACI,UAAX,CAAsBC,OAAtB,CAAP;AACD;AAED,AAAO,SAASC,QAAT,CACLC,YADK,EAE+B;AACpC,QAAMP,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACM,QAAX,CAAoBC,YAApB,CAAP;AACD;AAED,AAAO,SAASC,UAAT,CACLC,OADK,EAELC,UAFK,EAGLC,IAHK,EAIa;AAClB,QAAMX,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACQ,UAAX,CAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,IAA3C,CAAP;AACD;AAED,AAAO,SAASC,MAAT,CAAmBC,YAAnB,EAAoD;AACzD,QAAMb,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACY,MAAX,CAAkBC,YAAlB,CAAP;AACD;AAED,AAAO,SAASC,SAAT,CACLC,MADK,EAELC,IAFK,EAGC;AACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACc,SAAX,CAAqBC,MAArB,EAA6BC,IAA7B,CAAP;AACD;AAED,AAAO,SAASC,kBAAT,CACLF,MADK,EAELC,IAFK,EAGC;AACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACiB,kBAAX,CAA8BF,MAA9B,EAAsCC,IAAtC,CAAP;AACD;AAED,AAAO,SAASE,eAAT,CACLH,MADK,EAELC,IAFK,EAGC;AACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACkB,eAAX,CAA2BH,MAA3B,EAAmCC,IAAnC,CAAP;AACD;AAED,AAAO,SAASG,WAAT,CACLrL,QADK,EAELkL,IAFK,EAGF;AACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACmB,WAAX,CAAuBrL,QAAvB,EAAiCkL,IAAjC,CAAP;AACD;AAED,AAAO,SAASI,OAAT,CACLL,MADK,EAELC,IAFK,EAGF;AACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACoB,OAAX,CAAmBL,MAAnB,EAA2BC,IAA3B,CAAP;AACD;AAED,AAAO,SAASK,mBAAT,CACLnJ,GADK,EAEL6I,MAFK,EAGLC,IAHK,EAIC;AACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACqB,mBAAX,CAA+BnJ,GAA/B,EAAoC6I,MAApC,EAA4CC,IAA5C,CAAP;AACD;AAED,AAAO,SAASM,aAAT,CACL7E,KADK,EAEL8E,WAFK,EAGC;AACN,AAID;AAED,AAEO,SAASC,aAAT,GAGL;AACA,QAAMxB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACwB,aAAX,EAAP;AACD;AAED,AAAO,SAASC,gBAAT,CAA6BhF,KAA7B,EAA0C;AAC/C,QAAMuD,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACyB,gBAAX,CAA4BhF,KAA5B,CAAP;AACD;AAED,AAAO,SAASiF,KAAT,GAAyB;AAC9B,QAAM1B,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAAC0B,KAAX,EAAP;AACD;AAED,AASO,SAASC,oBAAT,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,EAIF;AACH,QAAM9B,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAAC2B,oBAAX,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,CAAP;AAKD;AAED,AAAO,SAASC,eAAT,GAAsD;AAC3D,QAAM/B,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;AAG3D,SAAOC,UAAU,CAAC+B,eAAX,EAAP;AACD;;AC/LD;;;;AAIA,MAAMC,uBAAoC,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAA7C;;AChBO,MAAMC,eAEZ,GAAG,EAFG;;ACaP,MAAMC,oBAAoB,GAAG;AAC3BrC,EAAAA,sBAD2B;AAE3BkC,EAAAA,uBAF2B;AAG3BjK,EAAAA;AAH2B,CAA7B;;AAWA,AAAyB;AACvBoK,EAAAA,oBAAoB,CAACD,eAArB,GAAuCA,eAAvC;AACD;;ACLD,MAAMA,iBAAe,GAAGC,oBAAoB,CAACD,eAA7C;AAEA,AAAO,SAASE,mBAAT,CACLC,UADK,EAEL1E,YAFK,EAGkB;AACvB;AAGA,MAAI2E,UAAU,GAAG,IAAjB;;AACA,MAAI,CAACJ,iBAAe,CAACG,UAAD,CAApB,EAAkC;AAChCC,IAAAA,UAAU,GAAG,KAAb;AACA,UAAM5L,OAA8B,GAAG;AACrCqC,MAAAA,QAAQ,EAAErE,yBAD2B;AAGrC;AACA;AACA;AACA;AACA;AACAkJ,MAAAA,aAAa,EAAED,YARsB;AASrCE,MAAAA,cAAc,EAAEF,YATqB;AAWrCM,MAAAA,aAAa,EAAEN,YAXsB;AAarC;AACA;AACAG,MAAAA,YAAY,EAAE,CAfuB;AAgBrC;AACAC,MAAAA,QAAQ,EAAG,IAjB0B;AAkBrCC,MAAAA,QAAQ,EAAG,IAlB0B;AAmBrCE,MAAAA,WAAW,EAAEmE;AAnBwB,KAAvC;AAsBA3L,IAAAA,OAAO,CAACqH,QAAR,GAAmB;AACjBhF,MAAAA,QAAQ,EAAEvE,mBADO;AAEjB2J,MAAAA,QAAQ,EAAEzH;AAFO,KAAnB;;AA0BAwL,IAAAA,iBAAe,CAACG,UAAD,CAAf,GAA8B3L,OAA9B;AACD;;AAED,QAAMA,OAAO,GAAGwL,iBAAe,CAACG,UAAD,CAA/B;;AACA,MAAI3L,OAAO,CAACuH,aAAR,KAA0B9I,6CAA9B,EAA6E;AAC3EuB,IAAAA,OAAO,CAACuH,aAAR,GAAwBN,YAAxB;;AACA,QACEjH,OAAO,CAACkH,aAAR,KAA0BzI,6CAD5B,EAEE;AACAuB,MAAAA,OAAO,CAACkH,aAAR,GAAwBD,YAAxB;AACD;;AACD,QACEjH,OAAO,CAACmH,cAAR,KAA2B1I,6CAD7B,EAEE;AACAuB,MAAAA,OAAO,CAACmH,cAAR,GAAyBF,YAAzB;AACD;AACF,GAZD,MAYO,IAAI2E,UAAJ,EAAgB;AACrB,UAAM,IAAItL,KAAJ,qBAA4BqL,UAA5B,sBAAN;AACD;;AACD,SAAO3L,OAAP;AACD;;AC1FM,SAAS6L,eAAT,CACLC,KADK,EAELC,OAFK,EAGL;AACA,QAAMC,cAAc,GAAGV,uBAAuB,CAACC,UAA/C;AACAD,EAAAA,uBAAuB,CAACC,UAAxB,GAAqC,EAArC;AACA;AAaA,MAAI;AACFO,IAAAA,KAAK;AACN,GAFD,SAEU;AACRR,IAAAA,uBAAuB,CAACC,UAAxB,GAAqCS,cAArC;AAeD;AACF;;ACnCM,SAASC,GAAT,CAAgB7M,QAAhB,EAA8D;AACnE,EAsIO;AACL,UAAM,IAAIkB,KAAJ,CAAU,0DAAV,CAAN;AACD;AACF;;MCpFKiC,eAAa,GAAG2J,CAAwCC;AAC9D,MAAMzI,cAAY,GAAGwI,CAAuCE;AAC5D,MAAMnJ,eAAa,GAAGiJ,CAAwCG;AAE9D,MAAMC,QAAQ,GAAG;AACfC,OAAAA,WADe;AAEfC,WAAAA,eAFe;AAGfjG,SAAAA,aAHe;AAIfO,EAAAA,OAJe;AAKf2F,QAAAA;AALe,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react.shared-subset.development.js b/node_modules/react/cjs/react.shared-subset.development.js
new file mode 100644
index 0000000..69a8612
--- /dev/null
+++ b/node_modules/react/cjs/react.shared-subset.development.js
@@ -0,0 +1,2358 @@
+'use strict';
+
+// TODO: this is special because it gets imported during build.
+//
+// TODO: 18.0.0 has not been released to NPM;
+// It exists as a placeholder so that DevTools can support work tag changes between releases.
+// When we next publish a release, update the matching TODO in backend/renderer.js
+// TODO: This module is used both by the release scripts and to expose a version
+// at runtime. We should instead inject the version number as part of the build
+// process, and use the ReactVersions.js module as the single source of truth.
+var ReactVersion = '18.2.0';
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+var REACT_ELEMENT_TYPE = Symbol.for('react.element');
+var REACT_PORTAL_TYPE = Symbol.for('react.portal');
+var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+var REACT_CONTEXT_TYPE = Symbol.for('react.context');
+var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+var REACT_MEMO_TYPE = Symbol.for('react.memo');
+var REACT_LAZY_TYPE = Symbol.for('react.lazy');
+var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+var REACT_CACHE_TYPE = Symbol.for('react.cache');
+var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+/**
+ * Keeps track of the current dispatcher.
+ */
+var ReactCurrentDispatcher = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+/**
+ * Keeps track of the current batch's configuration such as how long an update
+ * should suspend for if it needs to.
+ */
+var ReactCurrentBatchConfig = {
+  transition: null
+};
+
+var ReactCurrentActQueue = {
+  current: null,
+  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
+  isBatchingLegacy: false,
+  didScheduleLegacyUpdate: false
+};
+
+/**
+ * Keeps track of the current owner.
+ *
+ * The current owner is the component who should own any components that are
+ * currently being constructed.
+ */
+var ReactCurrentOwner = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+var ReactDebugCurrentFrame = {};
+var currentExtraStackFrame = null;
+function setExtraStackFrame(stack) {
+  {
+    currentExtraStackFrame = stack;
+  }
+}
+
+{
+  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
+    {
+      currentExtraStackFrame = stack;
+    }
+  }; // Stack implementation injected by the current renderer.
+
+
+  ReactDebugCurrentFrame.getCurrentStack = null;
+
+  ReactDebugCurrentFrame.getStackAddendum = function () {
+    var stack = ''; // Add an extra top frame while an element is being validated
+
+    if (currentExtraStackFrame) {
+      stack += currentExtraStackFrame;
+    } // Delegate to the injected renderer-specific implementation
+
+
+    var impl = ReactDebugCurrentFrame.getCurrentStack;
+
+    if (impl) {
+      stack += impl() || '';
+    }
+
+    return stack;
+  };
+}
+
+// -----------------------------------------------------------------------------
+
+var enableScopeAPI = false; // Experimental Create Event Handle API.
+var enableTransitionTracing = false; // No known bugs, but needs performance testing
+
+var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
+// stuff. Intended to enable React core members to more easily debug scheduling
+// issues in DEV builds.
+
+var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
+
+var ContextRegistry = {};
+
+var ReactSharedInternals = {
+  ReactCurrentDispatcher: ReactCurrentDispatcher,
+  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
+  ReactCurrentOwner: ReactCurrentOwner
+};
+
+{
+  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
+  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
+}
+
+{
+  ReactSharedInternals.ContextRegistry = ContextRegistry;
+}
+
+// by calls to these methods by a Babel plugin.
+//
+// In PROD (or in packages without access to React internals),
+// they are left as they are instead.
+
+function warn(format) {
+  {
+    {
+      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
+        args[_key - 1] = arguments[_key];
+      }
+
+      printWarning('warn', format, args);
+    }
+  }
+}
+function error(format) {
+  {
+    {
+      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
+        args[_key2 - 1] = arguments[_key2];
+      }
+
+      printWarning('error', format, args);
+    }
+  }
+}
+
+function printWarning(level, format, args) {
+  // When changing this logic, you might want to also
+  // update consoleWithStackDev.www.js as well.
+  {
+    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+    var stack = ReactDebugCurrentFrame.getStackAddendum();
+
+    if (stack !== '') {
+      format += '%s';
+      args = args.concat([stack]);
+    } // eslint-disable-next-line react-internal/safe-string-coercion
+
+
+    var argsWithFormat = args.map(function (item) {
+      return String(item);
+    }); // Careful: RN currently depends on this prefix
+
+    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
+    // breaks IE9: https://github.com/facebook/react/issues/13610
+    // eslint-disable-next-line react-internal/no-production-logging
+
+    Function.prototype.apply.call(console[level], console, argsWithFormat);
+  }
+}
+
+var didWarnStateUpdateForUnmountedComponent = {};
+
+function warnNoop(publicInstance, callerName) {
+  {
+    var _constructor = publicInstance.constructor;
+    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
+    var warningKey = componentName + "." + callerName;
+
+    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
+      return;
+    }
+
+    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
+
+    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
+  }
+}
+/**
+ * This is the abstract API for an update queue.
+ */
+
+
+var ReactNoopUpdateQueue = {
+  /**
+   * Checks whether or not this composite component is mounted.
+   * @param {ReactClass} publicInstance The instance we want to test.
+   * @return {boolean} True if mounted, false otherwise.
+   * @protected
+   * @final
+   */
+  isMounted: function (publicInstance) {
+    return false;
+  },
+
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueForceUpdate: function (publicInstance, callback, callerName) {
+    warnNoop(publicInstance, 'forceUpdate');
+  },
+
+  /**
+   * Replaces all of the state. Always use this or `setState` to mutate state.
+   * You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} completeState Next state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+    warnNoop(publicInstance, 'replaceState');
+  },
+
+  /**
+   * Sets a subset of the state. This only exists because _pendingState is
+   * internal. This provides a merging strategy that is not available to deep
+   * properties which is confusing. TODO: Expose pendingState or don't use it
+   * during the merge.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} partialState Next partial state to be merged with state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} Name of the calling function in the public API.
+   * @internal
+   */
+  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+    warnNoop(publicInstance, 'setState');
+  }
+};
+
+var assign = Object.assign;
+
+var emptyObject = {};
+
+{
+  Object.freeze(emptyObject);
+}
+/**
+ * Base class helpers for the updating state of a component.
+ */
+
+
+function Component(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+  // renderer.
+
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+Component.prototype.isReactComponent = {};
+/**
+ * Sets a subset of the state. Always use this to mutate
+ * state. You should treat `this.state` as immutable.
+ *
+ * There is no guarantee that `this.state` will be immediately updated, so
+ * accessing `this.state` after calling this method may return the old value.
+ *
+ * There is no guarantee that calls to `setState` will run synchronously,
+ * as they may eventually be batched together.  You can provide an optional
+ * callback that will be executed when the call to setState is actually
+ * completed.
+ *
+ * When a function is provided to setState, it will be called at some point in
+ * the future (not synchronously). It will be called with the up to date
+ * component arguments (state, props, context). These values can be different
+ * from this.* because your function may be called after receiveProps but before
+ * shouldComponentUpdate, and this new state, props, and context will not yet be
+ * assigned to this.
+ *
+ * @param {object|function} partialState Next partial state or function to
+ *        produce next partial state to be merged with current state.
+ * @param {?function} callback Called after state is updated.
+ * @final
+ * @protected
+ */
+
+Component.prototype.setState = function (partialState, callback) {
+  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+  }
+
+  this.updater.enqueueSetState(this, partialState, callback, 'setState');
+};
+/**
+ * Forces an update. This should only be invoked when it is known with
+ * certainty that we are **not** in a DOM transaction.
+ *
+ * You may want to call this when you know that some deeper aspect of the
+ * component's state has changed but `setState` was not called.
+ *
+ * This will not invoke `shouldComponentUpdate`, but it will invoke
+ * `componentWillUpdate` and `componentDidUpdate`.
+ *
+ * @param {?function} callback Called after update is complete.
+ * @final
+ * @protected
+ */
+
+
+Component.prototype.forceUpdate = function (callback) {
+  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+};
+/**
+ * Deprecated APIs. These APIs used to exist on classic React classes but since
+ * we would like to deprecate them, we're not going to move them over to this
+ * modern base class. Instead, we define a getter that warns if it's accessed.
+ */
+
+
+{
+  var deprecatedAPIs = {
+    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
+    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
+  };
+
+  var defineDeprecationWarning = function (methodName, info) {
+    Object.defineProperty(Component.prototype, methodName, {
+      get: function () {
+        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
+
+        return undefined;
+      }
+    });
+  };
+
+  for (var fnName in deprecatedAPIs) {
+    if (deprecatedAPIs.hasOwnProperty(fnName)) {
+      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
+    }
+  }
+}
+
+function ComponentDummy() {}
+
+ComponentDummy.prototype = Component.prototype;
+/**
+ * Convenience component with default shallow equality check for sCU.
+ */
+
+function PureComponent(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject;
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+assign(pureComponentPrototype, Component.prototype);
+pureComponentPrototype.isPureReactComponent = true;
+
+// an immutable object with a single mutable value
+function createRef() {
+  var refObject = {
+    current: null
+  };
+
+  {
+    Object.seal(refObject);
+  }
+
+  return refObject;
+}
+
+var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+/*
+ * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
+ * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
+ *
+ * The functions in this module will throw an easier-to-understand,
+ * easier-to-debug exception with a clear errors message message explaining the
+ * problem. (Instead of a confusing exception thrown inside the implementation
+ * of the `value` object).
+ */
+// $FlowFixMe only called in DEV, so void return is not possible.
+function typeName(value) {
+  {
+    // toStringTag is needed for namespaced types like Temporal.Instant
+    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
+    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
+    return type;
+  }
+} // $FlowFixMe only called in DEV, so void return is not possible.
+
+
+function willCoercionThrow(value) {
+  {
+    try {
+      testStringCoercion(value);
+      return false;
+    } catch (e) {
+      return true;
+    }
+  }
+}
+
+function testStringCoercion(value) {
+  // If you ended up here by following an exception call stack, here's what's
+  // happened: you supplied an object or symbol value to React (as a prop, key,
+  // DOM attribute, CSS property, string ref, etc.) and when React tried to
+  // coerce it to a string using `'' + value`, an exception was thrown.
+  //
+  // The most common types that will cause this exception are `Symbol` instances
+  // and Temporal objects like `Temporal.Instant`. But any object that has a
+  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
+  // exception. (Library authors do this to prevent users from using built-in
+  // numeric operators like `+` or comparison operators like `>=` because custom
+  // methods are needed to perform accurate arithmetic or comparison.)
+  //
+  // To fix the problem, coerce this object or symbol value to a string before
+  // passing it to React. The most reliable way is usually `String(value)`.
+  //
+  // To find which value is throwing, check the browser or debugger console.
+  // Before this exception was thrown, there should be `console.error` output
+  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
+  // problem and how that type was used: key, atrribute, input value prop, etc.
+  // In most cases, this console output also shows the component and its
+  // ancestor components where the exception happened.
+  //
+  // eslint-disable-next-line react-internal/safe-string-coercion
+  return '' + value;
+}
+function checkKeyStringCoercion(value) {
+  {
+    if (willCoercionThrow(value)) {
+      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
+
+      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
+    }
+  }
+}
+
+function getWrappedName(outerType, innerType, wrapperName) {
+  var displayName = outerType.displayName;
+
+  if (displayName) {
+    return displayName;
+  }
+
+  var functionName = innerType.displayName || innerType.name || '';
+  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
+} // Keep in sync with react-reconciler/getComponentNameFromFiber
+
+
+function getContextName(type) {
+  return type.displayName || 'Context';
+} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
+
+
+function getComponentNameFromType(type) {
+  if (type == null) {
+    // Host root, text node or just invalid type.
+    return null;
+  }
+
+  {
+    if (typeof type.tag === 'number') {
+      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
+    }
+  }
+
+  if (typeof type === 'function') {
+    return type.displayName || type.name || null;
+  }
+
+  if (typeof type === 'string') {
+    return type;
+  }
+
+  switch (type) {
+    case REACT_FRAGMENT_TYPE:
+      return 'Fragment';
+
+    case REACT_PORTAL_TYPE:
+      return 'Portal';
+
+    case REACT_PROFILER_TYPE:
+      return 'Profiler';
+
+    case REACT_STRICT_MODE_TYPE:
+      return 'StrictMode';
+
+    case REACT_SUSPENSE_TYPE:
+      return 'Suspense';
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return 'SuspenseList';
+
+    case REACT_CACHE_TYPE:
+      {
+        return 'Cache';
+      }
+
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_CONTEXT_TYPE:
+        var context = type;
+        return getContextName(context) + '.Consumer';
+
+      case REACT_PROVIDER_TYPE:
+        var provider = type;
+        return getContextName(provider._context) + '.Provider';
+
+      case REACT_FORWARD_REF_TYPE:
+        return getWrappedName(type, type.render, 'ForwardRef');
+
+      case REACT_MEMO_TYPE:
+        var outerName = type.displayName || null;
+
+        if (outerName !== null) {
+          return outerName;
+        }
+
+        return getComponentNameFromType(type.type) || 'Memo';
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            return getComponentNameFromType(init(payload));
+          } catch (x) {
+            return null;
+          }
+        }
+
+      case REACT_SERVER_CONTEXT_TYPE:
+        {
+          var context2 = type;
+          return (context2.displayName || context2._globalName) + '.Provider';
+        }
+
+      // eslint-disable-next-line no-fallthrough
+    }
+  }
+
+  return null;
+}
+
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+var RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
+
+{
+  didWarnAboutStringRefs = {};
+}
+
+function hasValidRef(config) {
+  {
+    if (hasOwnProperty.call(config, 'ref')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
+      }
+    }
+  }
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+  {
+    if (hasOwnProperty.call(config, 'key')) {
+      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
+
+      if (getter && getter.isReactWarning) {
+        return false;
+      }
+    }
+  }
+
+  return config.key !== undefined;
+}
+
+function defineKeyPropWarningGetter(props, displayName) {
+  var warnAboutAccessingKey = function () {
+    {
+      if (!specialPropKeyWarningShown) {
+        specialPropKeyWarningShown = true;
+
+        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
+    }
+  };
+
+  warnAboutAccessingKey.isReactWarning = true;
+  Object.defineProperty(props, 'key', {
+    get: warnAboutAccessingKey,
+    configurable: true
+  });
+}
+
+function defineRefPropWarningGetter(props, displayName) {
+  var warnAboutAccessingRef = function () {
+    {
+      if (!specialPropRefWarningShown) {
+        specialPropRefWarningShown = true;
+
+        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+      }
+    }
+  };
+
+  warnAboutAccessingRef.isReactWarning = true;
+  Object.defineProperty(props, 'ref', {
+    get: warnAboutAccessingRef,
+    configurable: true
+  });
+}
+
+function warnIfStringRefCannotBeAutoConverted(config) {
+  {
+    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
+      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+      if (!didWarnAboutStringRefs[componentName]) {
+        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
+
+        didWarnAboutStringRefs[componentName] = true;
+      }
+    }
+  }
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+var ReactElement = function (type, key, ref, self, source, owner, props) {
+  var element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  {
+    // The validation flag is currently mutative. We put it on
+    // an external backing store so that we can freeze the whole object.
+    // This can be replaced with a WeakMap once they are implemented in
+    // commonly used development environments.
+    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
+    // the validation flag non-enumerable (where possible, which should
+    // include every environment we run tests in), so the test framework
+    // ignores it.
+
+    Object.defineProperty(element._store, 'validated', {
+      configurable: false,
+      enumerable: false,
+      writable: true,
+      value: false
+    }); // self and source are DEV only properties.
+
+    Object.defineProperty(element, '_self', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: self
+    }); // Two elements created in two different places should be considered
+    // equal for testing purposes and therefore we hide it from enumeration.
+
+    Object.defineProperty(element, '_source', {
+      configurable: false,
+      enumerable: false,
+      writable: false,
+      value: source
+    });
+
+    if (Object.freeze) {
+      Object.freeze(element.props);
+      Object.freeze(element);
+    }
+  }
+
+  return element;
+};
+/**
+ * Create and return a new ReactElement of the given type.
+ * See https://reactjs.org/docs/react-api.html#createelement
+ */
+
+function createElement(type, config, children) {
+  var propName; // Reserved names are extracted
+
+  var props = {};
+  var key = null;
+  var ref = null;
+  var self = null;
+  var source = null;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      ref = config.ref;
+
+      {
+        warnIfStringRefCannotBeAutoConverted(config);
+      }
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    }
+
+    self = config.__self === undefined ? null : config.__self;
+    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  var childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    var childArray = Array(childrenLength);
+
+    for (var i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    {
+      if (Object.freeze) {
+        Object.freeze(childArray);
+      }
+    }
+
+    props.children = childArray;
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    var defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  {
+    if (key || ref) {
+      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
+
+      if (key) {
+        defineKeyPropWarningGetter(props, displayName);
+      }
+
+      if (ref) {
+        defineRefPropWarningGetter(props, displayName);
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+}
+function cloneAndReplaceKey(oldElement, newKey) {
+  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+  return newElement;
+}
+/**
+ * Clone and return a new ReactElement using element as the starting point.
+ * See https://reactjs.org/docs/react-api.html#cloneelement
+ */
+
+function cloneElement(element, config, children) {
+  if (element === null || element === undefined) {
+    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+  }
+
+  var propName; // Original props are copied
+
+  var props = assign({}, element.props); // Reserved names are extracted
+
+  var key = element.key;
+  var ref = element.ref; // Self is preserved since the owner is preserved.
+
+  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+  // transpiler, and the original source is probably a better indicator of the
+  // true owner.
+
+  var source = element._source; // Owner will be preserved, unless ref is overridden
+
+  var owner = element._owner;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      // Silently steal the ref from the parent.
+      ref = config.ref;
+      owner = ReactCurrentOwner.current;
+    }
+
+    if (hasValidKey(config)) {
+      {
+        checkKeyStringCoercion(config.key);
+      }
+
+      key = '' + config.key;
+    } // Remaining properties override existing props
+
+
+    var defaultProps;
+
+    if (element.type && element.type.defaultProps) {
+      defaultProps = element.type.defaultProps;
+    }
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        if (config[propName] === undefined && defaultProps !== undefined) {
+          // Resolve default props
+          props[propName] = defaultProps[propName];
+        } else {
+          props[propName] = config[propName];
+        }
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  var childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    var childArray = Array(childrenLength);
+
+    for (var i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  }
+
+  return ReactElement(element.type, key, ref, self, source, owner, props);
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+function isValidElement(object) {
+  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+}
+
+var SEPARATOR = '.';
+var SUBSEPARATOR = ':';
+/**
+ * Escape and wrap key so it is safe to use as a reactid
+ *
+ * @param {string} key to be escaped.
+ * @return {string} the escaped key.
+ */
+
+function escape(key) {
+  var escapeRegex = /[=:]/g;
+  var escaperLookup = {
+    '=': '=0',
+    ':': '=2'
+  };
+  var escapedString = key.replace(escapeRegex, function (match) {
+    return escaperLookup[match];
+  });
+  return '$' + escapedString;
+}
+/**
+ * TODO: Test that a single child and an array with one item have the same key
+ * pattern.
+ */
+
+
+var didWarnAboutMaps = false;
+var userProvidedKeyEscapeRegex = /\/+/g;
+
+function escapeUserProvidedKey(text) {
+  return text.replace(userProvidedKeyEscapeRegex, '$&/');
+}
+/**
+ * Generate a key string that identifies a element within a set.
+ *
+ * @param {*} element A element that could contain a manual key.
+ * @param {number} index Index that is used if a manual key is not provided.
+ * @return {string}
+ */
+
+
+function getElementKey(element, index) {
+  // Do some typechecking here since we call this blindly. We want to ensure
+  // that we don't block potential future ES APIs.
+  if (typeof element === 'object' && element !== null && element.key != null) {
+    // Explicit key
+    {
+      checkKeyStringCoercion(element.key);
+    }
+
+    return escape('' + element.key);
+  } // Implicit key determined by the index in the set
+
+
+  return index.toString(36);
+}
+
+function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+  var type = typeof children;
+
+  if (type === 'undefined' || type === 'boolean') {
+    // All of the above are perceived as null.
+    children = null;
+  }
+
+  var invokeCallback = false;
+
+  if (children === null) {
+    invokeCallback = true;
+  } else {
+    switch (type) {
+      case 'string':
+      case 'number':
+        invokeCallback = true;
+        break;
+
+      case 'object':
+        switch (children.$$typeof) {
+          case REACT_ELEMENT_TYPE:
+          case REACT_PORTAL_TYPE:
+            invokeCallback = true;
+        }
+
+    }
+  }
+
+  if (invokeCallback) {
+    var _child = children;
+    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
+    // so that it's consistent if the number of children grows:
+
+    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
+
+    if (isArray(mappedChild)) {
+      var escapedChildKey = '';
+
+      if (childKey != null) {
+        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+      }
+
+      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
+        return c;
+      });
+    } else if (mappedChild != null) {
+      if (isValidElement(mappedChild)) {
+        {
+          // The `if` statement here prevents auto-disabling of the safe
+          // coercion ESLint rule, so we must manually disable it below.
+          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
+            checkKeyStringCoercion(mappedChild.key);
+          }
+        }
+
+        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+        // traverseAllChildren used to do for objects as children
+        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+      }
+
+      array.push(mappedChild);
+    }
+
+    return 1;
+  }
+
+  var child;
+  var nextName;
+  var subtreeCount = 0; // Count of children found in the current subtree.
+
+  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+  if (isArray(children)) {
+    for (var i = 0; i < children.length; i++) {
+      child = children[i];
+      nextName = nextNamePrefix + getElementKey(child, i);
+      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+    }
+  } else {
+    var iteratorFn = getIteratorFn(children);
+
+    if (typeof iteratorFn === 'function') {
+      var iterableChildren = children;
+
+      {
+        // Warn about using Maps as children
+        if (iteratorFn === iterableChildren.entries) {
+          if (!didWarnAboutMaps) {
+            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
+          }
+
+          didWarnAboutMaps = true;
+        }
+      }
+
+      var iterator = iteratorFn.call(iterableChildren);
+      var step;
+      var ii = 0;
+
+      while (!(step = iterator.next()).done) {
+        child = step.value;
+        nextName = nextNamePrefix + getElementKey(child, ii++);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else if (type === 'object') {
+      // eslint-disable-next-line react-internal/safe-string-coercion
+      var childrenString = String(children);
+      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+    }
+  }
+
+  return subtreeCount;
+}
+
+/**
+ * Maps children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+ *
+ * The provided mapFunction(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} func The map function.
+ * @param {*} context Context for mapFunction.
+ * @return {object} Object containing the ordered map of results.
+ */
+function mapChildren(children, func, context) {
+  if (children == null) {
+    return children;
+  }
+
+  var result = [];
+  var count = 0;
+  mapIntoArray(children, result, '', '', function (child) {
+    return func.call(context, child, count++);
+  });
+  return result;
+}
+/**
+ * Count the number of children that are typically specified as
+ * `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrencount
+ *
+ * @param {?*} children Children tree container.
+ * @return {number} The number of children.
+ */
+
+
+function countChildren(children) {
+  var n = 0;
+  mapChildren(children, function () {
+    n++; // Don't return anything
+  });
+  return n;
+}
+
+/**
+ * Iterates through children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+ *
+ * The provided forEachFunc(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} forEachFunc
+ * @param {*} forEachContext Context for forEachContext.
+ */
+function forEachChildren(children, forEachFunc, forEachContext) {
+  mapChildren(children, function () {
+    forEachFunc.apply(this, arguments); // Don't return anything.
+  }, forEachContext);
+}
+/**
+ * Flatten a children object (typically specified as `props.children`) and
+ * return an array with appropriately re-keyed children.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+ */
+
+
+function toArray(children) {
+  return mapChildren(children, function (child) {
+    return child;
+  }) || [];
+}
+/**
+ * Returns the first child in a collection of children and verifies that there
+ * is only one child in the collection.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+ *
+ * The current implementation of this function assumes that a single child gets
+ * passed without a wrapper, but the purpose of this helper function is to
+ * abstract away the particular structure of children.
+ *
+ * @param {?object} children Child collection structure.
+ * @return {ReactElement} The first and only `ReactElement` contained in the
+ * structure.
+ */
+
+
+function onlyChild(children) {
+  if (!isValidElement(children)) {
+    throw new Error('React.Children.only expected to receive a single React element child.');
+  }
+
+  return children;
+}
+
+var Uninitialized = -1;
+var Pending = 0;
+var Resolved = 1;
+var Rejected = 2;
+
+function lazyInitializer(payload) {
+  if (payload._status === Uninitialized) {
+    var ctor = payload._result;
+    var thenable = ctor(); // Transition to the next state.
+    // This might throw either because it's missing or throws. If so, we treat it
+    // as still uninitialized and try again next time. Which is the same as what
+    // happens if the ctor or any wrappers processing the ctor throws. This might
+    // end up fixing it if the resolution was a concurrency bug.
+
+    thenable.then(function (moduleObject) {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        var resolved = payload;
+        resolved._status = Resolved;
+        resolved._result = moduleObject;
+      }
+    }, function (error) {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        var rejected = payload;
+        rejected._status = Rejected;
+        rejected._result = error;
+      }
+    });
+
+    if (payload._status === Uninitialized) {
+      // In case, we're still uninitialized, then we're waiting for the thenable
+      // to resolve. Set it as pending in the meantime.
+      var pending = payload;
+      pending._status = Pending;
+      pending._result = thenable;
+    }
+  }
+
+  if (payload._status === Resolved) {
+    var moduleObject = payload._result;
+
+    {
+      if (moduleObject === undefined) {
+        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
+      }
+    }
+
+    {
+      if (!('default' in moduleObject)) {
+        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
+      }
+    }
+
+    return moduleObject.default;
+  } else {
+    throw payload._result;
+  }
+}
+
+function lazy(ctor) {
+  var payload = {
+    // We use these fields to store the result.
+    _status: Uninitialized,
+    _result: ctor
+  };
+  var lazyType = {
+    $$typeof: REACT_LAZY_TYPE,
+    _payload: payload,
+    _init: lazyInitializer
+  };
+
+  {
+    // In production, this would just set it on the object.
+    var defaultProps;
+    var propTypes; // $FlowFixMe
+
+    Object.defineProperties(lazyType, {
+      defaultProps: {
+        configurable: true,
+        get: function () {
+          return defaultProps;
+        },
+        set: function (newDefaultProps) {
+          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+          defaultProps = newDefaultProps; // Match production behavior more closely:
+          // $FlowFixMe
+
+          Object.defineProperty(lazyType, 'defaultProps', {
+            enumerable: true
+          });
+        }
+      },
+      propTypes: {
+        configurable: true,
+        get: function () {
+          return propTypes;
+        },
+        set: function (newPropTypes) {
+          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+          propTypes = newPropTypes; // Match production behavior more closely:
+          // $FlowFixMe
+
+          Object.defineProperty(lazyType, 'propTypes', {
+            enumerable: true
+          });
+        }
+      }
+    });
+  }
+
+  return lazyType;
+}
+
+function forwardRef(render) {
+  {
+    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
+      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
+    } else if (typeof render !== 'function') {
+      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
+    } else {
+      if (render.length !== 0 && render.length !== 2) {
+        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
+      }
+    }
+
+    if (render != null) {
+      if (render.defaultProps != null || render.propTypes != null) {
+        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
+      }
+    }
+  }
+
+  var elementType = {
+    $$typeof: REACT_FORWARD_REF_TYPE,
+    render: render
+  };
+
+  {
+    var ownName;
+    Object.defineProperty(elementType, 'displayName', {
+      enumerable: false,
+      configurable: true,
+      get: function () {
+        return ownName;
+      },
+      set: function (name) {
+        ownName = name; // The inner component shouldn't inherit this display name in most cases,
+        // because the component may be used elsewhere.
+        // But it's nice for anonymous functions to inherit the name,
+        // so that our component-stack generation logic will display their frames.
+        // An anonymous function generally suggests a pattern like:
+        //   React.forwardRef((props, ref) => {...});
+        // This kind of inner function is not used elsewhere so the side effect is okay.
+
+        if (!render.name && !render.displayName) {
+          render.displayName = name;
+        }
+      }
+    });
+  }
+
+  return elementType;
+}
+
+var REACT_MODULE_REFERENCE;
+
+{
+  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
+}
+
+function isValidElementType(type) {
+  if (typeof type === 'string' || typeof type === 'function') {
+    return true;
+  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
+
+
+  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  ||  type === REACT_CACHE_TYPE || enableTransitionTracing ) {
+    return true;
+  }
+
+  if (typeof type === 'object' && type !== null) {
+    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
+    // types supported by any Flight configuration anywhere since
+    // we don't know which Flight build this will end up being used
+    // with.
+    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
+      return true;
+    }
+  }
+
+  return false;
+}
+
+function memo(type, compare) {
+  {
+    if (!isValidElementType(type)) {
+      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
+    }
+  }
+
+  var elementType = {
+    $$typeof: REACT_MEMO_TYPE,
+    type: type,
+    compare: compare === undefined ? null : compare
+  };
+
+  {
+    var ownName;
+    Object.defineProperty(elementType, 'displayName', {
+      enumerable: false,
+      configurable: true,
+      get: function () {
+        return ownName;
+      },
+      set: function (name) {
+        ownName = name; // The inner component shouldn't inherit this display name in most cases,
+        // because the component may be used elsewhere.
+        // But it's nice for anonymous functions to inherit the name,
+        // so that our component-stack generation logic will display their frames.
+        // An anonymous function generally suggests a pattern like:
+        //   React.memo((props) => {...});
+        // This kind of inner function is not used elsewhere so the side effect is okay.
+
+        if (!type.name && !type.displayName) {
+          type.displayName = name;
+        }
+      }
+    });
+  }
+
+  return elementType;
+}
+
+function resolveDispatcher() {
+  var dispatcher = ReactCurrentDispatcher.current;
+
+  {
+    if (dispatcher === null) {
+      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
+    }
+  } // Will result in a null access error if accessed outside render phase. We
+  // intentionally don't throw our own error because this is in a hot path.
+  // Also helps ensure this is inlined.
+
+
+  return dispatcher;
+}
+
+function getCacheSignal() {
+  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheSignal();
+}
+function getCacheForType(resourceType) {
+  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheForType(resourceType);
+}
+function useContext(Context) {
+  var dispatcher = resolveDispatcher();
+
+  {
+    // TODO: add a more generic warning for invalid values.
+    if (Context._context !== undefined) {
+      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
+      // and nobody should be using this in existing code.
+
+      if (realContext.Consumer === Context) {
+        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
+      } else if (realContext.Provider === Context) {
+        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
+      }
+    }
+  }
+
+  return dispatcher.useContext(Context);
+}
+function useCallback(callback, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useCallback(callback, deps);
+}
+function useMemo(create, deps) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useMemo(create, deps);
+}
+function useDebugValue(value, formatterFn) {
+  {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useDebugValue(value, formatterFn);
+  }
+}
+function useTransition() {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useTransition();
+}
+function useDeferredValue(value) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useDeferredValue(value);
+}
+function useId() {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useId();
+}
+function useMutableSource(source, getSnapshot, subscribe) {
+  var dispatcher = resolveDispatcher();
+  return dispatcher.useMutableSource(source, getSnapshot, subscribe);
+}
+
+// Helpers to patch console.logs to avoid logging during side-effect free
+// replaying on render function. This currently only patches the object
+// lazily which won't cover if the log function was extracted eagerly.
+// We could also eagerly patch the method.
+var disabledDepth = 0;
+var prevLog;
+var prevInfo;
+var prevWarn;
+var prevError;
+var prevGroup;
+var prevGroupCollapsed;
+var prevGroupEnd;
+
+function disabledLog() {}
+
+disabledLog.__reactDisabledLog = true;
+function disableLogs() {
+  {
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      prevLog = console.log;
+      prevInfo = console.info;
+      prevWarn = console.warn;
+      prevError = console.error;
+      prevGroup = console.group;
+      prevGroupCollapsed = console.groupCollapsed;
+      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
+
+      var props = {
+        configurable: true,
+        enumerable: true,
+        value: disabledLog,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        info: props,
+        log: props,
+        warn: props,
+        error: props,
+        group: props,
+        groupCollapsed: props,
+        groupEnd: props
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    disabledDepth++;
+  }
+}
+function reenableLogs() {
+  {
+    disabledDepth--;
+
+    if (disabledDepth === 0) {
+      /* eslint-disable react-internal/no-production-logging */
+      var props = {
+        configurable: true,
+        enumerable: true,
+        writable: true
+      }; // $FlowFixMe Flow thinks console is immutable.
+
+      Object.defineProperties(console, {
+        log: assign({}, props, {
+          value: prevLog
+        }),
+        info: assign({}, props, {
+          value: prevInfo
+        }),
+        warn: assign({}, props, {
+          value: prevWarn
+        }),
+        error: assign({}, props, {
+          value: prevError
+        }),
+        group: assign({}, props, {
+          value: prevGroup
+        }),
+        groupCollapsed: assign({}, props, {
+          value: prevGroupCollapsed
+        }),
+        groupEnd: assign({}, props, {
+          value: prevGroupEnd
+        })
+      });
+      /* eslint-enable react-internal/no-production-logging */
+    }
+
+    if (disabledDepth < 0) {
+      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
+    }
+  }
+}
+
+var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
+var prefix;
+function describeBuiltInComponentFrame(name, source, ownerFn) {
+  {
+    if (prefix === undefined) {
+      // Extract the VM specific prefix used by each line.
+      try {
+        throw Error();
+      } catch (x) {
+        var match = x.stack.trim().match(/\n( *(at )?)/);
+        prefix = match && match[1] || '';
+      }
+    } // We use the prefix to ensure our stacks line up with native stack frames.
+
+
+    return '\n' + prefix + name;
+  }
+}
+var reentry = false;
+var componentFrameCache;
+
+{
+  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
+  componentFrameCache = new PossiblyWeakMap();
+}
+
+function describeNativeComponentFrame(fn, construct) {
+  // If something asked for a stack inside a fake render, it should get ignored.
+  if ( !fn || reentry) {
+    return '';
+  }
+
+  {
+    var frame = componentFrameCache.get(fn);
+
+    if (frame !== undefined) {
+      return frame;
+    }
+  }
+
+  var control;
+  reentry = true;
+  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
+
+  Error.prepareStackTrace = undefined;
+  var previousDispatcher;
+
+  {
+    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
+    // for warnings.
+
+    ReactCurrentDispatcher$1.current = null;
+    disableLogs();
+  }
+
+  try {
+    // This should throw.
+    if (construct) {
+      // Something should be setting the props in the constructor.
+      var Fake = function () {
+        throw Error();
+      }; // $FlowFixMe
+
+
+      Object.defineProperty(Fake.prototype, 'props', {
+        set: function () {
+          // We use a throwing setter instead of frozen or non-writable props
+          // because that won't throw in a non-strict mode function.
+          throw Error();
+        }
+      });
+
+      if (typeof Reflect === 'object' && Reflect.construct) {
+        // We construct a different control for this case to include any extra
+        // frames added by the construct call.
+        try {
+          Reflect.construct(Fake, []);
+        } catch (x) {
+          control = x;
+        }
+
+        Reflect.construct(fn, [], Fake);
+      } else {
+        try {
+          Fake.call();
+        } catch (x) {
+          control = x;
+        }
+
+        fn.call(Fake.prototype);
+      }
+    } else {
+      try {
+        throw Error();
+      } catch (x) {
+        control = x;
+      } // TODO(luna): This will currently only throw if the function component
+      // tries to access React/ReactDOM/props. We should probably make this throw
+      // in simple components too
+
+
+      fn();
+    }
+  } catch (sample) {
+    // This is inlined manually because closure doesn't do it for us.
+    if (sample && control && typeof sample.stack === 'string') {
+      // This extracts the first frame from the sample that isn't also in the control.
+      // Skipping one frame that we assume is the frame that calls the two.
+      var sampleLines = sample.stack.split('\n');
+      var controlLines = control.stack.split('\n');
+      var s = sampleLines.length - 1;
+      var c = controlLines.length - 1;
+
+      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
+        // We expect at least one stack frame to be shared.
+        // Typically this will be the root most one. However, stack frames may be
+        // cut off due to maximum stack limits. In this case, one maybe cut off
+        // earlier than the other. We assume that the sample is longer or the same
+        // and there for cut off earlier. So we should find the root most frame in
+        // the sample somewhere in the control.
+        c--;
+      }
+
+      for (; s >= 1 && c >= 0; s--, c--) {
+        // Next we find the first one that isn't the same which should be the
+        // frame that called our sample function and the control.
+        if (sampleLines[s] !== controlLines[c]) {
+          // In V8, the first line is describing the message but other VMs don't.
+          // If we're about to return the first line, and the control is also on the same
+          // line, that's a pretty good indicator that our sample threw at same line as
+          // the control. I.e. before we entered the sample frame. So we ignore this result.
+          // This can happen if you passed a class to function component, or non-function.
+          if (s !== 1 || c !== 1) {
+            do {
+              s--;
+              c--; // We may still have similar intermediate frames from the construct call.
+              // The next one that isn't the same should be our match though.
+
+              if (c < 0 || sampleLines[s] !== controlLines[c]) {
+                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
+                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
+                // but we have a user-provided "displayName"
+                // splice it in to make the stack more readable.
+
+
+                if (fn.displayName && _frame.includes('<anonymous>')) {
+                  _frame = _frame.replace('<anonymous>', fn.displayName);
+                }
+
+                {
+                  if (typeof fn === 'function') {
+                    componentFrameCache.set(fn, _frame);
+                  }
+                } // Return the line we found.
+
+
+                return _frame;
+              }
+            } while (s >= 1 && c >= 0);
+          }
+
+          break;
+        }
+      }
+    }
+  } finally {
+    reentry = false;
+
+    {
+      ReactCurrentDispatcher$1.current = previousDispatcher;
+      reenableLogs();
+    }
+
+    Error.prepareStackTrace = previousPrepareStackTrace;
+  } // Fallback to just using the name if we couldn't make it throw.
+
+
+  var name = fn ? fn.displayName || fn.name : '';
+  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
+
+  {
+    if (typeof fn === 'function') {
+      componentFrameCache.set(fn, syntheticFrame);
+    }
+  }
+
+  return syntheticFrame;
+}
+function describeFunctionComponentFrame(fn, source, ownerFn) {
+  {
+    return describeNativeComponentFrame(fn, false);
+  }
+}
+
+function shouldConstruct(Component) {
+  var prototype = Component.prototype;
+  return !!(prototype && prototype.isReactComponent);
+}
+
+function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
+
+  if (type == null) {
+    return '';
+  }
+
+  if (typeof type === 'function') {
+    {
+      return describeNativeComponentFrame(type, shouldConstruct(type));
+    }
+  }
+
+  if (typeof type === 'string') {
+    return describeBuiltInComponentFrame(type);
+  }
+
+  switch (type) {
+    case REACT_SUSPENSE_TYPE:
+      return describeBuiltInComponentFrame('Suspense');
+
+    case REACT_SUSPENSE_LIST_TYPE:
+      return describeBuiltInComponentFrame('SuspenseList');
+  }
+
+  if (typeof type === 'object') {
+    switch (type.$$typeof) {
+      case REACT_FORWARD_REF_TYPE:
+        return describeFunctionComponentFrame(type.render);
+
+      case REACT_MEMO_TYPE:
+        // Memo may contain any component type so we recursively resolve it.
+        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
+
+      case REACT_LAZY_TYPE:
+        {
+          var lazyComponent = type;
+          var payload = lazyComponent._payload;
+          var init = lazyComponent._init;
+
+          try {
+            // Lazy may contain any component type so we recursively resolve it.
+            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
+          } catch (x) {}
+        }
+    }
+  }
+
+  return '';
+}
+
+var loggedTypeFailures = {};
+var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+function setCurrentlyValidatingElement(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
+    } else {
+      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
+    }
+  }
+}
+
+function checkPropTypes(typeSpecs, values, location, componentName, element) {
+  {
+    // $FlowFixMe This is okay but Flow doesn't know it.
+    var has = Function.call.bind(hasOwnProperty);
+
+    for (var typeSpecName in typeSpecs) {
+      if (has(typeSpecs, typeSpecName)) {
+        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
+        // fail the render phase where it didn't fail before. So we log it.
+        // After these have been cleaned up, we'll let them throw.
+
+        try {
+          // This is intentionally an invariant that gets caught. It's the same
+          // behavior as without this statement except with a better message.
+          if (typeof typeSpecs[typeSpecName] !== 'function') {
+            // eslint-disable-next-line react-internal/prod-error-codes
+            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
+            err.name = 'Invariant Violation';
+            throw err;
+          }
+
+          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
+        } catch (ex) {
+          error$1 = ex;
+        }
+
+        if (error$1 && !(error$1 instanceof Error)) {
+          setCurrentlyValidatingElement(element);
+
+          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
+
+          setCurrentlyValidatingElement(null);
+        }
+
+        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
+          // Only monitor this failure once because there tends to be a lot of the
+          // same error.
+          loggedTypeFailures[error$1.message] = true;
+          setCurrentlyValidatingElement(element);
+
+          error('Failed %s type: %s', location, error$1.message);
+
+          setCurrentlyValidatingElement(null);
+        }
+      }
+    }
+  }
+}
+
+function setCurrentlyValidatingElement$1(element) {
+  {
+    if (element) {
+      var owner = element._owner;
+      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+      setExtraStackFrame(stack);
+    } else {
+      setExtraStackFrame(null);
+    }
+  }
+}
+
+var propTypesMisspellWarningShown;
+
+{
+  propTypesMisspellWarningShown = false;
+}
+
+function getDeclarationErrorAddendum() {
+  if (ReactCurrentOwner.current) {
+    var name = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+    if (name) {
+      return '\n\nCheck the render method of `' + name + '`.';
+    }
+  }
+
+  return '';
+}
+
+function getSourceInfoErrorAddendum(source) {
+  if (source !== undefined) {
+    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
+    var lineNumber = source.lineNumber;
+    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
+  }
+
+  return '';
+}
+
+function getSourceInfoErrorAddendumForProps(elementProps) {
+  if (elementProps !== null && elementProps !== undefined) {
+    return getSourceInfoErrorAddendum(elementProps.__source);
+  }
+
+  return '';
+}
+/**
+ * Warn if there's no key explicitly set on dynamic arrays of children or
+ * object keys are not valid. This allows us to keep track of children between
+ * updates.
+ */
+
+
+var ownerHasKeyUseWarning = {};
+
+function getCurrentComponentErrorInfo(parentType) {
+  var info = getDeclarationErrorAddendum();
+
+  if (!info) {
+    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
+
+    if (parentName) {
+      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
+    }
+  }
+
+  return info;
+}
+/**
+ * Warn if the element doesn't have an explicit key assigned to it.
+ * This element is in an array. The array could grow and shrink or be
+ * reordered. All children that haven't already been validated are required to
+ * have a "key" property assigned to it. Error statuses are cached so a warning
+ * will only be shown once.
+ *
+ * @internal
+ * @param {ReactElement} element Element that requires a key.
+ * @param {*} parentType element's parent's type.
+ */
+
+
+function validateExplicitKey(element, parentType) {
+  if (!element._store || element._store.validated || element.key != null) {
+    return;
+  }
+
+  element._store.validated = true;
+  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
+
+  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
+    return;
+  }
+
+  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
+  // property, it may be the creator of the child that's responsible for
+  // assigning it a key.
+
+  var childOwner = '';
+
+  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
+    // Give the component that originally created this child.
+    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
+  }
+
+  {
+    setCurrentlyValidatingElement$1(element);
+
+    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
+
+    setCurrentlyValidatingElement$1(null);
+  }
+}
+/**
+ * Ensure that every element either is passed in a static location, in an
+ * array with an explicit keys property defined, or in an object literal
+ * with valid key property.
+ *
+ * @internal
+ * @param {ReactNode} node Statically passed child of any type.
+ * @param {*} parentType node's parent's type.
+ */
+
+
+function validateChildKeys(node, parentType) {
+  if (typeof node !== 'object') {
+    return;
+  }
+
+  if (isArray(node)) {
+    for (var i = 0; i < node.length; i++) {
+      var child = node[i];
+
+      if (isValidElement(child)) {
+        validateExplicitKey(child, parentType);
+      }
+    }
+  } else if (isValidElement(node)) {
+    // This element was passed in a valid location.
+    if (node._store) {
+      node._store.validated = true;
+    }
+  } else if (node) {
+    var iteratorFn = getIteratorFn(node);
+
+    if (typeof iteratorFn === 'function') {
+      // Entry iterators used to provide implicit keys,
+      // but now we print a separate warning for them later.
+      if (iteratorFn !== node.entries) {
+        var iterator = iteratorFn.call(node);
+        var step;
+
+        while (!(step = iterator.next()).done) {
+          if (isValidElement(step.value)) {
+            validateExplicitKey(step.value, parentType);
+          }
+        }
+      }
+    }
+  }
+}
+/**
+ * Given an element, validate that its props follow the propTypes definition,
+ * provided by the type.
+ *
+ * @param {ReactElement} element
+ */
+
+
+function validatePropTypes(element) {
+  {
+    var type = element.type;
+
+    if (type === null || type === undefined || typeof type === 'string') {
+      return;
+    }
+
+    var propTypes;
+
+    if (typeof type === 'function') {
+      propTypes = type.propTypes;
+    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
+    // Inner props are checked in the reconciler.
+    type.$$typeof === REACT_MEMO_TYPE)) {
+      propTypes = type.propTypes;
+    } else {
+      return;
+    }
+
+    if (propTypes) {
+      // Intentionally inside to avoid triggering lazy initializers:
+      var name = getComponentNameFromType(type);
+      checkPropTypes(propTypes, element.props, 'prop', name, element);
+    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
+      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
+
+      var _name = getComponentNameFromType(type);
+
+      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
+    }
+
+    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
+      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
+    }
+  }
+}
+/**
+ * Given a fragment, validate that it can only be provided with fragment props
+ * @param {ReactElement} fragment
+ */
+
+
+function validateFragmentProps(fragment) {
+  {
+    var keys = Object.keys(fragment.props);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+
+      if (key !== 'children' && key !== 'key') {
+        setCurrentlyValidatingElement$1(fragment);
+
+        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
+
+        setCurrentlyValidatingElement$1(null);
+        break;
+      }
+    }
+
+    if (fragment.ref !== null) {
+      setCurrentlyValidatingElement$1(fragment);
+
+      error('Invalid attribute `ref` supplied to `React.Fragment`.');
+
+      setCurrentlyValidatingElement$1(null);
+    }
+  }
+}
+function createElementWithValidation(type, props, children) {
+  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
+  // succeed and there will likely be errors in render.
+
+  if (!validType) {
+    var info = '';
+
+    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
+      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
+    }
+
+    var sourceInfo = getSourceInfoErrorAddendumForProps(props);
+
+    if (sourceInfo) {
+      info += sourceInfo;
+    } else {
+      info += getDeclarationErrorAddendum();
+    }
+
+    var typeString;
+
+    if (type === null) {
+      typeString = 'null';
+    } else if (isArray(type)) {
+      typeString = 'array';
+    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
+      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
+      info = ' Did you accidentally export a JSX literal instead of a component?';
+    } else {
+      typeString = typeof type;
+    }
+
+    {
+      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
+    }
+  }
+
+  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
+  // TODO: Drop this when these are no longer allowed as the type argument.
+
+  if (element == null) {
+    return element;
+  } // Skip key warning if the type isn't valid since our key validation logic
+  // doesn't expect a non-string/function type and can throw confusing errors.
+  // We don't want exception behavior to differ between dev and prod.
+  // (Rendering will throw with a helpful message and as soon as the type is
+  // fixed, the key warnings will appear.)
+
+
+  if (validType) {
+    for (var i = 2; i < arguments.length; i++) {
+      validateChildKeys(arguments[i], type);
+    }
+  }
+
+  if (type === REACT_FRAGMENT_TYPE) {
+    validateFragmentProps(element);
+  } else {
+    validatePropTypes(element);
+  }
+
+  return element;
+}
+function cloneElementWithValidation(element, props, children) {
+  var newElement = cloneElement.apply(this, arguments);
+
+  for (var i = 2; i < arguments.length; i++) {
+    validateChildKeys(arguments[i], newElement.type);
+  }
+
+  validatePropTypes(newElement);
+  return newElement;
+}
+
+function createMutableSource(source, getVersion) {
+  var mutableSource = {
+    _getVersion: getVersion,
+    _source: source,
+    _workInProgressVersionPrimary: null,
+    _workInProgressVersionSecondary: null
+  };
+
+  {
+    mutableSource._currentPrimaryRenderer = null;
+    mutableSource._currentSecondaryRenderer = null; // Used to detect side effects that update a mutable source during render.
+    // See https://github.com/facebook/react/issues/19948
+
+    mutableSource._currentlyRenderingFiber = null;
+    mutableSource._initialVersionAsOfFirstRender = null;
+  }
+
+  return mutableSource;
+}
+
+function startTransition(scope, options) {
+  var prevTransition = ReactCurrentBatchConfig.transition;
+  ReactCurrentBatchConfig.transition = {};
+  var currentTransition = ReactCurrentBatchConfig.transition;
+
+  {
+    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
+  }
+
+  try {
+    scope();
+  } finally {
+    ReactCurrentBatchConfig.transition = prevTransition;
+
+    {
+      if (prevTransition === null && currentTransition._updatedFibers) {
+        var updatedFibersCount = currentTransition._updatedFibers.size;
+
+        if (updatedFibersCount > 10) {
+          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
+        }
+
+        currentTransition._updatedFibers.clear();
+      }
+    }
+  }
+}
+
+var createElement$1 =  createElementWithValidation ;
+var cloneElement$1 =  cloneElementWithValidation ;
+var Children = {
+  map: mapChildren,
+  forEach: forEachChildren,
+  count: countChildren,
+  toArray: toArray,
+  only: onlyChild
+};
+
+exports.Children = Children;
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.Profiler = REACT_PROFILER_TYPE;
+exports.StrictMode = REACT_STRICT_MODE_TYPE;
+exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
+exports.cloneElement = cloneElement$1;
+exports.createElement = createElement$1;
+exports.createRef = createRef;
+exports.forwardRef = forwardRef;
+exports.isValidElement = isValidElement;
+exports.lazy = lazy;
+exports.memo = memo;
+exports.startTransition = startTransition;
+exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+exports.unstable_createMutableSource = createMutableSource;
+exports.unstable_getCacheForType = getCacheForType;
+exports.unstable_getCacheSignal = getCacheSignal;
+exports.unstable_useDeferredValue = useDeferredValue;
+exports.unstable_useMutableSource = useMutableSource;
+exports.useCallback = useCallback;
+exports.useContext = useContext;
+exports.useDebugValue = useDebugValue;
+exports.useDeferredValue = useDeferredValue;
+exports.useId = useId;
+exports.useMemo = useMemo;
+exports.useTransition = useTransition;
+exports.version = ReactVersion;
+//# sourceMappingURL=react.shared-subset.development.js.map
diff --git a/node_modules/react/cjs/react.shared-subset.development.js.map b/node_modules/react/cjs/react.shared-subset.development.js.map
new file mode 100644
index 0000000..3f9045e
--- /dev/null
+++ b/node_modules/react/cjs/react.shared-subset.development.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.shared-subset.development.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentActQueue.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactDebugCurrentFrame.js","D:/code-projects/debugger-learning/react/packages/shared/ReactFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/consoleWithStackDev.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/CheckStringCoercion.js","D:/code-projects/debugger-learning/react/packages/shared/getComponentNameFromType.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/shared/isValidElementType.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/shared/ConsolePatchingDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMutableSource.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ntype RendererTask = boolean => RendererTask | null;\r\n\r\nconst ReactCurrentActQueue = {\r\n  current: (null: null | Array<RendererTask>),\r\n\r\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\r\n  isBatchingLegacy: false,\r\n  didScheduleLegacyUpdate: false,\r\n};\r\n\r\nexport default ReactCurrentActQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst ReactDebugCurrentFrame = {};\r\n\r\nlet currentExtraStackFrame = (null: null | string);\r\n\r\nexport function setExtraStackFrame(stack: null | string) {\r\n  if (__DEV__) {\r\n    currentExtraStackFrame = stack;\r\n  }\r\n}\r\n\r\nif (__DEV__) {\r\n  ReactDebugCurrentFrame.setExtraStackFrame = function(stack: null | string) {\r\n    if (__DEV__) {\r\n      currentExtraStackFrame = stack;\r\n    }\r\n  };\r\n  // Stack implementation injected by the current renderer.\r\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\r\n\r\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\r\n    let stack = '';\r\n\r\n    // Add an extra top frame while an element is being validated\r\n    if (currentExtraStackFrame) {\r\n      stack += currentExtraStackFrame;\r\n    }\r\n\r\n    // Delegate to the injected renderer-specific implementation\r\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\r\n    if (impl) {\r\n      stack += impl() || '';\r\n    }\r\n\r\n    return stack;\r\n  };\r\n}\r\n\r\nexport default ReactDebugCurrentFrame;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (zero effort)\r\n//\r\n// Flags that can likely be deleted or landed without consequences\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const warnAboutDeprecatedLifecycles = true;\r\nexport const enableComponentStackLocations = true;\r\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (moderate effort)\r\n//\r\n// Flags that can be probably deleted or landed, but might require extra effort\r\n// like migrating internal callers or performance testing.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This is blocked on adding a symbol polyfill to www.\r\nexport const enableSymbolFallbackForWWW = false;\r\n\r\n// This rolled out to 10% public in www, so we should be able to land, but some\r\n// internal tests need to be updated. The open source behavior is correct.\r\nexport const skipUnmountedBoundaries = true;\r\n\r\n// TODO: Finish rolling out in www\r\nexport const enableClientRenderFallbackOnTextMismatch = true;\r\n\r\n// TODO: Need to review this code one more time before landing\r\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\r\n\r\n// Recoil still uses useMutableSource in www, need to delete\r\nexport const enableUseMutableSource = false;\r\n\r\n// Not sure if www still uses this. We don't have a replacement but whatever we\r\n// replace it with will likely be different than what's already there, so we\r\n// probably should just delete it as long as nothing in www relies on it.\r\nexport const enableSchedulerDebugging = false;\r\n\r\n// Need to remove didTimeout argument from Scheduler before landing\r\nexport const disableSchedulerTimeoutInWorkLoop = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Slated for removal in the future (significant effort)\r\n//\r\n// These are experiments that didn't work out, and never shipped, but we can't\r\n// delete from the codebase until we migrate internal callers.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Add a callback property to suspense to notify which promises are currently\r\n// in the update queue. This allows reporting and tracing of what is causing\r\n// the user to see a loading state.\r\n//\r\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\r\n// hydrated or deleted.\r\n//\r\n// This will eventually be replaced by the Transition Tracing proposal.\r\nexport const enableSuspenseCallback = false;\r\n\r\n// Experimental Scope support.\r\nexport const enableScopeAPI = false;\r\n\r\n// Experimental Create Event Handle API.\r\nexport const enableCreateEventHandleAPI = false;\r\n\r\n// This controls whether you get the `.old` modules or the `.new` modules in\r\n// the react-reconciler package.\r\nexport const enableNewReconciler = false;\r\n\r\n// Support legacy Primer support on internal FB www\r\nexport const enableLegacyFBSupport = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Ongoing experiments\r\n//\r\n// These are features that we're either actively exploring or are reasonably\r\n// likely to include in an upcoming release.\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const enableCache = __EXPERIMENTAL__;\r\nexport const enableCacheElement = __EXPERIMENTAL__;\r\n\r\nexport const enableTransitionTracing = false;\r\n\r\n// No known bugs, but needs performance testing\r\nexport const enableLazyContextPropagation = false;\r\n\r\n// FB-only usage. The new API has different semantics.\r\nexport const enableLegacyHidden = false;\r\n\r\n// Enables unstable_avoidThisFallback feature in Fiber\r\nexport const enableSuspenseAvoidThisFallback = false;\r\n// Enables unstable_avoidThisFallback feature in Fizz\r\nexport const enableSuspenseAvoidThisFallbackFizz = false;\r\n\r\nexport const enableCPUSuspense = __EXPERIMENTAL__;\r\n\r\n// When a node is unmounted, recurse into the Fiber subtree and clean out\r\n// references. Each level cleans up more fiber fields than the previous level.\r\n// As far as we know, React itself doesn't leak, but because the Fiber contains\r\n// cycles, even a single leak in product code can cause us to retain large\r\n// amounts of memory.\r\n//\r\n// The long term plan is to remove the cycles, but in the meantime, we clear\r\n// additional fields to mitigate.\r\n//\r\n// It's an enum so that we can experiment with different levels of\r\n// aggressiveness.\r\nexport const deletedTreeCleanUpLevel = 3;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Chopping Block\r\n//\r\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\r\n// when we we plan to enable them.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This flag enables Strict Effects by default. We're not turning this on until\r\n// after 18 because it requires migration work. Recommendation is to use\r\n// <StrictMode /> to gradually upgrade components.\r\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\r\n// If FALSE, these trees will be StrictLegacyMode.\r\nexport const createRootStrictEffectsByDefault = false;\r\n\r\nexport const disableModulePatternComponents = false;\r\n\r\nexport const disableLegacyContext = false;\r\n\r\nexport const enableUseRefAccessWarning = false;\r\n\r\n// Enables time slicing for updates that aren't wrapped in startTransition.\r\nexport const enableSyncDefaultUpdates = true;\r\n\r\n// Adds an opt-in to time slicing for updates that aren't wrapped in\r\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\r\nexport const allowConcurrentByDefault = false;\r\n\r\n// Updates that occur in the render phase are not officially supported. But when\r\n// they do occur, we defer them to a subsequent render by picking a lane that's\r\n// not currently rendering. We treat them the same as if they came from an\r\n// interleaved event. Remove this flag once we have migrated to the\r\n// new behavior.\r\n// NOTE: Not sure if we'll end up doing this or not.\r\nexport const deferRenderPhaseUpdateToNextBatch = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// React DOM Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to React DOM. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Disable support for comment nodes as React DOM containers. Already disabled\r\n// in open source, but www codebase still relies on it. Need to remove.\r\nexport const disableCommentsAsDOMContainers = true;\r\n\r\n// Disable javascript: URL strings in href for XSS protection.\r\nexport const disableJavaScriptURLs = false;\r\n\r\nexport const enableTrustedTypesIntegration = false;\r\n\r\n// Prevent the value and checked attributes from syncing with their related\r\n// DOM properties\r\nexport const disableInputAttributeSyncing = false;\r\n\r\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\r\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\r\n// request for certain browsers.\r\nexport const enableFilterEmptyStringAttributesDOM = false;\r\n\r\n// Changes the behavior for rendering custom elements in both server rendering\r\n// and client rendering, mostly to allow JSX attributes to apply to the custom\r\n// element's object properties instead of only HTML attributes.\r\n// https://github.com/facebook/react/issues/11347\r\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\r\n\r\n// Disables children for <textarea> elements\r\nexport const disableTextareaChildren = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// JSX Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to JSX. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\r\n\r\n// Part of the simplification of React.createElement so we can eventually move\r\n// from React.createElement to React.jsx\r\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\r\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\r\n\r\n// Enables a warning when trying to spread a 'key' to an element;\r\n// a deprecated pattern we want to get rid of in the future\r\nexport const warnAboutSpreadingKeyToJSX = false;\r\n\r\nexport const warnAboutStringRefs = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\nexport const enableSchedulingProfiler = __PROFILE__;\r\n\r\n// Helps identify side effects in render-phase lifecycle hooks and setState\r\n// reducers by double invoking them in StrictLegacyMode.\r\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\r\n\r\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\r\n// this feature flag only impacts StrictEffectsMode.\r\nexport const enableStrictEffects = __DEV__;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nexport const enableProfilerTimer = __PROFILE__;\r\n\r\n// Record durations for commit and passive effects phases.\r\nexport const enableProfilerCommitHooks = __PROFILE__;\r\n\r\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\r\n\r\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\nexport const enableDebugTracing = false;\r\n\r\n// Track which Fiber(s) schedule render work.\r\nexport const enableUpdaterTracking = __PROFILE__;\r\n\r\n// Only enabled in RN, related to enableComponentStackLocations\r\nexport const disableNativeComponentFrames = false;\r\nexport const enableServerContext = __EXPERIMENTAL__;\r\n\r\n// Internal only.\r\nexport const enableGetInspectorDataForInstanceInProduction = false;\r\n\r\n// Profiler API accepts a function to be called when a nested update is scheduled.\r\n// This callback accepts the component type (class instance or function) the update is scheduled for.\r\nexport const enableProfilerNestedUpdateScheduledHook = false;\r\n\r\nexport const consoleManagedByDevToolsDuringStrictMode = true;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nlet suppressWarning = false;\r\nexport function setSuppressWarning(newSuppressWarning) {\r\n  if (__DEV__) {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n}\r\n\r\n// In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nexport function warn(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport function error(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  if (__DEV__) {\r\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    }\r\n\r\n    // eslint-disable-next-line react-internal/safe-string-coercion\r\n    const argsWithFormat = args.map(item => String(item));\r\n    // Careful: RN currently depends on this prefix\r\n    argsWithFormat.unshift('Warning: ' + format);\r\n    // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value: mixed): string {\r\n  if (__DEV__) {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    const type =\r\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\r\n      (value: any).constructor.name ||\r\n      'Object';\r\n    return type;\r\n  }\r\n}\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction willCoercionThrow(value: mixed): boolean {\r\n  if (__DEV__) {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value: mixed) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + (value: any);\r\n}\r\n\r\nexport function checkAttributeStringCoercion(\r\n  value: mixed,\r\n  attributeName: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` attribute is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        attributeName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkKeyStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided key is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkPropStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` prop is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` CSS property is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkHtmlStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided HTML markup uses a value of unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkFormFieldValueStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\r\n          ' must be strings, not %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {\r\n  enableServerContext,\r\n  enableTransitionTracing,\r\n  enableCache,\r\n} from './ReactFeatureFlags';\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const displayName = (outerType: any).displayName;\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\r\n}\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\nexport default function getComponentNameFromType(type: mixed): string | null {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  if (__DEV__) {\r\n    if (typeof (type: any).tag === 'number') {\r\n      console.error(\r\n        'Received an unexpected object in getComponentNameFromType(). ' +\r\n          'This is likely a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return (type: any).displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n    case REACT_CACHE_TYPE:\r\n      if (enableCache) {\r\n        return 'Cache';\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case REACT_TRACING_MARKER_TYPE:\r\n      if (enableTransitionTracing) {\r\n        return 'TracingMarker';\r\n      }\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        const context: ReactContext<any> = (type: any);\r\n        return getContextName(context) + '.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        const provider: ReactProviderType<any> = (type: any);\r\n        return getContextName(provider._context) + '.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        const outerName = (type: any).displayName || null;\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n      case REACT_SERVER_CONTEXT_TYPE:\r\n        if (enableServerContext) {\r\n          const context2 = ((type: any): ReactContext<any>);\r\n          return (context2.displayName || context2._globalName) + '.Provider';\r\n        }\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {\r\n  enableScopeAPI,\r\n  enableCacheElement,\r\n  enableTransitionTracing,\r\n  enableDebugTracing,\r\n  enableLegacyHidden,\r\n  enableSymbolFallbackForWWW,\r\n} from './ReactFeatureFlags';\r\n\r\nlet REACT_MODULE_REFERENCE;\r\nif (enableSymbolFallbackForWWW) {\r\n  if (typeof Symbol === 'function') {\r\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n  } else {\r\n    REACT_MODULE_REFERENCE = 0;\r\n  }\r\n} else {\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nexport default function isValidElementType(type: mixed) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  }\r\n\r\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\r\n    type === REACT_OFFSCREEN_TYPE ||\r\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\r\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\r\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n      // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_MODULE_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport isArray from 'shared/isArray';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport {\r\n  isValidElement,\r\n  createElement,\r\n  cloneElement,\r\n  jsxDEV,\r\n} from './ReactElement';\r\nimport {setExtraStackFrame} from './ReactDebugCurrentFrame';\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      setExtraStackFrame(stack);\r\n    } else {\r\n      setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (ReactCurrentOwner.current) {\r\n    const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n    if (name) {\r\n      return '\\n\\nCheck the render method of `' + name + '`.';\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (source !== undefined) {\r\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n    const lineNumber = source.lineNumber;\r\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\r\n  if (elementProps !== null && elementProps !== undefined) {\r\n    return getSourceInfoErrorAddendum(elementProps.__source);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  let info = getDeclarationErrorAddendum();\r\n\r\n  if (!info) {\r\n    const parentName =\r\n      typeof parentType === 'string'\r\n        ? parentType\r\n        : parentType.displayName || parentType.name;\r\n    if (parentName) {\r\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n    }\r\n  }\r\n  return info;\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (!element._store || element._store.validated || element.key != null) {\r\n    return;\r\n  }\r\n  element._store.validated = true;\r\n\r\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n    return;\r\n  }\r\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n  // Usually the current owner is the offender, but if it accepts children as a\r\n  // property, it may be the creator of the child that's responsible for\r\n  // assigning it a key.\r\n  let childOwner = '';\r\n  if (\r\n    element &&\r\n    element._owner &&\r\n    element._owner !== ReactCurrentOwner.current\r\n  ) {\r\n    // Give the component that originally created this child.\r\n    childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n      element._owner.type,\r\n    )}.`;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (typeof node !== 'object') {\r\n    return;\r\n  }\r\n  if (isArray(node)) {\r\n    for (let i = 0; i < node.length; i++) {\r\n      const child = node[i];\r\n      if (isValidElement(child)) {\r\n        validateExplicitKey(child, parentType);\r\n      }\r\n    }\r\n  } else if (isValidElement(node)) {\r\n    // This element was passed in a valid location.\r\n    if (node._store) {\r\n      node._store.validated = true;\r\n    }\r\n  } else if (node) {\r\n    const iteratorFn = getIteratorFn(node);\r\n    if (typeof iteratorFn === 'function') {\r\n      // Entry iterators used to provide implicit keys,\r\n      // but now we print a separate warning for them later.\r\n      if (iteratorFn !== node.entries) {\r\n        const iterator = iteratorFn.call(node);\r\n        let step;\r\n        while (!(step = iterator.next()).done) {\r\n          if (isValidElement(step.value)) {\r\n            validateExplicitKey(step.value, parentType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendum(source);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = jsxDEV(type, props, key, source, self);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n\r\n  if (validType) {\r\n    const children = props.children;\r\n    if (children !== undefined) {\r\n      if (isStaticChildren) {\r\n        if (isArray(children)) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            validateChildKeys(children[i], type);\r\n          }\r\n\r\n          if (Object.freeze) {\r\n            Object.freeze(children);\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        validateChildKeys(children, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, true);\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, false);\r\n}\r\n\r\nexport function createElementWithValidation(type, props, children) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendumForProps(props);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.createElement: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = createElement.apply(this, arguments);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n  if (validType) {\r\n    for (let i = 2; i < arguments.length; i++) {\r\n      validateChildKeys(arguments[i], type);\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nlet didWarnAboutDeprecatedCreateFactory = false;\r\n\r\nexport function createFactoryWithValidation(type) {\r\n  const validatedFactory = createElementWithValidation.bind(null, type);\r\n  validatedFactory.type = type;\r\n  if (__DEV__) {\r\n    if (!didWarnAboutDeprecatedCreateFactory) {\r\n      didWarnAboutDeprecatedCreateFactory = true;\r\n      console.warn(\r\n        'React.createFactory() is deprecated and will be removed in ' +\r\n          'a future major release. Consider using JSX ' +\r\n          'or use React.createElement() directly instead.',\r\n      );\r\n    }\r\n    // Legacy hook: remove it\r\n    Object.defineProperty(validatedFactory, 'type', {\r\n      enumerable: false,\r\n      get: function() {\r\n        console.warn(\r\n          'Factory.type is deprecated. Access the class directly ' +\r\n            'before passing it to createFactory.',\r\n        );\r\n        Object.defineProperty(this, 'type', {\r\n          value: type,\r\n        });\r\n        return type;\r\n      },\r\n    });\r\n  }\r\n\r\n  return validatedFactory;\r\n}\r\n\r\nexport function cloneElementWithValidation(element, props, children) {\r\n  const newElement = cloneElement.apply(this, arguments);\r\n  for (let i = 2; i < arguments.length; i++) {\r\n    validateChildKeys(arguments[i], newElement.type);\r\n  }\r\n  validatePropTypes(newElement);\r\n  return newElement;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {MutableSource, MutableSourceGetVersionFn} from 'shared/ReactTypes';\r\n\r\nexport function createMutableSource<Source: $NonMaybeType<mixed>>(\r\n  source: Source,\r\n  getVersion: MutableSourceGetVersionFn,\r\n): MutableSource<Source> {\r\n  const mutableSource: MutableSource<Source> = {\r\n    _getVersion: getVersion,\r\n    _source: source,\r\n    _workInProgressVersionPrimary: null,\r\n    _workInProgressVersionSecondary: null,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    mutableSource._currentPrimaryRenderer = null;\r\n    mutableSource._currentSecondaryRenderer = null;\r\n\r\n    // Used to detect side effects that update a mutable source during render.\r\n    // See https://github.com/facebook/react/issues/19948\r\n    mutableSource._currentlyRenderingFiber = null;\r\n    mutableSource._initialVersionAsOfFirstRender = null;\r\n  }\r\n\r\n  return mutableSource;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","ContextRegistry","ReactSharedInternals","warn","format","args","printWarning","error","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","Error","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","Array","isArray","a","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","tag","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","arguments","length","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","thenable","then","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","defineProperties","set","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","REACT_MODULE_REFERENCE","isValidElementType","enableCacheElement","getModuleId","memo","compare","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","realContext","Consumer","Provider","useCallback","deps","useMemo","create","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useMutableSource","getSnapshot","subscribe","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","reenableLogs","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","checkPropTypes","typeSpecs","values","location","has","bind","typeSpecName","err","ex","message","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","cloneElementWithValidation","createMutableSource","getVersion","mutableSource","_getVersion","_workInProgressVersionPrimary","_workInProgressVersionSecondary","_currentPrimaryRenderer","_currentSecondaryRenderer","_currentlyRenderingFiber","_initialVersionAsOfFirstRender","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","updatedFibersCount","size","clear","__DEV__","Children","forEach","only"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react/cjs/react.shared-subset.production.min.js b/node_modules/react/cjs/react.shared-subset.production.min.js
new file mode 100644
index 0000000..e9a7fcf
--- /dev/null
+++ b/node_modules/react/cjs/react.shared-subset.production.min.js
@@ -0,0 +1,921 @@
+'use strict';
+
+// TODO: this is special because it gets imported during build.
+//
+// TODO: 18.0.0 has not been released to NPM;
+// It exists as a placeholder so that DevTools can support work tag changes between releases.
+// When we next publish a release, update the matching TODO in backend/renderer.js
+// TODO: This module is used both by the release scripts and to expose a version
+// at runtime. We should instead inject the version number as part of the build
+// process, and use the ReactVersions.js module as the single source of truth.
+var ReactVersion = '18.2.0';
+
+// ATTENTION
+// When adding new symbols to this file,
+// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+// The Symbol used to tag the ReactElement-like types.
+const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+const REACT_PORTAL_TYPE = Symbol.for('react.portal');
+const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+const REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+const REACT_MEMO_TYPE = Symbol.for('react.memo');
+const REACT_LAZY_TYPE = Symbol.for('react.lazy');
+const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+const MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+const FAUX_ITERATOR_SYMBOL = '@@iterator';
+function getIteratorFn(maybeIterable) {
+  if (maybeIterable === null || typeof maybeIterable !== 'object') {
+    return null;
+  }
+
+  const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+  if (typeof maybeIterator === 'function') {
+    return maybeIterator;
+  }
+
+  return null;
+}
+
+// Do not require this module directly! Use normal `invariant` calls with
+// template literal strings. The messages will be replaced with error codes
+// during build.
+function formatProdErrorMessage(code) {
+  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;
+
+  for (let i = 1; i < arguments.length; i++) {
+    url += '&args[]=' + encodeURIComponent(arguments[i]);
+  }
+
+  return "Minified React error #" + code + "; visit " + url + " for the full message or " + 'use the non-minified dev environment for full errors and additional ' + 'helpful warnings.';
+}
+
+/**
+ * This is the abstract API for an update queue.
+ */
+
+
+const ReactNoopUpdateQueue = {
+  /**
+   * Checks whether or not this composite component is mounted.
+   * @param {ReactClass} publicInstance The instance we want to test.
+   * @return {boolean} True if mounted, false otherwise.
+   * @protected
+   * @final
+   */
+  isMounted: function (publicInstance) {
+    return false;
+  },
+
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueForceUpdate: function (publicInstance, callback, callerName) {
+  },
+
+  /**
+   * Replaces all of the state. Always use this or `setState` to mutate state.
+   * You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} completeState Next state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} callerName name of the calling function in the public API.
+   * @internal
+   */
+  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+  },
+
+  /**
+   * Sets a subset of the state. This only exists because _pendingState is
+   * internal. This provides a merging strategy that is not available to deep
+   * properties which is confusing. TODO: Expose pendingState or don't use it
+   * during the merge.
+   *
+   * @param {ReactClass} publicInstance The instance that should rerender.
+   * @param {object} partialState Next partial state to be merged with state.
+   * @param {?function} callback Called after component is updated.
+   * @param {?string} Name of the calling function in the public API.
+   * @internal
+   */
+  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+  }
+};
+
+const assign = Object.assign;
+
+const emptyObject = {};
+/**
+ * Base class helpers for the updating state of a component.
+ */
+
+
+function Component(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+  // renderer.
+
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+Component.prototype.isReactComponent = {};
+/**
+ * Sets a subset of the state. Always use this to mutate
+ * state. You should treat `this.state` as immutable.
+ *
+ * There is no guarantee that `this.state` will be immediately updated, so
+ * accessing `this.state` after calling this method may return the old value.
+ *
+ * There is no guarantee that calls to `setState` will run synchronously,
+ * as they may eventually be batched together.  You can provide an optional
+ * callback that will be executed when the call to setState is actually
+ * completed.
+ *
+ * When a function is provided to setState, it will be called at some point in
+ * the future (not synchronously). It will be called with the up to date
+ * component arguments (state, props, context). These values can be different
+ * from this.* because your function may be called after receiveProps but before
+ * shouldComponentUpdate, and this new state, props, and context will not yet be
+ * assigned to this.
+ *
+ * @param {object|function} partialState Next partial state or function to
+ *        produce next partial state to be merged with current state.
+ * @param {?function} callback Called after state is updated.
+ * @final
+ * @protected
+ */
+
+Component.prototype.setState = function (partialState, callback) {
+  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+    throw Error(formatProdErrorMessage(85));
+  }
+
+  this.updater.enqueueSetState(this, partialState, callback, 'setState');
+};
+/**
+ * Forces an update. This should only be invoked when it is known with
+ * certainty that we are **not** in a DOM transaction.
+ *
+ * You may want to call this when you know that some deeper aspect of the
+ * component's state has changed but `setState` was not called.
+ *
+ * This will not invoke `shouldComponentUpdate`, but it will invoke
+ * `componentWillUpdate` and `componentDidUpdate`.
+ *
+ * @param {?function} callback Called after update is complete.
+ * @final
+ * @protected
+ */
+
+
+Component.prototype.forceUpdate = function (callback) {
+  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+};
+
+function ComponentDummy() {}
+
+ComponentDummy.prototype = Component.prototype;
+/**
+ * Convenience component with default shallow equality check for sCU.
+ */
+
+function PureComponent(props, context, updater) {
+  this.props = props;
+  this.context = context; // If a component has string refs, we will assign a different object later.
+
+  this.refs = emptyObject;
+  this.updater = updater || ReactNoopUpdateQueue;
+}
+
+const pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+assign(pureComponentPrototype, Component.prototype);
+pureComponentPrototype.isPureReactComponent = true;
+
+// an immutable object with a single mutable value
+function createRef() {
+  const refObject = {
+    current: null
+  };
+
+  return refObject;
+}
+
+const isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+function isArray(a) {
+  return isArrayImpl(a);
+}
+
+const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+/**
+ * Keeps track of the current owner.
+ *
+ * The current owner is the component who should own any components that are
+ * currently being constructed.
+ */
+const ReactCurrentOwner = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+const RESERVED_PROPS = {
+  key: true,
+  ref: true,
+  __self: true,
+  __source: true
+};
+
+function hasValidRef(config) {
+
+  return config.ref !== undefined;
+}
+
+function hasValidKey(config) {
+
+  return config.key !== undefined;
+}
+/**
+ * Factory method to create a new React element. This no longer adheres to
+ * the class pattern, so do not use new to call it. Also, instanceof check
+ * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+ * if something is a React Element.
+ *
+ * @param {*} type
+ * @param {*} props
+ * @param {*} key
+ * @param {string|object} ref
+ * @param {*} owner
+ * @param {*} self A *temporary* helper to detect places where `this` is
+ * different from the `owner` when React.createElement is called, so that we
+ * can warn. We want to get rid of owner and replace string `ref`s with arrow
+ * functions, and as long as `this` and owner are the same, there will be no
+ * change in behavior.
+ * @param {*} source An annotation object (added by a transpiler or otherwise)
+ * indicating filename, line number, and/or other information.
+ * @internal
+ */
+
+
+const ReactElement = function (type, key, ref, self, source, owner, props) {
+  const element = {
+    // This tag allows us to uniquely identify this as a React Element
+    $$typeof: REACT_ELEMENT_TYPE,
+    // Built-in properties that belong on the element
+    type: type,
+    key: key,
+    ref: ref,
+    props: props,
+    // Record the component responsible for creating this element.
+    _owner: owner
+  };
+
+  return element;
+};
+/**
+ * Create and return a new ReactElement of the given type.
+ * See https://reactjs.org/docs/react-api.html#createelement
+ */
+
+function createElement(type, config, children) {
+  let propName; // Reserved names are extracted
+
+  const props = {};
+  let key = null;
+  let ref = null;
+  let self = null;
+  let source = null;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      ref = config.ref;
+    }
+
+    if (hasValidKey(config)) {
+
+      key = '' + config.key;
+    }
+
+    self = config.__self === undefined ? null : config.__self;
+    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        props[propName] = config[propName];
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  const childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    const childArray = Array(childrenLength);
+
+    for (let i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  } // Resolve default props
+
+
+  if (type && type.defaultProps) {
+    const defaultProps = type.defaultProps;
+
+    for (propName in defaultProps) {
+      if (props[propName] === undefined) {
+        props[propName] = defaultProps[propName];
+      }
+    }
+  }
+
+  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+}
+function cloneAndReplaceKey(oldElement, newKey) {
+  const newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+  return newElement;
+}
+/**
+ * Clone and return a new ReactElement using element as the starting point.
+ * See https://reactjs.org/docs/react-api.html#cloneelement
+ */
+
+function cloneElement(element, config, children) {
+  if (element === null || element === undefined) {
+    throw Error(formatProdErrorMessage(267, element));
+  }
+
+  let propName; // Original props are copied
+
+  const props = assign({}, element.props); // Reserved names are extracted
+
+  let key = element.key;
+  let ref = element.ref; // Self is preserved since the owner is preserved.
+
+  const self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+  // transpiler, and the original source is probably a better indicator of the
+  // true owner.
+
+  const source = element._source; // Owner will be preserved, unless ref is overridden
+
+  let owner = element._owner;
+
+  if (config != null) {
+    if (hasValidRef(config)) {
+      // Silently steal the ref from the parent.
+      ref = config.ref;
+      owner = ReactCurrentOwner.current;
+    }
+
+    if (hasValidKey(config)) {
+
+      key = '' + config.key;
+    } // Remaining properties override existing props
+
+
+    let defaultProps;
+
+    if (element.type && element.type.defaultProps) {
+      defaultProps = element.type.defaultProps;
+    }
+
+    for (propName in config) {
+      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+        if (config[propName] === undefined && defaultProps !== undefined) {
+          // Resolve default props
+          props[propName] = defaultProps[propName];
+        } else {
+          props[propName] = config[propName];
+        }
+      }
+    }
+  } // Children can be more than one argument, and those are transferred onto
+  // the newly allocated props object.
+
+
+  const childrenLength = arguments.length - 2;
+
+  if (childrenLength === 1) {
+    props.children = children;
+  } else if (childrenLength > 1) {
+    const childArray = Array(childrenLength);
+
+    for (let i = 0; i < childrenLength; i++) {
+      childArray[i] = arguments[i + 2];
+    }
+
+    props.children = childArray;
+  }
+
+  return ReactElement(element.type, key, ref, self, source, owner, props);
+}
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+
+function isValidElement(object) {
+  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+}
+
+const SEPARATOR = '.';
+const SUBSEPARATOR = ':';
+/**
+ * Escape and wrap key so it is safe to use as a reactid
+ *
+ * @param {string} key to be escaped.
+ * @return {string} the escaped key.
+ */
+
+function escape(key) {
+  const escapeRegex = /[=:]/g;
+  const escaperLookup = {
+    '=': '=0',
+    ':': '=2'
+  };
+  const escapedString = key.replace(escapeRegex, function (match) {
+    return escaperLookup[match];
+  });
+  return '$' + escapedString;
+}
+const userProvidedKeyEscapeRegex = /\/+/g;
+
+function escapeUserProvidedKey(text) {
+  return text.replace(userProvidedKeyEscapeRegex, '$&/');
+}
+/**
+ * Generate a key string that identifies a element within a set.
+ *
+ * @param {*} element A element that could contain a manual key.
+ * @param {number} index Index that is used if a manual key is not provided.
+ * @return {string}
+ */
+
+
+function getElementKey(element, index) {
+  // Do some typechecking here since we call this blindly. We want to ensure
+  // that we don't block potential future ES APIs.
+  if (typeof element === 'object' && element !== null && element.key != null) {
+
+    return escape('' + element.key);
+  } // Implicit key determined by the index in the set
+
+
+  return index.toString(36);
+}
+
+function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+  const type = typeof children;
+
+  if (type === 'undefined' || type === 'boolean') {
+    // All of the above are perceived as null.
+    children = null;
+  }
+
+  let invokeCallback = false;
+
+  if (children === null) {
+    invokeCallback = true;
+  } else {
+    switch (type) {
+      case 'string':
+      case 'number':
+        invokeCallback = true;
+        break;
+
+      case 'object':
+        switch (children.$$typeof) {
+          case REACT_ELEMENT_TYPE:
+          case REACT_PORTAL_TYPE:
+            invokeCallback = true;
+        }
+
+    }
+  }
+
+  if (invokeCallback) {
+    const child = children;
+    let mappedChild = callback(child); // If it's the only child, treat the name as if it was wrapped in an array
+    // so that it's consistent if the number of children grows:
+
+    const childKey = nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;
+
+    if (isArray(mappedChild)) {
+      let escapedChildKey = '';
+
+      if (childKey != null) {
+        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+      }
+
+      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);
+    } else if (mappedChild != null) {
+      if (isValidElement(mappedChild)) {
+
+        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+        // traverseAllChildren used to do for objects as children
+        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+        mappedChild.key && (!child || child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+      }
+
+      array.push(mappedChild);
+    }
+
+    return 1;
+  }
+
+  let child;
+  let nextName;
+  let subtreeCount = 0; // Count of children found in the current subtree.
+
+  const nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+  if (isArray(children)) {
+    for (let i = 0; i < children.length; i++) {
+      child = children[i];
+      nextName = nextNamePrefix + getElementKey(child, i);
+      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+    }
+  } else {
+    const iteratorFn = getIteratorFn(children);
+
+    if (typeof iteratorFn === 'function') {
+      const iterableChildren = children;
+
+      const iterator = iteratorFn.call(iterableChildren);
+      let step;
+      let ii = 0;
+
+      while (!(step = iterator.next()).done) {
+        child = step.value;
+        nextName = nextNamePrefix + getElementKey(child, ii++);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else if (type === 'object') {
+      // eslint-disable-next-line react-internal/safe-string-coercion
+      const childrenString = String(children);
+      throw Error(formatProdErrorMessage(31, childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString));
+    }
+  }
+
+  return subtreeCount;
+}
+
+/**
+ * Maps children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+ *
+ * The provided mapFunction(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} func The map function.
+ * @param {*} context Context for mapFunction.
+ * @return {object} Object containing the ordered map of results.
+ */
+function mapChildren(children, func, context) {
+  if (children == null) {
+    return children;
+  }
+
+  const result = [];
+  let count = 0;
+  mapIntoArray(children, result, '', '', function (child) {
+    return func.call(context, child, count++);
+  });
+  return result;
+}
+/**
+ * Count the number of children that are typically specified as
+ * `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrencount
+ *
+ * @param {?*} children Children tree container.
+ * @return {number} The number of children.
+ */
+
+
+function countChildren(children) {
+  let n = 0;
+  mapChildren(children, () => {
+    n++; // Don't return anything
+  });
+  return n;
+}
+
+/**
+ * Iterates through children that are typically specified as `props.children`.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+ *
+ * The provided forEachFunc(child, index) will be called for each
+ * leaf child.
+ *
+ * @param {?*} children Children tree container.
+ * @param {function(*, int)} forEachFunc
+ * @param {*} forEachContext Context for forEachContext.
+ */
+function forEachChildren(children, forEachFunc, forEachContext) {
+  mapChildren(children, function () {
+    forEachFunc.apply(this, arguments); // Don't return anything.
+  }, forEachContext);
+}
+/**
+ * Flatten a children object (typically specified as `props.children`) and
+ * return an array with appropriately re-keyed children.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+ */
+
+
+function toArray(children) {
+  return mapChildren(children, child => child) || [];
+}
+/**
+ * Returns the first child in a collection of children and verifies that there
+ * is only one child in the collection.
+ *
+ * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+ *
+ * The current implementation of this function assumes that a single child gets
+ * passed without a wrapper, but the purpose of this helper function is to
+ * abstract away the particular structure of children.
+ *
+ * @param {?object} children Child collection structure.
+ * @return {ReactElement} The first and only `ReactElement` contained in the
+ * structure.
+ */
+
+
+function onlyChild(children) {
+  if (!isValidElement(children)) {
+    throw Error(formatProdErrorMessage(143));
+  }
+
+  return children;
+}
+
+const Uninitialized = -1;
+const Pending = 0;
+const Resolved = 1;
+const Rejected = 2;
+
+function lazyInitializer(payload) {
+  if (payload._status === Uninitialized) {
+    const ctor = payload._result;
+    const thenable = ctor(); // Transition to the next state.
+    // This might throw either because it's missing or throws. If so, we treat it
+    // as still uninitialized and try again next time. Which is the same as what
+    // happens if the ctor or any wrappers processing the ctor throws. This might
+    // end up fixing it if the resolution was a concurrency bug.
+
+    thenable.then(moduleObject => {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        const resolved = payload;
+        resolved._status = Resolved;
+        resolved._result = moduleObject;
+      }
+    }, error => {
+      if (payload._status === Pending || payload._status === Uninitialized) {
+        // Transition to the next state.
+        const rejected = payload;
+        rejected._status = Rejected;
+        rejected._result = error;
+      }
+    });
+
+    if (payload._status === Uninitialized) {
+      // In case, we're still uninitialized, then we're waiting for the thenable
+      // to resolve. Set it as pending in the meantime.
+      const pending = payload;
+      pending._status = Pending;
+      pending._result = thenable;
+    }
+  }
+
+  if (payload._status === Resolved) {
+    const moduleObject = payload._result;
+
+    return moduleObject.default;
+  } else {
+    throw payload._result;
+  }
+}
+
+function lazy(ctor) {
+  const payload = {
+    // We use these fields to store the result.
+    _status: Uninitialized,
+    _result: ctor
+  };
+  const lazyType = {
+    $$typeof: REACT_LAZY_TYPE,
+    _payload: payload,
+    _init: lazyInitializer
+  };
+
+  return lazyType;
+}
+
+function forwardRef(render) {
+
+  const elementType = {
+    $$typeof: REACT_FORWARD_REF_TYPE,
+    render
+  };
+
+  return elementType;
+}
+
+function memo(type, compare) {
+
+  const elementType = {
+    $$typeof: REACT_MEMO_TYPE,
+    type,
+    compare: compare === undefined ? null : compare
+  };
+
+  return elementType;
+}
+
+/**
+ * Keeps track of the current dispatcher.
+ */
+const ReactCurrentDispatcher = {
+  /**
+   * @internal
+   * @type {ReactComponent}
+   */
+  current: null
+};
+
+function resolveDispatcher() {
+  const dispatcher = ReactCurrentDispatcher.current;
+  // intentionally don't throw our own error because this is in a hot path.
+  // Also helps ensure this is inlined.
+
+
+  return dispatcher;
+}
+
+function getCacheSignal() {
+  const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheSignal();
+}
+function getCacheForType(resourceType) {
+  const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+  return dispatcher.getCacheForType(resourceType);
+}
+function useContext(Context) {
+  const dispatcher = resolveDispatcher();
+
+  return dispatcher.useContext(Context);
+}
+function useCallback(callback, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useCallback(callback, deps);
+}
+function useMemo(create, deps) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useMemo(create, deps);
+}
+function useDebugValue(value, formatterFn) {
+}
+function useTransition() {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useTransition();
+}
+function useDeferredValue(value) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useDeferredValue(value);
+}
+function useId() {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useId();
+}
+function useMutableSource(source, getSnapshot, subscribe) {
+  const dispatcher = resolveDispatcher();
+  return dispatcher.useMutableSource(source, getSnapshot, subscribe);
+}
+
+/**
+ * Keeps track of the current batch's configuration such as how long an update
+ * should suspend for if it needs to.
+ */
+const ReactCurrentBatchConfig = {
+  transition: null
+};
+
+const ContextRegistry = {};
+
+const ReactSharedInternals = {
+  ReactCurrentDispatcher,
+  ReactCurrentBatchConfig,
+  ReactCurrentOwner
+};
+
+{
+  ReactSharedInternals.ContextRegistry = ContextRegistry;
+}
+
+function createMutableSource(source, getVersion) {
+  const mutableSource = {
+    _getVersion: getVersion,
+    _source: source,
+    _workInProgressVersionPrimary: null,
+    _workInProgressVersionSecondary: null
+  };
+
+  return mutableSource;
+}
+
+function startTransition(scope, options) {
+  const prevTransition = ReactCurrentBatchConfig.transition;
+  ReactCurrentBatchConfig.transition = {};
+
+  try {
+    scope();
+  } finally {
+    ReactCurrentBatchConfig.transition = prevTransition;
+  }
+}
+
+const createElement$1 =  createElement;
+const cloneElement$1 =  cloneElement;
+const Children = {
+  map: mapChildren,
+  forEach: forEachChildren,
+  count: countChildren,
+  toArray,
+  only: onlyChild
+};
+
+exports.Children = Children;
+exports.Fragment = REACT_FRAGMENT_TYPE;
+exports.Profiler = REACT_PROFILER_TYPE;
+exports.StrictMode = REACT_STRICT_MODE_TYPE;
+exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
+exports.cloneElement = cloneElement$1;
+exports.createElement = createElement$1;
+exports.createRef = createRef;
+exports.forwardRef = forwardRef;
+exports.isValidElement = isValidElement;
+exports.lazy = lazy;
+exports.memo = memo;
+exports.startTransition = startTransition;
+exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+exports.unstable_createMutableSource = createMutableSource;
+exports.unstable_getCacheForType = getCacheForType;
+exports.unstable_getCacheSignal = getCacheSignal;
+exports.unstable_useDeferredValue = useDeferredValue;
+exports.unstable_useMutableSource = useMutableSource;
+exports.useCallback = useCallback;
+exports.useContext = useContext;
+exports.useDebugValue = useDebugValue;
+exports.useDeferredValue = useDeferredValue;
+exports.useId = useId;
+exports.useMemo = useMemo;
+exports.useTransition = useTransition;
+exports.version = ReactVersion;
+//# sourceMappingURL=react.shared-subset.production.min.js.map
diff --git a/node_modules/react/cjs/react.shared-subset.production.min.js.map b/node_modules/react/cjs/react.shared-subset.production.min.js.map
new file mode 100644
index 0000000..c38a8b9
--- /dev/null
+++ b/node_modules/react/cjs/react.shared-subset.production.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.shared-subset.production.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/shared/formatProdErrorMessage.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMutableSource.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n// Do not require this module directly! Use normal `invariant` calls with\r\n// template literal strings. The messages will be replaced with error codes\r\n// during build.\r\n\r\nfunction formatProdErrorMessage(code) {\r\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\r\n  for (let i = 1; i < arguments.length; i++) {\r\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\r\n  }\r\n  return (\r\n    `Minified React error #${code}; visit ${url} for the full message or ` +\r\n    'use the non-minified dev environment for full errors and additional ' +\r\n    'helpful warnings.'\r\n  );\r\n}\r\n\r\nexport default formatProdErrorMessage;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {MutableSource, MutableSourceGetVersionFn} from 'shared/ReactTypes';\r\n\r\nexport function createMutableSource<Source: $NonMaybeType<mixed>>(\r\n  source: Source,\r\n  getVersion: MutableSourceGetVersionFn,\r\n): MutableSource<Source> {\r\n  const mutableSource: MutableSource<Source> = {\r\n    _getVersion: getVersion,\r\n    _source: source,\r\n    _workInProgressVersionPrimary: null,\r\n    _workInProgressVersionSecondary: null,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    mutableSource._currentPrimaryRenderer = null;\r\n    mutableSource._currentSecondaryRenderer = null;\r\n\r\n    // Used to detect side effects that update a mutable source during render.\r\n    // See https://github.com/facebook/react/issues/19948\r\n    mutableSource._currentlyRenderingFiber = null;\r\n    mutableSource._initialVersionAsOfFirstRender = null;\r\n  }\r\n\r\n  return mutableSource;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","childArray","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useCallback","deps","useMemo","create","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useMutableSource","getSnapshot","subscribe","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createMutableSource","getVersion","mutableSource","_getVersion","_workInProgressVersionPrimary","_workInProgressVersionSecondary","startTransition","scope","options","prevTransition","__DEV__","createElementProd","cloneElementProd","Children","map","forEach","only"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react/index.js b/node_modules/react/index.js
index d830d7a..999ead7 100644
--- a/node_modules/react/index.js
+++ b/node_modules/react/index.js
@@ -1,7 +1,7 @@
 'use strict';
 
 if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./cjs/react.production.js');
+  module.exports = require('./cjs/react.production.min.js');
 } else {
   module.exports = require('./cjs/react.development.js');
 }
diff --git a/node_modules/react/jsx-dev-runtime.js b/node_modules/react/jsx-dev-runtime.js
index 0a80857..324eb11 100644
--- a/node_modules/react/jsx-dev-runtime.js
+++ b/node_modules/react/jsx-dev-runtime.js
@@ -1,7 +1,7 @@
 'use strict';
 
 if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');
+  module.exports = require('./cjs/react-jsx-dev-runtime.production.min.js');
 } else {
   module.exports = require('./cjs/react-jsx-dev-runtime.development.js');
 }
diff --git a/node_modules/react/jsx-runtime.js b/node_modules/react/jsx-runtime.js
index 8679b72..0416df5 100644
--- a/node_modules/react/jsx-runtime.js
+++ b/node_modules/react/jsx-runtime.js
@@ -1,7 +1,7 @@
 'use strict';
 
 if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./cjs/react-jsx-runtime.production.js');
+  module.exports = require('./cjs/react-jsx-runtime.production.min.js');
 } else {
   module.exports = require('./cjs/react-jsx-runtime.development.js');
 }
diff --git a/node_modules/react/react.shared-subset.js b/node_modules/react/react.shared-subset.js
new file mode 100644
index 0000000..694e966
--- /dev/null
+++ b/node_modules/react/react.shared-subset.js
@@ -0,0 +1,7 @@
+'use strict';
+
+if (process.env.NODE_ENV === 'production') {
+  module.exports = require('./cjs/react.shared-subset.production.min.js');
+} else {
+  module.exports = require('./cjs/react.shared-subset.development.js');
+}
diff --git a/node_modules/react/umd/react.development.js b/node_modules/react/umd/react.development.js
new file mode 100644
index 0000000..293b9c2
--- /dev/null
+++ b/node_modules/react/umd/react.development.js
@@ -0,0 +1,3464 @@
+(function (global, factory) {
+  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
+  typeof define === 'function' && define.amd ? define(['exports'], factory) :
+  (global = global || self, factory(global.React = {}));
+}(this, (function (exports) { 'use strict';
+
+  // TODO: this is special because it gets imported during build.
+  //
+  // TODO: 18.0.0 has not been released to NPM;
+  // It exists as a placeholder so that DevTools can support work tag changes between releases.
+  // When we next publish a release, update the matching TODO in backend/renderer.js
+  // TODO: This module is used both by the release scripts and to expose a version
+  // at runtime. We should instead inject the version number as part of the build
+  // process, and use the ReactVersions.js module as the single source of truth.
+  var ReactVersion = '18.2.0';
+
+  // ATTENTION
+  // When adding new symbols to this file,
+  // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+  // The Symbol used to tag the ReactElement-like types.
+  var REACT_ELEMENT_TYPE = Symbol.for('react.element');
+  var REACT_PORTAL_TYPE = Symbol.for('react.portal');
+  var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+  var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+  var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+  var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+  var REACT_CONTEXT_TYPE = Symbol.for('react.context');
+  var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+  var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+  var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+  var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+  var REACT_MEMO_TYPE = Symbol.for('react.memo');
+  var REACT_LAZY_TYPE = Symbol.for('react.lazy');
+  var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+  var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+  var REACT_CACHE_TYPE = Symbol.for('react.cache');
+  var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');
+  var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+  var FAUX_ITERATOR_SYMBOL = '@@iterator';
+  function getIteratorFn(maybeIterable) {
+    if (maybeIterable === null || typeof maybeIterable !== 'object') {
+      return null;
+    }
+
+    var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+    if (typeof maybeIterator === 'function') {
+      return maybeIterator;
+    }
+
+    return null;
+  }
+
+  /**
+   * Keeps track of the current dispatcher.
+   */
+  var ReactCurrentDispatcher = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  /**
+   * Keeps track of the current batch's configuration such as how long an update
+   * should suspend for if it needs to.
+   */
+  var ReactCurrentBatchConfig = {
+    transition: null
+  };
+
+  var ReactCurrentActQueue = {
+    current: null,
+    // Used to reproduce behavior of `batchedUpdates` in legacy mode.
+    isBatchingLegacy: false,
+    didScheduleLegacyUpdate: false
+  };
+
+  /**
+   * Keeps track of the current owner.
+   *
+   * The current owner is the component who should own any components that are
+   * currently being constructed.
+   */
+  var ReactCurrentOwner = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  var ReactDebugCurrentFrame = {};
+  var currentExtraStackFrame = null;
+  function setExtraStackFrame(stack) {
+    {
+      currentExtraStackFrame = stack;
+    }
+  }
+
+  {
+    ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
+      {
+        currentExtraStackFrame = stack;
+      }
+    }; // Stack implementation injected by the current renderer.
+
+
+    ReactDebugCurrentFrame.getCurrentStack = null;
+
+    ReactDebugCurrentFrame.getStackAddendum = function () {
+      var stack = ''; // Add an extra top frame while an element is being validated
+
+      if (currentExtraStackFrame) {
+        stack += currentExtraStackFrame;
+      } // Delegate to the injected renderer-specific implementation
+
+
+      var impl = ReactDebugCurrentFrame.getCurrentStack;
+
+      if (impl) {
+        stack += impl() || '';
+      }
+
+      return stack;
+    };
+  }
+
+  // -----------------------------------------------------------------------------
+
+  var enableScopeAPI = false; // Experimental Create Event Handle API.
+  var enableTransitionTracing = false; // No known bugs, but needs performance testing
+
+  var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
+  // stuff. Intended to enable React core members to more easily debug scheduling
+  // issues in DEV builds.
+
+  var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
+
+  var ContextRegistry = {};
+
+  var ReactSharedInternals = {
+    ReactCurrentDispatcher: ReactCurrentDispatcher,
+    ReactCurrentBatchConfig: ReactCurrentBatchConfig,
+    ReactCurrentOwner: ReactCurrentOwner
+  };
+
+  {
+    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
+    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
+  }
+
+  {
+    ReactSharedInternals.ContextRegistry = ContextRegistry;
+  }
+
+  // by calls to these methods by a Babel plugin.
+  //
+  // In PROD (or in packages without access to React internals),
+  // they are left as they are instead.
+
+  function warn(format) {
+    {
+      {
+        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
+          args[_key - 1] = arguments[_key];
+        }
+
+        printWarning('warn', format, args);
+      }
+    }
+  }
+  function error(format) {
+    {
+      {
+        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
+          args[_key2 - 1] = arguments[_key2];
+        }
+
+        printWarning('error', format, args);
+      }
+    }
+  }
+
+  function printWarning(level, format, args) {
+    // When changing this logic, you might want to also
+    // update consoleWithStackDev.www.js as well.
+    {
+      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
+      var stack = ReactDebugCurrentFrame.getStackAddendum();
+
+      if (stack !== '') {
+        format += '%s';
+        args = args.concat([stack]);
+      } // eslint-disable-next-line react-internal/safe-string-coercion
+
+
+      var argsWithFormat = args.map(function (item) {
+        return String(item);
+      }); // Careful: RN currently depends on this prefix
+
+      argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
+      // breaks IE9: https://github.com/facebook/react/issues/13610
+      // eslint-disable-next-line react-internal/no-production-logging
+
+      Function.prototype.apply.call(console[level], console, argsWithFormat);
+    }
+  }
+
+  var didWarnStateUpdateForUnmountedComponent = {};
+
+  function warnNoop(publicInstance, callerName) {
+    {
+      var _constructor = publicInstance.constructor;
+      var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
+      var warningKey = componentName + "." + callerName;
+
+      if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
+        return;
+      }
+
+      error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
+
+      didWarnStateUpdateForUnmountedComponent[warningKey] = true;
+    }
+  }
+  /**
+   * This is the abstract API for an update queue.
+   */
+
+
+  var ReactNoopUpdateQueue = {
+    /**
+     * Checks whether or not this composite component is mounted.
+     * @param {ReactClass} publicInstance The instance we want to test.
+     * @return {boolean} True if mounted, false otherwise.
+     * @protected
+     * @final
+     */
+    isMounted: function (publicInstance) {
+      return false;
+    },
+
+    /**
+     * Forces an update. This should only be invoked when it is known with
+     * certainty that we are **not** in a DOM transaction.
+     *
+     * You may want to call this when you know that some deeper aspect of the
+     * component's state has changed but `setState` was not called.
+     *
+     * This will not invoke `shouldComponentUpdate`, but it will invoke
+     * `componentWillUpdate` and `componentDidUpdate`.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueForceUpdate: function (publicInstance, callback, callerName) {
+      warnNoop(publicInstance, 'forceUpdate');
+    },
+
+    /**
+     * Replaces all of the state. Always use this or `setState` to mutate state.
+     * You should treat `this.state` as immutable.
+     *
+     * There is no guarantee that `this.state` will be immediately updated, so
+     * accessing `this.state` after calling this method may return the old value.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} completeState Next state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+      warnNoop(publicInstance, 'replaceState');
+    },
+
+    /**
+     * Sets a subset of the state. This only exists because _pendingState is
+     * internal. This provides a merging strategy that is not available to deep
+     * properties which is confusing. TODO: Expose pendingState or don't use it
+     * during the merge.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} partialState Next partial state to be merged with state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} Name of the calling function in the public API.
+     * @internal
+     */
+    enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+      warnNoop(publicInstance, 'setState');
+    }
+  };
+
+  var assign = Object.assign;
+
+  var emptyObject = {};
+
+  {
+    Object.freeze(emptyObject);
+  }
+  /**
+   * Base class helpers for the updating state of a component.
+   */
+
+
+  function Component(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+    // renderer.
+
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  Component.prototype.isReactComponent = {};
+  /**
+   * Sets a subset of the state. Always use this to mutate
+   * state. You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * There is no guarantee that calls to `setState` will run synchronously,
+   * as they may eventually be batched together.  You can provide an optional
+   * callback that will be executed when the call to setState is actually
+   * completed.
+   *
+   * When a function is provided to setState, it will be called at some point in
+   * the future (not synchronously). It will be called with the up to date
+   * component arguments (state, props, context). These values can be different
+   * from this.* because your function may be called after receiveProps but before
+   * shouldComponentUpdate, and this new state, props, and context will not yet be
+   * assigned to this.
+   *
+   * @param {object|function} partialState Next partial state or function to
+   *        produce next partial state to be merged with current state.
+   * @param {?function} callback Called after state is updated.
+   * @final
+   * @protected
+   */
+
+  Component.prototype.setState = function (partialState, callback) {
+    if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+      throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+    }
+
+    this.updater.enqueueSetState(this, partialState, callback, 'setState');
+  };
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {?function} callback Called after update is complete.
+   * @final
+   * @protected
+   */
+
+
+  Component.prototype.forceUpdate = function (callback) {
+    this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+  };
+  /**
+   * Deprecated APIs. These APIs used to exist on classic React classes but since
+   * we would like to deprecate them, we're not going to move them over to this
+   * modern base class. Instead, we define a getter that warns if it's accessed.
+   */
+
+
+  {
+    var deprecatedAPIs = {
+      isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
+      replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
+    };
+
+    var defineDeprecationWarning = function (methodName, info) {
+      Object.defineProperty(Component.prototype, methodName, {
+        get: function () {
+          warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
+
+          return undefined;
+        }
+      });
+    };
+
+    for (var fnName in deprecatedAPIs) {
+      if (deprecatedAPIs.hasOwnProperty(fnName)) {
+        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
+      }
+    }
+  }
+
+  function ComponentDummy() {}
+
+  ComponentDummy.prototype = Component.prototype;
+  /**
+   * Convenience component with default shallow equality check for sCU.
+   */
+
+  function PureComponent(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject;
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+  pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+  assign(pureComponentPrototype, Component.prototype);
+  pureComponentPrototype.isPureReactComponent = true;
+
+  // an immutable object with a single mutable value
+  function createRef() {
+    var refObject = {
+      current: null
+    };
+
+    {
+      Object.seal(refObject);
+    }
+
+    return refObject;
+  }
+
+  var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+  function isArray(a) {
+    return isArrayImpl(a);
+  }
+
+  /*
+   * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
+   * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
+   *
+   * The functions in this module will throw an easier-to-understand,
+   * easier-to-debug exception with a clear errors message message explaining the
+   * problem. (Instead of a confusing exception thrown inside the implementation
+   * of the `value` object).
+   */
+  // $FlowFixMe only called in DEV, so void return is not possible.
+  function typeName(value) {
+    {
+      // toStringTag is needed for namespaced types like Temporal.Instant
+      var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
+      var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
+      return type;
+    }
+  } // $FlowFixMe only called in DEV, so void return is not possible.
+
+
+  function willCoercionThrow(value) {
+    {
+      try {
+        testStringCoercion(value);
+        return false;
+      } catch (e) {
+        return true;
+      }
+    }
+  }
+
+  function testStringCoercion(value) {
+    // If you ended up here by following an exception call stack, here's what's
+    // happened: you supplied an object or symbol value to React (as a prop, key,
+    // DOM attribute, CSS property, string ref, etc.) and when React tried to
+    // coerce it to a string using `'' + value`, an exception was thrown.
+    //
+    // The most common types that will cause this exception are `Symbol` instances
+    // and Temporal objects like `Temporal.Instant`. But any object that has a
+    // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
+    // exception. (Library authors do this to prevent users from using built-in
+    // numeric operators like `+` or comparison operators like `>=` because custom
+    // methods are needed to perform accurate arithmetic or comparison.)
+    //
+    // To fix the problem, coerce this object or symbol value to a string before
+    // passing it to React. The most reliable way is usually `String(value)`.
+    //
+    // To find which value is throwing, check the browser or debugger console.
+    // Before this exception was thrown, there should be `console.error` output
+    // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
+    // problem and how that type was used: key, atrribute, input value prop, etc.
+    // In most cases, this console output also shows the component and its
+    // ancestor components where the exception happened.
+    //
+    // eslint-disable-next-line react-internal/safe-string-coercion
+    return '' + value;
+  }
+  function checkKeyStringCoercion(value) {
+    {
+      if (willCoercionThrow(value)) {
+        error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
+
+        return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
+      }
+    }
+  }
+
+  function getWrappedName(outerType, innerType, wrapperName) {
+    var displayName = outerType.displayName;
+
+    if (displayName) {
+      return displayName;
+    }
+
+    var functionName = innerType.displayName || innerType.name || '';
+    return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
+  } // Keep in sync with react-reconciler/getComponentNameFromFiber
+
+
+  function getContextName(type) {
+    return type.displayName || 'Context';
+  } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
+
+
+  function getComponentNameFromType(type) {
+    if (type == null) {
+      // Host root, text node or just invalid type.
+      return null;
+    }
+
+    {
+      if (typeof type.tag === 'number') {
+        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
+      }
+    }
+
+    if (typeof type === 'function') {
+      return type.displayName || type.name || null;
+    }
+
+    if (typeof type === 'string') {
+      return type;
+    }
+
+    switch (type) {
+      case REACT_FRAGMENT_TYPE:
+        return 'Fragment';
+
+      case REACT_PORTAL_TYPE:
+        return 'Portal';
+
+      case REACT_PROFILER_TYPE:
+        return 'Profiler';
+
+      case REACT_STRICT_MODE_TYPE:
+        return 'StrictMode';
+
+      case REACT_SUSPENSE_TYPE:
+        return 'Suspense';
+
+      case REACT_SUSPENSE_LIST_TYPE:
+        return 'SuspenseList';
+
+      case REACT_CACHE_TYPE:
+        {
+          return 'Cache';
+        }
+
+    }
+
+    if (typeof type === 'object') {
+      switch (type.$$typeof) {
+        case REACT_CONTEXT_TYPE:
+          var context = type;
+          return getContextName(context) + '.Consumer';
+
+        case REACT_PROVIDER_TYPE:
+          var provider = type;
+          return getContextName(provider._context) + '.Provider';
+
+        case REACT_FORWARD_REF_TYPE:
+          return getWrappedName(type, type.render, 'ForwardRef');
+
+        case REACT_MEMO_TYPE:
+          var outerName = type.displayName || null;
+
+          if (outerName !== null) {
+            return outerName;
+          }
+
+          return getComponentNameFromType(type.type) || 'Memo';
+
+        case REACT_LAZY_TYPE:
+          {
+            var lazyComponent = type;
+            var payload = lazyComponent._payload;
+            var init = lazyComponent._init;
+
+            try {
+              return getComponentNameFromType(init(payload));
+            } catch (x) {
+              return null;
+            }
+          }
+
+        case REACT_SERVER_CONTEXT_TYPE:
+          {
+            var context2 = type;
+            return (context2.displayName || context2._globalName) + '.Provider';
+          }
+
+        // eslint-disable-next-line no-fallthrough
+      }
+    }
+
+    return null;
+  }
+
+  var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+  var RESERVED_PROPS = {
+    key: true,
+    ref: true,
+    __self: true,
+    __source: true
+  };
+  var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
+
+  {
+    didWarnAboutStringRefs = {};
+  }
+
+  function hasValidRef(config) {
+    {
+      if (hasOwnProperty.call(config, 'ref')) {
+        var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
+
+        if (getter && getter.isReactWarning) {
+          return false;
+        }
+      }
+    }
+
+    return config.ref !== undefined;
+  }
+
+  function hasValidKey(config) {
+    {
+      if (hasOwnProperty.call(config, 'key')) {
+        var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
+
+        if (getter && getter.isReactWarning) {
+          return false;
+        }
+      }
+    }
+
+    return config.key !== undefined;
+  }
+
+  function defineKeyPropWarningGetter(props, displayName) {
+    var warnAboutAccessingKey = function () {
+      {
+        if (!specialPropKeyWarningShown) {
+          specialPropKeyWarningShown = true;
+
+          error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+        }
+      }
+    };
+
+    warnAboutAccessingKey.isReactWarning = true;
+    Object.defineProperty(props, 'key', {
+      get: warnAboutAccessingKey,
+      configurable: true
+    });
+  }
+
+  function defineRefPropWarningGetter(props, displayName) {
+    var warnAboutAccessingRef = function () {
+      {
+        if (!specialPropRefWarningShown) {
+          specialPropRefWarningShown = true;
+
+          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
+        }
+      }
+    };
+
+    warnAboutAccessingRef.isReactWarning = true;
+    Object.defineProperty(props, 'ref', {
+      get: warnAboutAccessingRef,
+      configurable: true
+    });
+  }
+
+  function warnIfStringRefCannotBeAutoConverted(config) {
+    {
+      if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
+        var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+        if (!didWarnAboutStringRefs[componentName]) {
+          error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
+
+          didWarnAboutStringRefs[componentName] = true;
+        }
+      }
+    }
+  }
+  /**
+   * Factory method to create a new React element. This no longer adheres to
+   * the class pattern, so do not use new to call it. Also, instanceof check
+   * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+   * if something is a React Element.
+   *
+   * @param {*} type
+   * @param {*} props
+   * @param {*} key
+   * @param {string|object} ref
+   * @param {*} owner
+   * @param {*} self A *temporary* helper to detect places where `this` is
+   * different from the `owner` when React.createElement is called, so that we
+   * can warn. We want to get rid of owner and replace string `ref`s with arrow
+   * functions, and as long as `this` and owner are the same, there will be no
+   * change in behavior.
+   * @param {*} source An annotation object (added by a transpiler or otherwise)
+   * indicating filename, line number, and/or other information.
+   * @internal
+   */
+
+
+  var ReactElement = function (type, key, ref, self, source, owner, props) {
+    var element = {
+      // This tag allows us to uniquely identify this as a React Element
+      $$typeof: REACT_ELEMENT_TYPE,
+      // Built-in properties that belong on the element
+      type: type,
+      key: key,
+      ref: ref,
+      props: props,
+      // Record the component responsible for creating this element.
+      _owner: owner
+    };
+
+    {
+      // The validation flag is currently mutative. We put it on
+      // an external backing store so that we can freeze the whole object.
+      // This can be replaced with a WeakMap once they are implemented in
+      // commonly used development environments.
+      element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
+      // the validation flag non-enumerable (where possible, which should
+      // include every environment we run tests in), so the test framework
+      // ignores it.
+
+      Object.defineProperty(element._store, 'validated', {
+        configurable: false,
+        enumerable: false,
+        writable: true,
+        value: false
+      }); // self and source are DEV only properties.
+
+      Object.defineProperty(element, '_self', {
+        configurable: false,
+        enumerable: false,
+        writable: false,
+        value: self
+      }); // Two elements created in two different places should be considered
+      // equal for testing purposes and therefore we hide it from enumeration.
+
+      Object.defineProperty(element, '_source', {
+        configurable: false,
+        enumerable: false,
+        writable: false,
+        value: source
+      });
+
+      if (Object.freeze) {
+        Object.freeze(element.props);
+        Object.freeze(element);
+      }
+    }
+
+    return element;
+  };
+  /**
+   * Create and return a new ReactElement of the given type.
+   * See https://reactjs.org/docs/react-api.html#createelement
+   */
+
+  function createElement(type, config, children) {
+    var propName; // Reserved names are extracted
+
+    var props = {};
+    var key = null;
+    var ref = null;
+    var self = null;
+    var source = null;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        ref = config.ref;
+
+        {
+          warnIfStringRefCannotBeAutoConverted(config);
+        }
+      }
+
+      if (hasValidKey(config)) {
+        {
+          checkKeyStringCoercion(config.key);
+        }
+
+        key = '' + config.key;
+      }
+
+      self = config.__self === undefined ? null : config.__self;
+      source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          props[propName] = config[propName];
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    var childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      var childArray = Array(childrenLength);
+
+      for (var i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      {
+        if (Object.freeze) {
+          Object.freeze(childArray);
+        }
+      }
+
+      props.children = childArray;
+    } // Resolve default props
+
+
+    if (type && type.defaultProps) {
+      var defaultProps = type.defaultProps;
+
+      for (propName in defaultProps) {
+        if (props[propName] === undefined) {
+          props[propName] = defaultProps[propName];
+        }
+      }
+    }
+
+    {
+      if (key || ref) {
+        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
+
+        if (key) {
+          defineKeyPropWarningGetter(props, displayName);
+        }
+
+        if (ref) {
+          defineRefPropWarningGetter(props, displayName);
+        }
+      }
+    }
+
+    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+  }
+  function cloneAndReplaceKey(oldElement, newKey) {
+    var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+    return newElement;
+  }
+  /**
+   * Clone and return a new ReactElement using element as the starting point.
+   * See https://reactjs.org/docs/react-api.html#cloneelement
+   */
+
+  function cloneElement(element, config, children) {
+    if (element === null || element === undefined) {
+      throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+    }
+
+    var propName; // Original props are copied
+
+    var props = assign({}, element.props); // Reserved names are extracted
+
+    var key = element.key;
+    var ref = element.ref; // Self is preserved since the owner is preserved.
+
+    var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+    // transpiler, and the original source is probably a better indicator of the
+    // true owner.
+
+    var source = element._source; // Owner will be preserved, unless ref is overridden
+
+    var owner = element._owner;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        // Silently steal the ref from the parent.
+        ref = config.ref;
+        owner = ReactCurrentOwner.current;
+      }
+
+      if (hasValidKey(config)) {
+        {
+          checkKeyStringCoercion(config.key);
+        }
+
+        key = '' + config.key;
+      } // Remaining properties override existing props
+
+
+      var defaultProps;
+
+      if (element.type && element.type.defaultProps) {
+        defaultProps = element.type.defaultProps;
+      }
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          if (config[propName] === undefined && defaultProps !== undefined) {
+            // Resolve default props
+            props[propName] = defaultProps[propName];
+          } else {
+            props[propName] = config[propName];
+          }
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    var childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      var childArray = Array(childrenLength);
+
+      for (var i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      props.children = childArray;
+    }
+
+    return ReactElement(element.type, key, ref, self, source, owner, props);
+  }
+  /**
+   * Verifies the object is a ReactElement.
+   * See https://reactjs.org/docs/react-api.html#isvalidelement
+   * @param {?object} object
+   * @return {boolean} True if `object` is a ReactElement.
+   * @final
+   */
+
+  function isValidElement(object) {
+    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+  }
+
+  var SEPARATOR = '.';
+  var SUBSEPARATOR = ':';
+  /**
+   * Escape and wrap key so it is safe to use as a reactid
+   *
+   * @param {string} key to be escaped.
+   * @return {string} the escaped key.
+   */
+
+  function escape(key) {
+    var escapeRegex = /[=:]/g;
+    var escaperLookup = {
+      '=': '=0',
+      ':': '=2'
+    };
+    var escapedString = key.replace(escapeRegex, function (match) {
+      return escaperLookup[match];
+    });
+    return '$' + escapedString;
+  }
+  /**
+   * TODO: Test that a single child and an array with one item have the same key
+   * pattern.
+   */
+
+
+  var didWarnAboutMaps = false;
+  var userProvidedKeyEscapeRegex = /\/+/g;
+
+  function escapeUserProvidedKey(text) {
+    return text.replace(userProvidedKeyEscapeRegex, '$&/');
+  }
+  /**
+   * Generate a key string that identifies a element within a set.
+   *
+   * @param {*} element A element that could contain a manual key.
+   * @param {number} index Index that is used if a manual key is not provided.
+   * @return {string}
+   */
+
+
+  function getElementKey(element, index) {
+    // Do some typechecking here since we call this blindly. We want to ensure
+    // that we don't block potential future ES APIs.
+    if (typeof element === 'object' && element !== null && element.key != null) {
+      // Explicit key
+      {
+        checkKeyStringCoercion(element.key);
+      }
+
+      return escape('' + element.key);
+    } // Implicit key determined by the index in the set
+
+
+    return index.toString(36);
+  }
+
+  function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+    var type = typeof children;
+
+    if (type === 'undefined' || type === 'boolean') {
+      // All of the above are perceived as null.
+      children = null;
+    }
+
+    var invokeCallback = false;
+
+    if (children === null) {
+      invokeCallback = true;
+    } else {
+      switch (type) {
+        case 'string':
+        case 'number':
+          invokeCallback = true;
+          break;
+
+        case 'object':
+          switch (children.$$typeof) {
+            case REACT_ELEMENT_TYPE:
+            case REACT_PORTAL_TYPE:
+              invokeCallback = true;
+          }
+
+      }
+    }
+
+    if (invokeCallback) {
+      var _child = children;
+      var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
+      // so that it's consistent if the number of children grows:
+
+      var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
+
+      if (isArray(mappedChild)) {
+        var escapedChildKey = '';
+
+        if (childKey != null) {
+          escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+        }
+
+        mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
+          return c;
+        });
+      } else if (mappedChild != null) {
+        if (isValidElement(mappedChild)) {
+          {
+            // The `if` statement here prevents auto-disabling of the safe
+            // coercion ESLint rule, so we must manually disable it below.
+            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
+              checkKeyStringCoercion(mappedChild.key);
+            }
+          }
+
+          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+          // traverseAllChildren used to do for objects as children
+          escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+          mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+          // eslint-disable-next-line react-internal/safe-string-coercion
+          escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+        }
+
+        array.push(mappedChild);
+      }
+
+      return 1;
+    }
+
+    var child;
+    var nextName;
+    var subtreeCount = 0; // Count of children found in the current subtree.
+
+    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+    if (isArray(children)) {
+      for (var i = 0; i < children.length; i++) {
+        child = children[i];
+        nextName = nextNamePrefix + getElementKey(child, i);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else {
+      var iteratorFn = getIteratorFn(children);
+
+      if (typeof iteratorFn === 'function') {
+        var iterableChildren = children;
+
+        {
+          // Warn about using Maps as children
+          if (iteratorFn === iterableChildren.entries) {
+            if (!didWarnAboutMaps) {
+              warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
+            }
+
+            didWarnAboutMaps = true;
+          }
+        }
+
+        var iterator = iteratorFn.call(iterableChildren);
+        var step;
+        var ii = 0;
+
+        while (!(step = iterator.next()).done) {
+          child = step.value;
+          nextName = nextNamePrefix + getElementKey(child, ii++);
+          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+        }
+      } else if (type === 'object') {
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        var childrenString = String(children);
+        throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+      }
+    }
+
+    return subtreeCount;
+  }
+
+  /**
+   * Maps children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+   *
+   * The provided mapFunction(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} func The map function.
+   * @param {*} context Context for mapFunction.
+   * @return {object} Object containing the ordered map of results.
+   */
+  function mapChildren(children, func, context) {
+    if (children == null) {
+      return children;
+    }
+
+    var result = [];
+    var count = 0;
+    mapIntoArray(children, result, '', '', function (child) {
+      return func.call(context, child, count++);
+    });
+    return result;
+  }
+  /**
+   * Count the number of children that are typically specified as
+   * `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrencount
+   *
+   * @param {?*} children Children tree container.
+   * @return {number} The number of children.
+   */
+
+
+  function countChildren(children) {
+    var n = 0;
+    mapChildren(children, function () {
+      n++; // Don't return anything
+    });
+    return n;
+  }
+
+  /**
+   * Iterates through children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+   *
+   * The provided forEachFunc(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} forEachFunc
+   * @param {*} forEachContext Context for forEachContext.
+   */
+  function forEachChildren(children, forEachFunc, forEachContext) {
+    mapChildren(children, function () {
+      forEachFunc.apply(this, arguments); // Don't return anything.
+    }, forEachContext);
+  }
+  /**
+   * Flatten a children object (typically specified as `props.children`) and
+   * return an array with appropriately re-keyed children.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+   */
+
+
+  function toArray(children) {
+    return mapChildren(children, function (child) {
+      return child;
+    }) || [];
+  }
+  /**
+   * Returns the first child in a collection of children and verifies that there
+   * is only one child in the collection.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+   *
+   * The current implementation of this function assumes that a single child gets
+   * passed without a wrapper, but the purpose of this helper function is to
+   * abstract away the particular structure of children.
+   *
+   * @param {?object} children Child collection structure.
+   * @return {ReactElement} The first and only `ReactElement` contained in the
+   * structure.
+   */
+
+
+  function onlyChild(children) {
+    if (!isValidElement(children)) {
+      throw new Error('React.Children.only expected to receive a single React element child.');
+    }
+
+    return children;
+  }
+
+  function createContext(defaultValue) {
+    // TODO: Second argument used to be an optional `calculateChangedBits`
+    // function. Warn to reserve for future use?
+    var context = {
+      $$typeof: REACT_CONTEXT_TYPE,
+      // As a workaround to support multiple concurrent renderers, we categorize
+      // some renderers as primary and others as secondary. We only expect
+      // there to be two concurrent renderers at most: React Native (primary) and
+      // Fabric (secondary); React DOM (primary) and React ART (secondary).
+      // Secondary renderers store their context values on separate fields.
+      _currentValue: defaultValue,
+      _currentValue2: defaultValue,
+      // Used to track how many concurrent renderers this context currently
+      // supports within in a single renderer. Such as parallel server rendering.
+      _threadCount: 0,
+      // These are circular
+      Provider: null,
+      Consumer: null,
+      // Add these to use same hidden class in VM as ServerContext
+      _defaultValue: null,
+      _globalName: null
+    };
+    context.Provider = {
+      $$typeof: REACT_PROVIDER_TYPE,
+      _context: context
+    };
+    var hasWarnedAboutUsingNestedContextConsumers = false;
+    var hasWarnedAboutUsingConsumerProvider = false;
+    var hasWarnedAboutDisplayNameOnConsumer = false;
+
+    {
+      // A separate object, but proxies back to the original context object for
+      // backwards compatibility. It has a different $$typeof, so we can properly
+      // warn for the incorrect usage of Context as a Consumer.
+      var Consumer = {
+        $$typeof: REACT_CONTEXT_TYPE,
+        _context: context
+      }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
+
+      Object.defineProperties(Consumer, {
+        Provider: {
+          get: function () {
+            if (!hasWarnedAboutUsingConsumerProvider) {
+              hasWarnedAboutUsingConsumerProvider = true;
+
+              error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
+            }
+
+            return context.Provider;
+          },
+          set: function (_Provider) {
+            context.Provider = _Provider;
+          }
+        },
+        _currentValue: {
+          get: function () {
+            return context._currentValue;
+          },
+          set: function (_currentValue) {
+            context._currentValue = _currentValue;
+          }
+        },
+        _currentValue2: {
+          get: function () {
+            return context._currentValue2;
+          },
+          set: function (_currentValue2) {
+            context._currentValue2 = _currentValue2;
+          }
+        },
+        _threadCount: {
+          get: function () {
+            return context._threadCount;
+          },
+          set: function (_threadCount) {
+            context._threadCount = _threadCount;
+          }
+        },
+        Consumer: {
+          get: function () {
+            if (!hasWarnedAboutUsingNestedContextConsumers) {
+              hasWarnedAboutUsingNestedContextConsumers = true;
+
+              error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
+            }
+
+            return context.Consumer;
+          }
+        },
+        displayName: {
+          get: function () {
+            return context.displayName;
+          },
+          set: function (displayName) {
+            if (!hasWarnedAboutDisplayNameOnConsumer) {
+              warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);
+
+              hasWarnedAboutDisplayNameOnConsumer = true;
+            }
+          }
+        }
+      }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
+
+      context.Consumer = Consumer;
+    }
+
+    {
+      context._currentRenderer = null;
+      context._currentRenderer2 = null;
+    }
+
+    return context;
+  }
+
+  var Uninitialized = -1;
+  var Pending = 0;
+  var Resolved = 1;
+  var Rejected = 2;
+
+  function lazyInitializer(payload) {
+    if (payload._status === Uninitialized) {
+      var ctor = payload._result;
+      var thenable = ctor(); // Transition to the next state.
+      // This might throw either because it's missing or throws. If so, we treat it
+      // as still uninitialized and try again next time. Which is the same as what
+      // happens if the ctor or any wrappers processing the ctor throws. This might
+      // end up fixing it if the resolution was a concurrency bug.
+
+      thenable.then(function (moduleObject) {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          var resolved = payload;
+          resolved._status = Resolved;
+          resolved._result = moduleObject;
+        }
+      }, function (error) {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          var rejected = payload;
+          rejected._status = Rejected;
+          rejected._result = error;
+        }
+      });
+
+      if (payload._status === Uninitialized) {
+        // In case, we're still uninitialized, then we're waiting for the thenable
+        // to resolve. Set it as pending in the meantime.
+        var pending = payload;
+        pending._status = Pending;
+        pending._result = thenable;
+      }
+    }
+
+    if (payload._status === Resolved) {
+      var moduleObject = payload._result;
+
+      {
+        if (moduleObject === undefined) {
+          error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+          'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
+        }
+      }
+
+      {
+        if (!('default' in moduleObject)) {
+          error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
+          'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
+        }
+      }
+
+      return moduleObject.default;
+    } else {
+      throw payload._result;
+    }
+  }
+
+  function lazy(ctor) {
+    var payload = {
+      // We use these fields to store the result.
+      _status: Uninitialized,
+      _result: ctor
+    };
+    var lazyType = {
+      $$typeof: REACT_LAZY_TYPE,
+      _payload: payload,
+      _init: lazyInitializer
+    };
+
+    {
+      // In production, this would just set it on the object.
+      var defaultProps;
+      var propTypes; // $FlowFixMe
+
+      Object.defineProperties(lazyType, {
+        defaultProps: {
+          configurable: true,
+          get: function () {
+            return defaultProps;
+          },
+          set: function (newDefaultProps) {
+            error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+            defaultProps = newDefaultProps; // Match production behavior more closely:
+            // $FlowFixMe
+
+            Object.defineProperty(lazyType, 'defaultProps', {
+              enumerable: true
+            });
+          }
+        },
+        propTypes: {
+          configurable: true,
+          get: function () {
+            return propTypes;
+          },
+          set: function (newPropTypes) {
+            error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
+
+            propTypes = newPropTypes; // Match production behavior more closely:
+            // $FlowFixMe
+
+            Object.defineProperty(lazyType, 'propTypes', {
+              enumerable: true
+            });
+          }
+        }
+      });
+    }
+
+    return lazyType;
+  }
+
+  function forwardRef(render) {
+    {
+      if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
+        error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
+      } else if (typeof render !== 'function') {
+        error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
+      } else {
+        if (render.length !== 0 && render.length !== 2) {
+          error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
+        }
+      }
+
+      if (render != null) {
+        if (render.defaultProps != null || render.propTypes != null) {
+          error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
+        }
+      }
+    }
+
+    var elementType = {
+      $$typeof: REACT_FORWARD_REF_TYPE,
+      render: render
+    };
+
+    {
+      var ownName;
+      Object.defineProperty(elementType, 'displayName', {
+        enumerable: false,
+        configurable: true,
+        get: function () {
+          return ownName;
+        },
+        set: function (name) {
+          ownName = name; // The inner component shouldn't inherit this display name in most cases,
+          // because the component may be used elsewhere.
+          // But it's nice for anonymous functions to inherit the name,
+          // so that our component-stack generation logic will display their frames.
+          // An anonymous function generally suggests a pattern like:
+          //   React.forwardRef((props, ref) => {...});
+          // This kind of inner function is not used elsewhere so the side effect is okay.
+
+          if (!render.name && !render.displayName) {
+            render.displayName = name;
+          }
+        }
+      });
+    }
+
+    return elementType;
+  }
+
+  var REACT_MODULE_REFERENCE;
+
+  {
+    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
+  }
+
+  function isValidElementType(type) {
+    if (typeof type === 'string' || typeof type === 'function') {
+      return true;
+    } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
+
+
+    if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  ||  type === REACT_CACHE_TYPE || enableTransitionTracing ) {
+      return true;
+    }
+
+    if (typeof type === 'object' && type !== null) {
+      if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
+      // types supported by any Flight configuration anywhere since
+      // we don't know which Flight build this will end up being used
+      // with.
+      type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
+        return true;
+      }
+    }
+
+    return false;
+  }
+
+  function memo(type, compare) {
+    {
+      if (!isValidElementType(type)) {
+        error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
+      }
+    }
+
+    var elementType = {
+      $$typeof: REACT_MEMO_TYPE,
+      type: type,
+      compare: compare === undefined ? null : compare
+    };
+
+    {
+      var ownName;
+      Object.defineProperty(elementType, 'displayName', {
+        enumerable: false,
+        configurable: true,
+        get: function () {
+          return ownName;
+        },
+        set: function (name) {
+          ownName = name; // The inner component shouldn't inherit this display name in most cases,
+          // because the component may be used elsewhere.
+          // But it's nice for anonymous functions to inherit the name,
+          // so that our component-stack generation logic will display their frames.
+          // An anonymous function generally suggests a pattern like:
+          //   React.memo((props) => {...});
+          // This kind of inner function is not used elsewhere so the side effect is okay.
+
+          if (!type.name && !type.displayName) {
+            type.displayName = name;
+          }
+        }
+      });
+    }
+
+    return elementType;
+  }
+
+  function resolveDispatcher() {
+    var dispatcher = ReactCurrentDispatcher.current;
+
+    {
+      if (dispatcher === null) {
+        error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
+      }
+    } // Will result in a null access error if accessed outside render phase. We
+    // intentionally don't throw our own error because this is in a hot path.
+    // Also helps ensure this is inlined.
+
+
+    return dispatcher;
+  }
+
+  function getCacheSignal() {
+    var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheSignal();
+  }
+  function getCacheForType(resourceType) {
+    var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheForType(resourceType);
+  }
+  function useContext(Context) {
+    var dispatcher = resolveDispatcher();
+
+    {
+      // TODO: add a more generic warning for invalid values.
+      if (Context._context !== undefined) {
+        var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
+        // and nobody should be using this in existing code.
+
+        if (realContext.Consumer === Context) {
+          error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
+        } else if (realContext.Provider === Context) {
+          error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
+        }
+      }
+    }
+
+    return dispatcher.useContext(Context);
+  }
+  function useState(initialState) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useState(initialState);
+  }
+  function useReducer(reducer, initialArg, init) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useReducer(reducer, initialArg, init);
+  }
+  function useRef(initialValue) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useRef(initialValue);
+  }
+  function useEffect(create, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useEffect(create, deps);
+  }
+  function useInsertionEffect(create, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useInsertionEffect(create, deps);
+  }
+  function useLayoutEffect(create, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useLayoutEffect(create, deps);
+  }
+  function useCallback(callback, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useCallback(callback, deps);
+  }
+  function useMemo(create, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useMemo(create, deps);
+  }
+  function useImperativeHandle(ref, create, deps) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useImperativeHandle(ref, create, deps);
+  }
+  function useDebugValue(value, formatterFn) {
+    {
+      var dispatcher = resolveDispatcher();
+      return dispatcher.useDebugValue(value, formatterFn);
+    }
+  }
+  function useTransition() {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useTransition();
+  }
+  function useDeferredValue(value) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useDeferredValue(value);
+  }
+  function useId() {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useId();
+  }
+  function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
+    var dispatcher = resolveDispatcher();
+    return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
+  }
+  function useCacheRefresh() {
+    var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.useCacheRefresh();
+  }
+
+  // Helpers to patch console.logs to avoid logging during side-effect free
+  // replaying on render function. This currently only patches the object
+  // lazily which won't cover if the log function was extracted eagerly.
+  // We could also eagerly patch the method.
+  var disabledDepth = 0;
+  var prevLog;
+  var prevInfo;
+  var prevWarn;
+  var prevError;
+  var prevGroup;
+  var prevGroupCollapsed;
+  var prevGroupEnd;
+
+  function disabledLog() {}
+
+  disabledLog.__reactDisabledLog = true;
+  function disableLogs() {
+    {
+      if (disabledDepth === 0) {
+        /* eslint-disable react-internal/no-production-logging */
+        prevLog = console.log;
+        prevInfo = console.info;
+        prevWarn = console.warn;
+        prevError = console.error;
+        prevGroup = console.group;
+        prevGroupCollapsed = console.groupCollapsed;
+        prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
+
+        var props = {
+          configurable: true,
+          enumerable: true,
+          value: disabledLog,
+          writable: true
+        }; // $FlowFixMe Flow thinks console is immutable.
+
+        Object.defineProperties(console, {
+          info: props,
+          log: props,
+          warn: props,
+          error: props,
+          group: props,
+          groupCollapsed: props,
+          groupEnd: props
+        });
+        /* eslint-enable react-internal/no-production-logging */
+      }
+
+      disabledDepth++;
+    }
+  }
+  function reenableLogs() {
+    {
+      disabledDepth--;
+
+      if (disabledDepth === 0) {
+        /* eslint-disable react-internal/no-production-logging */
+        var props = {
+          configurable: true,
+          enumerable: true,
+          writable: true
+        }; // $FlowFixMe Flow thinks console is immutable.
+
+        Object.defineProperties(console, {
+          log: assign({}, props, {
+            value: prevLog
+          }),
+          info: assign({}, props, {
+            value: prevInfo
+          }),
+          warn: assign({}, props, {
+            value: prevWarn
+          }),
+          error: assign({}, props, {
+            value: prevError
+          }),
+          group: assign({}, props, {
+            value: prevGroup
+          }),
+          groupCollapsed: assign({}, props, {
+            value: prevGroupCollapsed
+          }),
+          groupEnd: assign({}, props, {
+            value: prevGroupEnd
+          })
+        });
+        /* eslint-enable react-internal/no-production-logging */
+      }
+
+      if (disabledDepth < 0) {
+        error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
+      }
+    }
+  }
+
+  var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
+  var prefix;
+  function describeBuiltInComponentFrame(name, source, ownerFn) {
+    {
+      if (prefix === undefined) {
+        // Extract the VM specific prefix used by each line.
+        try {
+          throw Error();
+        } catch (x) {
+          var match = x.stack.trim().match(/\n( *(at )?)/);
+          prefix = match && match[1] || '';
+        }
+      } // We use the prefix to ensure our stacks line up with native stack frames.
+
+
+      return '\n' + prefix + name;
+    }
+  }
+  var reentry = false;
+  var componentFrameCache;
+
+  {
+    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
+    componentFrameCache = new PossiblyWeakMap();
+  }
+
+  function describeNativeComponentFrame(fn, construct) {
+    // If something asked for a stack inside a fake render, it should get ignored.
+    if ( !fn || reentry) {
+      return '';
+    }
+
+    {
+      var frame = componentFrameCache.get(fn);
+
+      if (frame !== undefined) {
+        return frame;
+      }
+    }
+
+    var control;
+    reentry = true;
+    var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
+
+    Error.prepareStackTrace = undefined;
+    var previousDispatcher;
+
+    {
+      previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
+      // for warnings.
+
+      ReactCurrentDispatcher$1.current = null;
+      disableLogs();
+    }
+
+    try {
+      // This should throw.
+      if (construct) {
+        // Something should be setting the props in the constructor.
+        var Fake = function () {
+          throw Error();
+        }; // $FlowFixMe
+
+
+        Object.defineProperty(Fake.prototype, 'props', {
+          set: function () {
+            // We use a throwing setter instead of frozen or non-writable props
+            // because that won't throw in a non-strict mode function.
+            throw Error();
+          }
+        });
+
+        if (typeof Reflect === 'object' && Reflect.construct) {
+          // We construct a different control for this case to include any extra
+          // frames added by the construct call.
+          try {
+            Reflect.construct(Fake, []);
+          } catch (x) {
+            control = x;
+          }
+
+          Reflect.construct(fn, [], Fake);
+        } else {
+          try {
+            Fake.call();
+          } catch (x) {
+            control = x;
+          }
+
+          fn.call(Fake.prototype);
+        }
+      } else {
+        try {
+          throw Error();
+        } catch (x) {
+          control = x;
+        } // TODO(luna): This will currently only throw if the function component
+        // tries to access React/ReactDOM/props. We should probably make this throw
+        // in simple components too
+
+
+        fn();
+      }
+    } catch (sample) {
+      // This is inlined manually because closure doesn't do it for us.
+      if (sample && control && typeof sample.stack === 'string') {
+        // This extracts the first frame from the sample that isn't also in the control.
+        // Skipping one frame that we assume is the frame that calls the two.
+        var sampleLines = sample.stack.split('\n');
+        var controlLines = control.stack.split('\n');
+        var s = sampleLines.length - 1;
+        var c = controlLines.length - 1;
+
+        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
+          // We expect at least one stack frame to be shared.
+          // Typically this will be the root most one. However, stack frames may be
+          // cut off due to maximum stack limits. In this case, one maybe cut off
+          // earlier than the other. We assume that the sample is longer or the same
+          // and there for cut off earlier. So we should find the root most frame in
+          // the sample somewhere in the control.
+          c--;
+        }
+
+        for (; s >= 1 && c >= 0; s--, c--) {
+          // Next we find the first one that isn't the same which should be the
+          // frame that called our sample function and the control.
+          if (sampleLines[s] !== controlLines[c]) {
+            // In V8, the first line is describing the message but other VMs don't.
+            // If we're about to return the first line, and the control is also on the same
+            // line, that's a pretty good indicator that our sample threw at same line as
+            // the control. I.e. before we entered the sample frame. So we ignore this result.
+            // This can happen if you passed a class to function component, or non-function.
+            if (s !== 1 || c !== 1) {
+              do {
+                s--;
+                c--; // We may still have similar intermediate frames from the construct call.
+                // The next one that isn't the same should be our match though.
+
+                if (c < 0 || sampleLines[s] !== controlLines[c]) {
+                  // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
+                  var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
+                  // but we have a user-provided "displayName"
+                  // splice it in to make the stack more readable.
+
+
+                  if (fn.displayName && _frame.includes('<anonymous>')) {
+                    _frame = _frame.replace('<anonymous>', fn.displayName);
+                  }
+
+                  {
+                    if (typeof fn === 'function') {
+                      componentFrameCache.set(fn, _frame);
+                    }
+                  } // Return the line we found.
+
+
+                  return _frame;
+                }
+              } while (s >= 1 && c >= 0);
+            }
+
+            break;
+          }
+        }
+      }
+    } finally {
+      reentry = false;
+
+      {
+        ReactCurrentDispatcher$1.current = previousDispatcher;
+        reenableLogs();
+      }
+
+      Error.prepareStackTrace = previousPrepareStackTrace;
+    } // Fallback to just using the name if we couldn't make it throw.
+
+
+    var name = fn ? fn.displayName || fn.name : '';
+    var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
+
+    {
+      if (typeof fn === 'function') {
+        componentFrameCache.set(fn, syntheticFrame);
+      }
+    }
+
+    return syntheticFrame;
+  }
+  function describeFunctionComponentFrame(fn, source, ownerFn) {
+    {
+      return describeNativeComponentFrame(fn, false);
+    }
+  }
+
+  function shouldConstruct(Component) {
+    var prototype = Component.prototype;
+    return !!(prototype && prototype.isReactComponent);
+  }
+
+  function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
+
+    if (type == null) {
+      return '';
+    }
+
+    if (typeof type === 'function') {
+      {
+        return describeNativeComponentFrame(type, shouldConstruct(type));
+      }
+    }
+
+    if (typeof type === 'string') {
+      return describeBuiltInComponentFrame(type);
+    }
+
+    switch (type) {
+      case REACT_SUSPENSE_TYPE:
+        return describeBuiltInComponentFrame('Suspense');
+
+      case REACT_SUSPENSE_LIST_TYPE:
+        return describeBuiltInComponentFrame('SuspenseList');
+    }
+
+    if (typeof type === 'object') {
+      switch (type.$$typeof) {
+        case REACT_FORWARD_REF_TYPE:
+          return describeFunctionComponentFrame(type.render);
+
+        case REACT_MEMO_TYPE:
+          // Memo may contain any component type so we recursively resolve it.
+          return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
+
+        case REACT_LAZY_TYPE:
+          {
+            var lazyComponent = type;
+            var payload = lazyComponent._payload;
+            var init = lazyComponent._init;
+
+            try {
+              // Lazy may contain any component type so we recursively resolve it.
+              return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
+            } catch (x) {}
+          }
+      }
+    }
+
+    return '';
+  }
+
+  var loggedTypeFailures = {};
+  var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
+
+  function setCurrentlyValidatingElement(element) {
+    {
+      if (element) {
+        var owner = element._owner;
+        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+        ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
+      } else {
+        ReactDebugCurrentFrame$1.setExtraStackFrame(null);
+      }
+    }
+  }
+
+  function checkPropTypes(typeSpecs, values, location, componentName, element) {
+    {
+      // $FlowFixMe This is okay but Flow doesn't know it.
+      var has = Function.call.bind(hasOwnProperty);
+
+      for (var typeSpecName in typeSpecs) {
+        if (has(typeSpecs, typeSpecName)) {
+          var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
+          // fail the render phase where it didn't fail before. So we log it.
+          // After these have been cleaned up, we'll let them throw.
+
+          try {
+            // This is intentionally an invariant that gets caught. It's the same
+            // behavior as without this statement except with a better message.
+            if (typeof typeSpecs[typeSpecName] !== 'function') {
+              // eslint-disable-next-line react-internal/prod-error-codes
+              var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
+              err.name = 'Invariant Violation';
+              throw err;
+            }
+
+            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
+          } catch (ex) {
+            error$1 = ex;
+          }
+
+          if (error$1 && !(error$1 instanceof Error)) {
+            setCurrentlyValidatingElement(element);
+
+            error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
+
+            setCurrentlyValidatingElement(null);
+          }
+
+          if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
+            // Only monitor this failure once because there tends to be a lot of the
+            // same error.
+            loggedTypeFailures[error$1.message] = true;
+            setCurrentlyValidatingElement(element);
+
+            error('Failed %s type: %s', location, error$1.message);
+
+            setCurrentlyValidatingElement(null);
+          }
+        }
+      }
+    }
+  }
+
+  function setCurrentlyValidatingElement$1(element) {
+    {
+      if (element) {
+        var owner = element._owner;
+        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
+        setExtraStackFrame(stack);
+      } else {
+        setExtraStackFrame(null);
+      }
+    }
+  }
+
+  var propTypesMisspellWarningShown;
+
+  {
+    propTypesMisspellWarningShown = false;
+  }
+
+  function getDeclarationErrorAddendum() {
+    if (ReactCurrentOwner.current) {
+      var name = getComponentNameFromType(ReactCurrentOwner.current.type);
+
+      if (name) {
+        return '\n\nCheck the render method of `' + name + '`.';
+      }
+    }
+
+    return '';
+  }
+
+  function getSourceInfoErrorAddendum(source) {
+    if (source !== undefined) {
+      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
+      var lineNumber = source.lineNumber;
+      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
+    }
+
+    return '';
+  }
+
+  function getSourceInfoErrorAddendumForProps(elementProps) {
+    if (elementProps !== null && elementProps !== undefined) {
+      return getSourceInfoErrorAddendum(elementProps.__source);
+    }
+
+    return '';
+  }
+  /**
+   * Warn if there's no key explicitly set on dynamic arrays of children or
+   * object keys are not valid. This allows us to keep track of children between
+   * updates.
+   */
+
+
+  var ownerHasKeyUseWarning = {};
+
+  function getCurrentComponentErrorInfo(parentType) {
+    var info = getDeclarationErrorAddendum();
+
+    if (!info) {
+      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
+
+      if (parentName) {
+        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
+      }
+    }
+
+    return info;
+  }
+  /**
+   * Warn if the element doesn't have an explicit key assigned to it.
+   * This element is in an array. The array could grow and shrink or be
+   * reordered. All children that haven't already been validated are required to
+   * have a "key" property assigned to it. Error statuses are cached so a warning
+   * will only be shown once.
+   *
+   * @internal
+   * @param {ReactElement} element Element that requires a key.
+   * @param {*} parentType element's parent's type.
+   */
+
+
+  function validateExplicitKey(element, parentType) {
+    if (!element._store || element._store.validated || element.key != null) {
+      return;
+    }
+
+    element._store.validated = true;
+    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
+
+    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
+      return;
+    }
+
+    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
+    // property, it may be the creator of the child that's responsible for
+    // assigning it a key.
+
+    var childOwner = '';
+
+    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
+      // Give the component that originally created this child.
+      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
+    }
+
+    {
+      setCurrentlyValidatingElement$1(element);
+
+      error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
+
+      setCurrentlyValidatingElement$1(null);
+    }
+  }
+  /**
+   * Ensure that every element either is passed in a static location, in an
+   * array with an explicit keys property defined, or in an object literal
+   * with valid key property.
+   *
+   * @internal
+   * @param {ReactNode} node Statically passed child of any type.
+   * @param {*} parentType node's parent's type.
+   */
+
+
+  function validateChildKeys(node, parentType) {
+    if (typeof node !== 'object') {
+      return;
+    }
+
+    if (isArray(node)) {
+      for (var i = 0; i < node.length; i++) {
+        var child = node[i];
+
+        if (isValidElement(child)) {
+          validateExplicitKey(child, parentType);
+        }
+      }
+    } else if (isValidElement(node)) {
+      // This element was passed in a valid location.
+      if (node._store) {
+        node._store.validated = true;
+      }
+    } else if (node) {
+      var iteratorFn = getIteratorFn(node);
+
+      if (typeof iteratorFn === 'function') {
+        // Entry iterators used to provide implicit keys,
+        // but now we print a separate warning for them later.
+        if (iteratorFn !== node.entries) {
+          var iterator = iteratorFn.call(node);
+          var step;
+
+          while (!(step = iterator.next()).done) {
+            if (isValidElement(step.value)) {
+              validateExplicitKey(step.value, parentType);
+            }
+          }
+        }
+      }
+    }
+  }
+  /**
+   * Given an element, validate that its props follow the propTypes definition,
+   * provided by the type.
+   *
+   * @param {ReactElement} element
+   */
+
+
+  function validatePropTypes(element) {
+    {
+      var type = element.type;
+
+      if (type === null || type === undefined || typeof type === 'string') {
+        return;
+      }
+
+      var propTypes;
+
+      if (typeof type === 'function') {
+        propTypes = type.propTypes;
+      } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
+      // Inner props are checked in the reconciler.
+      type.$$typeof === REACT_MEMO_TYPE)) {
+        propTypes = type.propTypes;
+      } else {
+        return;
+      }
+
+      if (propTypes) {
+        // Intentionally inside to avoid triggering lazy initializers:
+        var name = getComponentNameFromType(type);
+        checkPropTypes(propTypes, element.props, 'prop', name, element);
+      } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
+        propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
+
+        var _name = getComponentNameFromType(type);
+
+        error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
+      }
+
+      if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
+        error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
+      }
+    }
+  }
+  /**
+   * Given a fragment, validate that it can only be provided with fragment props
+   * @param {ReactElement} fragment
+   */
+
+
+  function validateFragmentProps(fragment) {
+    {
+      var keys = Object.keys(fragment.props);
+
+      for (var i = 0; i < keys.length; i++) {
+        var key = keys[i];
+
+        if (key !== 'children' && key !== 'key') {
+          setCurrentlyValidatingElement$1(fragment);
+
+          error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
+
+          setCurrentlyValidatingElement$1(null);
+          break;
+        }
+      }
+
+      if (fragment.ref !== null) {
+        setCurrentlyValidatingElement$1(fragment);
+
+        error('Invalid attribute `ref` supplied to `React.Fragment`.');
+
+        setCurrentlyValidatingElement$1(null);
+      }
+    }
+  }
+  function createElementWithValidation(type, props, children) {
+    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
+    // succeed and there will likely be errors in render.
+
+    if (!validType) {
+      var info = '';
+
+      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
+        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
+      }
+
+      var sourceInfo = getSourceInfoErrorAddendumForProps(props);
+
+      if (sourceInfo) {
+        info += sourceInfo;
+      } else {
+        info += getDeclarationErrorAddendum();
+      }
+
+      var typeString;
+
+      if (type === null) {
+        typeString = 'null';
+      } else if (isArray(type)) {
+        typeString = 'array';
+      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
+        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
+        info = ' Did you accidentally export a JSX literal instead of a component?';
+      } else {
+        typeString = typeof type;
+      }
+
+      {
+        error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
+      }
+    }
+
+    var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
+    // TODO: Drop this when these are no longer allowed as the type argument.
+
+    if (element == null) {
+      return element;
+    } // Skip key warning if the type isn't valid since our key validation logic
+    // doesn't expect a non-string/function type and can throw confusing errors.
+    // We don't want exception behavior to differ between dev and prod.
+    // (Rendering will throw with a helpful message and as soon as the type is
+    // fixed, the key warnings will appear.)
+
+
+    if (validType) {
+      for (var i = 2; i < arguments.length; i++) {
+        validateChildKeys(arguments[i], type);
+      }
+    }
+
+    if (type === REACT_FRAGMENT_TYPE) {
+      validateFragmentProps(element);
+    } else {
+      validatePropTypes(element);
+    }
+
+    return element;
+  }
+  var didWarnAboutDeprecatedCreateFactory = false;
+  function createFactoryWithValidation(type) {
+    var validatedFactory = createElementWithValidation.bind(null, type);
+    validatedFactory.type = type;
+
+    {
+      if (!didWarnAboutDeprecatedCreateFactory) {
+        didWarnAboutDeprecatedCreateFactory = true;
+
+        warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
+      } // Legacy hook: remove it
+
+
+      Object.defineProperty(validatedFactory, 'type', {
+        enumerable: false,
+        get: function () {
+          warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
+
+          Object.defineProperty(this, 'type', {
+            value: type
+          });
+          return type;
+        }
+      });
+    }
+
+    return validatedFactory;
+  }
+  function cloneElementWithValidation(element, props, children) {
+    var newElement = cloneElement.apply(this, arguments);
+
+    for (var i = 2; i < arguments.length; i++) {
+      validateChildKeys(arguments[i], newElement.type);
+    }
+
+    validatePropTypes(newElement);
+    return newElement;
+  }
+
+  var ContextRegistry$1 = ReactSharedInternals.ContextRegistry;
+  function createServerContext(globalName, defaultValue) {
+
+    var wasDefined = true;
+
+    if (!ContextRegistry$1[globalName]) {
+      wasDefined = false;
+      var _context = {
+        $$typeof: REACT_SERVER_CONTEXT_TYPE,
+        // As a workaround to support multiple concurrent renderers, we categorize
+        // some renderers as primary and others as secondary. We only expect
+        // there to be two concurrent renderers at most: React Native (primary) and
+        // Fabric (secondary); React DOM (primary) and React ART (secondary).
+        // Secondary renderers store their context values on separate fields.
+        _currentValue: defaultValue,
+        _currentValue2: defaultValue,
+        _defaultValue: defaultValue,
+        // Used to track how many concurrent renderers this context currently
+        // supports within in a single renderer. Such as parallel server rendering.
+        _threadCount: 0,
+        // These are circular
+        Provider: null,
+        Consumer: null,
+        _globalName: globalName
+      };
+      _context.Provider = {
+        $$typeof: REACT_PROVIDER_TYPE,
+        _context: _context
+      };
+
+      {
+        var hasWarnedAboutUsingConsumer;
+        _context._currentRenderer = null;
+        _context._currentRenderer2 = null;
+        Object.defineProperties(_context, {
+          Consumer: {
+            get: function () {
+              if (!hasWarnedAboutUsingConsumer) {
+                error('Consumer pattern is not supported by ReactServerContext');
+
+                hasWarnedAboutUsingConsumer = true;
+              }
+
+              return null;
+            }
+          }
+        });
+      }
+
+      ContextRegistry$1[globalName] = _context;
+    }
+
+    var context = ContextRegistry$1[globalName];
+
+    if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._defaultValue = defaultValue;
+
+      if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue = defaultValue;
+      }
+
+      if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue2 = defaultValue;
+      }
+    } else if (wasDefined) {
+      throw new Error("ServerContext: " + globalName + " already defined");
+    }
+
+    return context;
+  }
+
+  var enableSchedulerDebugging = false;
+  var enableProfiling = false;
+  var frameYieldMs = 5;
+
+  function push(heap, node) {
+    var index = heap.length;
+    heap.push(node);
+    siftUp(heap, node, index);
+  }
+  function peek(heap) {
+    return heap.length === 0 ? null : heap[0];
+  }
+  function pop(heap) {
+    if (heap.length === 0) {
+      return null;
+    }
+
+    var first = heap[0];
+    var last = heap.pop();
+
+    if (last !== first) {
+      heap[0] = last;
+      siftDown(heap, last, 0);
+    }
+
+    return first;
+  }
+
+  function siftUp(heap, node, i) {
+    var index = i;
+
+    while (index > 0) {
+      var parentIndex = index - 1 >>> 1;
+      var parent = heap[parentIndex];
+
+      if (compare(parent, node) > 0) {
+        // The parent is larger. Swap positions.
+        heap[parentIndex] = node;
+        heap[index] = parent;
+        index = parentIndex;
+      } else {
+        // The parent is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function siftDown(heap, node, i) {
+    var index = i;
+    var length = heap.length;
+    var halfLength = length >>> 1;
+
+    while (index < halfLength) {
+      var leftIndex = (index + 1) * 2 - 1;
+      var left = heap[leftIndex];
+      var rightIndex = leftIndex + 1;
+      var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
+
+      if (compare(left, node) < 0) {
+        if (rightIndex < length && compare(right, left) < 0) {
+          heap[index] = right;
+          heap[rightIndex] = node;
+          index = rightIndex;
+        } else {
+          heap[index] = left;
+          heap[leftIndex] = node;
+          index = leftIndex;
+        }
+      } else if (rightIndex < length && compare(right, node) < 0) {
+        heap[index] = right;
+        heap[rightIndex] = node;
+        index = rightIndex;
+      } else {
+        // Neither child is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function compare(a, b) {
+    // Compare sort index first, then task id.
+    var diff = a.sortIndex - b.sortIndex;
+    return diff !== 0 ? diff : a.id - b.id;
+  }
+
+  // TODO: Use symbols?
+  var ImmediatePriority = 1;
+  var UserBlockingPriority = 2;
+  var NormalPriority = 3;
+  var LowPriority = 4;
+  var IdlePriority = 5;
+
+  function markTaskErrored(task, ms) {
+  }
+
+  /* eslint-disable no-var */
+  var getCurrentTime;
+  var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
+
+  if (hasPerformanceNow) {
+    var localPerformance = performance;
+
+    getCurrentTime = function () {
+      return localPerformance.now();
+    };
+  } else {
+    var localDate = Date;
+    var initialTime = localDate.now();
+
+    getCurrentTime = function () {
+      return localDate.now() - initialTime;
+    };
+  } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
+  // Math.pow(2, 30) - 1
+  // 0b111111111111111111111111111111
+
+
+  var maxSigned31BitInt = 1073741823; // Times out immediately
+
+  var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
+
+  var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
+  var NORMAL_PRIORITY_TIMEOUT = 5000;
+  var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
+
+  var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
+
+  var taskQueue = [];
+  var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
+
+  var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
+  var currentTask = null;
+  var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
+
+  var isPerformingWork = false;
+  var isHostCallbackScheduled = false;
+  var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
+
+  var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
+  var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
+  var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
+
+  var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
+
+  function advanceTimers(currentTime) {
+    // Check for tasks that are no longer delayed and add them to the queue.
+    var timer = peek(timerQueue);
+
+    while (timer !== null) {
+      if (timer.callback === null) {
+        // Timer was cancelled.
+        pop(timerQueue);
+      } else if (timer.startTime <= currentTime) {
+        // Timer fired. Transfer to the task queue.
+        pop(timerQueue);
+        timer.sortIndex = timer.expirationTime;
+        push(taskQueue, timer);
+      } else {
+        // Remaining timers are pending.
+        return;
+      }
+
+      timer = peek(timerQueue);
+    }
+  }
+
+  function handleTimeout(currentTime) {
+    isHostTimeoutScheduled = false;
+    advanceTimers(currentTime);
+
+    if (!isHostCallbackScheduled) {
+      if (peek(taskQueue) !== null) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      } else {
+        var firstTimer = peek(timerQueue);
+
+        if (firstTimer !== null) {
+          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+        }
+      }
+    }
+  }
+
+  function flushWork(hasTimeRemaining, initialTime) {
+
+
+    isHostCallbackScheduled = false;
+
+    if (isHostTimeoutScheduled) {
+      // We scheduled a timeout but it's no longer needed. Cancel it.
+      isHostTimeoutScheduled = false;
+      cancelHostTimeout();
+    }
+
+    isPerformingWork = true;
+    var previousPriorityLevel = currentPriorityLevel;
+
+    try {
+      if (enableProfiling) {
+        try {
+          return workLoop(hasTimeRemaining, initialTime);
+        } catch (error) {
+          if (currentTask !== null) {
+            var currentTime = getCurrentTime();
+            markTaskErrored(currentTask, currentTime);
+            currentTask.isQueued = false;
+          }
+
+          throw error;
+        }
+      } else {
+        // No catch in prod code path.
+        return workLoop(hasTimeRemaining, initialTime);
+      }
+    } finally {
+      currentTask = null;
+      currentPriorityLevel = previousPriorityLevel;
+      isPerformingWork = false;
+    }
+  }
+
+  function workLoop(hasTimeRemaining, initialTime) {
+    var currentTime = initialTime;
+    advanceTimers(currentTime);
+    currentTask = peek(taskQueue);
+
+    while (currentTask !== null && !(enableSchedulerDebugging )) {
+      if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
+        // This currentTask hasn't expired, and we've reached the deadline.
+        break;
+      }
+
+      var callback = currentTask.callback;
+
+      if (typeof callback === 'function') {
+        currentTask.callback = null;
+        currentPriorityLevel = currentTask.priorityLevel;
+        var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
+
+        var continuationCallback = callback(didUserCallbackTimeout);
+        currentTime = getCurrentTime();
+
+        if (typeof continuationCallback === 'function') {
+          currentTask.callback = continuationCallback;
+        } else {
+
+          if (currentTask === peek(taskQueue)) {
+            pop(taskQueue);
+          }
+        }
+
+        advanceTimers(currentTime);
+      } else {
+        pop(taskQueue);
+      }
+
+      currentTask = peek(taskQueue);
+    } // Return whether there's additional work
+
+
+    if (currentTask !== null) {
+      return true;
+    } else {
+      var firstTimer = peek(timerQueue);
+
+      if (firstTimer !== null) {
+        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+      }
+
+      return false;
+    }
+  }
+
+  function unstable_runWithPriority(priorityLevel, eventHandler) {
+    switch (priorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+      case LowPriority:
+      case IdlePriority:
+        break;
+
+      default:
+        priorityLevel = NormalPriority;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_next(eventHandler) {
+    var priorityLevel;
+
+    switch (currentPriorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+        // Shift down to normal priority
+        priorityLevel = NormalPriority;
+        break;
+
+      default:
+        // Anything lower than normal priority should remain at the current level.
+        priorityLevel = currentPriorityLevel;
+        break;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_wrapCallback(callback) {
+    var parentPriorityLevel = currentPriorityLevel;
+    return function () {
+      // This is a fork of runWithPriority, inlined for performance.
+      var previousPriorityLevel = currentPriorityLevel;
+      currentPriorityLevel = parentPriorityLevel;
+
+      try {
+        return callback.apply(this, arguments);
+      } finally {
+        currentPriorityLevel = previousPriorityLevel;
+      }
+    };
+  }
+
+  function unstable_scheduleCallback(priorityLevel, callback, options) {
+    var currentTime = getCurrentTime();
+    var startTime;
+
+    if (typeof options === 'object' && options !== null) {
+      var delay = options.delay;
+
+      if (typeof delay === 'number' && delay > 0) {
+        startTime = currentTime + delay;
+      } else {
+        startTime = currentTime;
+      }
+    } else {
+      startTime = currentTime;
+    }
+
+    var timeout;
+
+    switch (priorityLevel) {
+      case ImmediatePriority:
+        timeout = IMMEDIATE_PRIORITY_TIMEOUT;
+        break;
+
+      case UserBlockingPriority:
+        timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
+        break;
+
+      case IdlePriority:
+        timeout = IDLE_PRIORITY_TIMEOUT;
+        break;
+
+      case LowPriority:
+        timeout = LOW_PRIORITY_TIMEOUT;
+        break;
+
+      case NormalPriority:
+      default:
+        timeout = NORMAL_PRIORITY_TIMEOUT;
+        break;
+    }
+
+    var expirationTime = startTime + timeout;
+    var newTask = {
+      id: taskIdCounter++,
+      callback: callback,
+      priorityLevel: priorityLevel,
+      startTime: startTime,
+      expirationTime: expirationTime,
+      sortIndex: -1
+    };
+
+    if (startTime > currentTime) {
+      // This is a delayed task.
+      newTask.sortIndex = startTime;
+      push(timerQueue, newTask);
+
+      if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
+        // All tasks are delayed, and this is the task with the earliest delay.
+        if (isHostTimeoutScheduled) {
+          // Cancel an existing timeout.
+          cancelHostTimeout();
+        } else {
+          isHostTimeoutScheduled = true;
+        } // Schedule a timeout.
+
+
+        requestHostTimeout(handleTimeout, startTime - currentTime);
+      }
+    } else {
+      newTask.sortIndex = expirationTime;
+      push(taskQueue, newTask);
+      // wait until the next time we yield.
+
+
+      if (!isHostCallbackScheduled && !isPerformingWork) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      }
+    }
+
+    return newTask;
+  }
+
+  function unstable_pauseExecution() {
+  }
+
+  function unstable_continueExecution() {
+
+    if (!isHostCallbackScheduled && !isPerformingWork) {
+      isHostCallbackScheduled = true;
+      requestHostCallback(flushWork);
+    }
+  }
+
+  function unstable_getFirstCallbackNode() {
+    return peek(taskQueue);
+  }
+
+  function unstable_cancelCallback(task) {
+    // remove from the queue because you can't remove arbitrary nodes from an
+    // array based heap, only the first one.)
+
+
+    task.callback = null;
+  }
+
+  function unstable_getCurrentPriorityLevel() {
+    return currentPriorityLevel;
+  }
+
+  var isMessageLoopRunning = false;
+  var scheduledHostCallback = null;
+  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
+  // thread, like user events. By default, it yields multiple times per frame.
+  // It does not attempt to align with frame boundaries, since most tasks don't
+  // need to be frame aligned; for those that do, use requestAnimationFrame.
+
+  var frameInterval = frameYieldMs;
+  var startTime = -1;
+
+  function shouldYieldToHost() {
+    var timeElapsed = getCurrentTime() - startTime;
+
+    if (timeElapsed < frameInterval) {
+      // The main thread has only been blocked for a really short amount of time;
+      // smaller than a single frame. Don't yield yet.
+      return false;
+    } // The main thread has been blocked for a non-negligible amount of time. We
+
+
+    return true;
+  }
+
+  function requestPaint() {
+
+  }
+
+  function forceFrameRate(fps) {
+    if (fps < 0 || fps > 125) {
+      // Using console['error'] to evade Babel and ESLint
+      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
+      return;
+    }
+
+    if (fps > 0) {
+      frameInterval = Math.floor(1000 / fps);
+    } else {
+      // reset the framerate
+      frameInterval = frameYieldMs;
+    }
+  }
+
+  var performWorkUntilDeadline = function () {
+    if (scheduledHostCallback !== null) {
+      var currentTime = getCurrentTime(); // Keep track of the start time so we can measure how long the main thread
+      // has been blocked.
+
+      startTime = currentTime;
+      var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
+      // error can be observed.
+      //
+      // Intentionally not using a try-catch, since that makes some debugging
+      // techniques harder. Instead, if `scheduledHostCallback` errors, then
+      // `hasMoreWork` will remain true, and we'll continue the work loop.
+
+      var hasMoreWork = true;
+
+      try {
+        hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
+      } finally {
+        if (hasMoreWork) {
+          // If there's more work, schedule the next message event at the end
+          // of the preceding one.
+          schedulePerformWorkUntilDeadline();
+        } else {
+          isMessageLoopRunning = false;
+          scheduledHostCallback = null;
+        }
+      }
+    } else {
+      isMessageLoopRunning = false;
+    } // Yielding to the browser will give it a chance to paint, so we can
+  };
+
+  var schedulePerformWorkUntilDeadline;
+
+  if (typeof localSetImmediate === 'function') {
+    // Node.js and old IE.
+    // There's a few reasons for why we prefer setImmediate.
+    //
+    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
+    // (Even though this is a DOM fork of the Scheduler, you could get here
+    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
+    // https://github.com/facebook/react/issues/20756
+    //
+    // But also, it runs earlier which is the semantic we want.
+    // If other browsers ever implement it, it's better to use it.
+    // Although both of these would be inferior to native scheduling.
+    schedulePerformWorkUntilDeadline = function () {
+      localSetImmediate(performWorkUntilDeadline);
+    };
+  } else if (typeof MessageChannel !== 'undefined') {
+    // DOM and Worker environments.
+    // We prefer MessageChannel because of the 4ms setTimeout clamping.
+    var channel = new MessageChannel();
+    var port = channel.port2;
+    channel.port1.onmessage = performWorkUntilDeadline;
+
+    schedulePerformWorkUntilDeadline = function () {
+      port.postMessage(null);
+    };
+  } else {
+    // We should only fallback here in non-browser environments.
+    schedulePerformWorkUntilDeadline = function () {
+      localSetTimeout(performWorkUntilDeadline, 0);
+    };
+  }
+
+  function requestHostCallback(callback) {
+    scheduledHostCallback = callback;
+
+    if (!isMessageLoopRunning) {
+      isMessageLoopRunning = true;
+      schedulePerformWorkUntilDeadline();
+    }
+  }
+
+  function requestHostTimeout(callback, ms) {
+    taskTimeoutID = localSetTimeout(function () {
+      callback(getCurrentTime());
+    }, ms);
+  }
+
+  function cancelHostTimeout() {
+    localClearTimeout(taskTimeoutID);
+    taskTimeoutID = -1;
+  }
+
+  var unstable_requestPaint = requestPaint;
+  var unstable_Profiling =  null;
+
+
+
+  var Scheduler = /*#__PURE__*/Object.freeze({
+    __proto__: null,
+    unstable_ImmediatePriority: ImmediatePriority,
+    unstable_UserBlockingPriority: UserBlockingPriority,
+    unstable_NormalPriority: NormalPriority,
+    unstable_IdlePriority: IdlePriority,
+    unstable_LowPriority: LowPriority,
+    unstable_runWithPriority: unstable_runWithPriority,
+    unstable_next: unstable_next,
+    unstable_scheduleCallback: unstable_scheduleCallback,
+    unstable_cancelCallback: unstable_cancelCallback,
+    unstable_wrapCallback: unstable_wrapCallback,
+    unstable_getCurrentPriorityLevel: unstable_getCurrentPriorityLevel,
+    unstable_shouldYield: shouldYieldToHost,
+    unstable_requestPaint: unstable_requestPaint,
+    unstable_continueExecution: unstable_continueExecution,
+    unstable_pauseExecution: unstable_pauseExecution,
+    unstable_getFirstCallbackNode: unstable_getFirstCallbackNode,
+    get unstable_now () { return getCurrentTime; },
+    unstable_forceFrameRate: forceFrameRate,
+    unstable_Profiling: unstable_Profiling
+  });
+
+  var ReactSharedInternals$1 = {
+    ReactCurrentDispatcher: ReactCurrentDispatcher,
+    ReactCurrentOwner: ReactCurrentOwner,
+    ReactCurrentBatchConfig: ReactCurrentBatchConfig,
+    // Re-export the schedule API(s) for UMD bundles.
+    // This avoids introducing a dependency on a new UMD global in a minor update,
+    // Since that would be a breaking change (e.g. for all existing CodeSandboxes).
+    // This re-export is only required for UMD bundles;
+    // CJS bundles use the shared NPM package.
+    Scheduler: Scheduler
+  };
+
+  {
+    ReactSharedInternals$1.ReactCurrentActQueue = ReactCurrentActQueue;
+    ReactSharedInternals$1.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
+  }
+
+  {
+    ReactSharedInternals$1.ContextRegistry = ContextRegistry;
+  }
+
+  function startTransition(scope, options) {
+    var prevTransition = ReactCurrentBatchConfig.transition;
+    ReactCurrentBatchConfig.transition = {};
+    var currentTransition = ReactCurrentBatchConfig.transition;
+
+    {
+      ReactCurrentBatchConfig.transition._updatedFibers = new Set();
+    }
+
+    try {
+      scope();
+    } finally {
+      ReactCurrentBatchConfig.transition = prevTransition;
+
+      {
+        if (prevTransition === null && currentTransition._updatedFibers) {
+          var updatedFibersCount = currentTransition._updatedFibers.size;
+
+          if (updatedFibersCount > 10) {
+            warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
+          }
+
+          currentTransition._updatedFibers.clear();
+        }
+      }
+    }
+  }
+
+  var didWarnAboutMessageChannel = false;
+  var enqueueTaskImpl = null;
+  function enqueueTask(task) {
+    if (enqueueTaskImpl === null) {
+      try {
+        // read require off the module object to get around the bundlers.
+        // we don't want them to detect a require and bundle a Node polyfill.
+        var requireString = ('require' + Math.random()).slice(0, 7);
+        var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
+        // version of setImmediate, bypassing fake timers if any.
+
+        enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
+      } catch (_err) {
+        // we're in a browser
+        // we can't use regular timers because they may still be faked
+        // so we try MessageChannel+postMessage instead
+        enqueueTaskImpl = function (callback) {
+          {
+            if (didWarnAboutMessageChannel === false) {
+              didWarnAboutMessageChannel = true;
+
+              if (typeof MessageChannel === 'undefined') {
+                error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
+              }
+            }
+          }
+
+          var channel = new MessageChannel();
+          channel.port1.onmessage = callback;
+          channel.port2.postMessage(undefined);
+        };
+      }
+    }
+
+    return enqueueTaskImpl(task);
+  }
+
+  var actScopeDepth = 0;
+  var didWarnNoAwaitAct = false;
+  function act(callback) {
+    {
+      // `act` calls can be nested, so we track the depth. This represents the
+      // number of `act` scopes on the stack.
+      var prevActScopeDepth = actScopeDepth;
+      actScopeDepth++;
+
+      if (ReactCurrentActQueue.current === null) {
+        // This is the outermost `act` scope. Initialize the queue. The reconciler
+        // will detect the queue and use it instead of Scheduler.
+        ReactCurrentActQueue.current = [];
+      }
+
+      var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
+      var result;
+
+      try {
+        // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
+        // set to `true` while the given callback is executed, not for updates
+        // triggered during an async event, because this is how the legacy
+        // implementation of `act` behaved.
+        ReactCurrentActQueue.isBatchingLegacy = true;
+        result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
+        // which flushed updates immediately after the scope function exits, even
+        // if it's an async function.
+
+        if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
+          var queue = ReactCurrentActQueue.current;
+
+          if (queue !== null) {
+            ReactCurrentActQueue.didScheduleLegacyUpdate = false;
+            flushActQueue(queue);
+          }
+        }
+      } catch (error) {
+        popActScope(prevActScopeDepth);
+        throw error;
+      } finally {
+        ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
+      }
+
+      if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
+        var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
+        // for it to resolve before exiting the current scope.
+
+        var wasAwaited = false;
+        var thenable = {
+          then: function (resolve, reject) {
+            wasAwaited = true;
+            thenableResult.then(function (returnValue) {
+              popActScope(prevActScopeDepth);
+
+              if (actScopeDepth === 0) {
+                // We've exited the outermost act scope. Recursively flush the
+                // queue until there's no remaining work.
+                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+              } else {
+                resolve(returnValue);
+              }
+            }, function (error) {
+              // The callback threw an error.
+              popActScope(prevActScopeDepth);
+              reject(error);
+            });
+          }
+        };
+
+        {
+          if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
+            // eslint-disable-next-line no-undef
+            Promise.resolve().then(function () {}).then(function () {
+              if (!wasAwaited) {
+                didWarnNoAwaitAct = true;
+
+                error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
+              }
+            });
+          }
+        }
+
+        return thenable;
+      } else {
+        var returnValue = result; // The callback is not an async function. Exit the current scope
+        // immediately, without awaiting.
+
+        popActScope(prevActScopeDepth);
+
+        if (actScopeDepth === 0) {
+          // Exiting the outermost act scope. Flush the queue.
+          var _queue = ReactCurrentActQueue.current;
+
+          if (_queue !== null) {
+            flushActQueue(_queue);
+            ReactCurrentActQueue.current = null;
+          } // Return a thenable. If the user awaits it, we'll flush again in
+          // case additional work was scheduled by a microtask.
+
+
+          var _thenable = {
+            then: function (resolve, reject) {
+              // Confirm we haven't re-entered another `act` scope, in case
+              // the user does something weird like await the thenable
+              // multiple times.
+              if (ReactCurrentActQueue.current === null) {
+                // Recursively flush the queue until there's no remaining work.
+                ReactCurrentActQueue.current = [];
+                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+              } else {
+                resolve(returnValue);
+              }
+            }
+          };
+          return _thenable;
+        } else {
+          // Since we're inside a nested `act` scope, the returned thenable
+          // immediately resolves. The outer scope will flush the queue.
+          var _thenable2 = {
+            then: function (resolve, reject) {
+              resolve(returnValue);
+            }
+          };
+          return _thenable2;
+        }
+      }
+    }
+  }
+
+  function popActScope(prevActScopeDepth) {
+    {
+      if (prevActScopeDepth !== actScopeDepth - 1) {
+        error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
+      }
+
+      actScopeDepth = prevActScopeDepth;
+    }
+  }
+
+  function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
+    {
+      var queue = ReactCurrentActQueue.current;
+
+      if (queue !== null) {
+        try {
+          flushActQueue(queue);
+          enqueueTask(function () {
+            if (queue.length === 0) {
+              // No additional work was scheduled. Finish.
+              ReactCurrentActQueue.current = null;
+              resolve(returnValue);
+            } else {
+              // Keep flushing work until there's none left.
+              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
+            }
+          });
+        } catch (error) {
+          reject(error);
+        }
+      } else {
+        resolve(returnValue);
+      }
+    }
+  }
+
+  var isFlushing = false;
+
+  function flushActQueue(queue) {
+    {
+      if (!isFlushing) {
+        // Prevent re-entrance.
+        isFlushing = true;
+        var i = 0;
+
+        try {
+          for (; i < queue.length; i++) {
+            var callback = queue[i];
+
+            do {
+              callback = callback(true);
+            } while (callback !== null);
+          }
+
+          queue.length = 0;
+        } catch (error) {
+          // If something throws, leave the remaining callbacks on the queue.
+          queue = queue.slice(i + 1);
+          throw error;
+        } finally {
+          isFlushing = false;
+        }
+      }
+    }
+  }
+
+  var createElement$1 =  createElementWithValidation ;
+  var cloneElement$1 =  cloneElementWithValidation ;
+  var createFactory =  createFactoryWithValidation ;
+  var Children = {
+    map: mapChildren,
+    forEach: forEachChildren,
+    count: countChildren,
+    toArray: toArray,
+    only: onlyChild
+  };
+
+  exports.Children = Children;
+  exports.Component = Component;
+  exports.Fragment = REACT_FRAGMENT_TYPE;
+  exports.Profiler = REACT_PROFILER_TYPE;
+  exports.PureComponent = PureComponent;
+  exports.StrictMode = REACT_STRICT_MODE_TYPE;
+  exports.Suspense = REACT_SUSPENSE_TYPE;
+  exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+  exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals$1;
+  exports.cloneElement = cloneElement$1;
+  exports.createContext = createContext;
+  exports.createElement = createElement$1;
+  exports.createFactory = createFactory;
+  exports.createRef = createRef;
+  exports.createServerContext = createServerContext;
+  exports.forwardRef = forwardRef;
+  exports.isValidElement = isValidElement;
+  exports.lazy = lazy;
+  exports.memo = memo;
+  exports.startTransition = startTransition;
+  exports.unstable_Cache = REACT_CACHE_TYPE;
+  exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+  exports.unstable_Offscreen = REACT_OFFSCREEN_TYPE;
+  exports.unstable_act = act;
+  exports.unstable_getCacheForType = getCacheForType;
+  exports.unstable_getCacheSignal = getCacheSignal;
+  exports.unstable_useCacheRefresh = useCacheRefresh;
+  exports.useCallback = useCallback;
+  exports.useContext = useContext;
+  exports.useDebugValue = useDebugValue;
+  exports.useDeferredValue = useDeferredValue;
+  exports.useEffect = useEffect;
+  exports.useId = useId;
+  exports.useImperativeHandle = useImperativeHandle;
+  exports.useInsertionEffect = useInsertionEffect;
+  exports.useLayoutEffect = useLayoutEffect;
+  exports.useMemo = useMemo;
+  exports.useReducer = useReducer;
+  exports.useRef = useRef;
+  exports.useState = useState;
+  exports.useSyncExternalStore = useSyncExternalStore;
+  exports.useTransition = useTransition;
+  exports.version = ReactVersion;
+
+})));
+//# sourceMappingURL=react.development.js.map
diff --git a/node_modules/react/umd/react.development.js.map b/node_modules/react/umd/react.development.js.map
new file mode 100644
index 0000000..a2debae
--- /dev/null
+++ b/node_modules/react/umd/react.development.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.development.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentActQueue.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactDebugCurrentFrame.js","D:/code-projects/debugger-learning/react/packages/shared/ReactFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/shared/consoleWithStackDev.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/CheckStringCoercion.js","D:/code-projects/debugger-learning/react/packages/shared/getComponentNameFromType.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/shared/isValidElementType.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/shared/ConsolePatchingDev.js","D:/code-projects/debugger-learning/react/packages/shared/ReactComponentStackFrame.js","D:/code-projects/debugger-learning/react/packages/shared/checkPropTypes.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElementValidator.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContext.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerMinHeap.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerPriorities.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerProfiling.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/forks/Scheduler.js","D:/code-projects/debugger-learning/react/packages/react/src/forks/ReactSharedInternals.umd.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/shared/enqueueTask.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactAct.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ntype RendererTask = boolean => RendererTask | null;\r\n\r\nconst ReactCurrentActQueue = {\r\n  current: (null: null | Array<RendererTask>),\r\n\r\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\r\n  isBatchingLegacy: false,\r\n  didScheduleLegacyUpdate: false,\r\n};\r\n\r\nexport default ReactCurrentActQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst ReactDebugCurrentFrame = {};\r\n\r\nlet currentExtraStackFrame = (null: null | string);\r\n\r\nexport function setExtraStackFrame(stack: null | string) {\r\n  if (__DEV__) {\r\n    currentExtraStackFrame = stack;\r\n  }\r\n}\r\n\r\nif (__DEV__) {\r\n  ReactDebugCurrentFrame.setExtraStackFrame = function(stack: null | string) {\r\n    if (__DEV__) {\r\n      currentExtraStackFrame = stack;\r\n    }\r\n  };\r\n  // Stack implementation injected by the current renderer.\r\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\r\n\r\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\r\n    let stack = '';\r\n\r\n    // Add an extra top frame while an element is being validated\r\n    if (currentExtraStackFrame) {\r\n      stack += currentExtraStackFrame;\r\n    }\r\n\r\n    // Delegate to the injected renderer-specific implementation\r\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\r\n    if (impl) {\r\n      stack += impl() || '';\r\n    }\r\n\r\n    return stack;\r\n  };\r\n}\r\n\r\nexport default ReactDebugCurrentFrame;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (zero effort)\r\n//\r\n// Flags that can likely be deleted or landed without consequences\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const warnAboutDeprecatedLifecycles = true;\r\nexport const enableComponentStackLocations = true;\r\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Land or remove (moderate effort)\r\n//\r\n// Flags that can be probably deleted or landed, but might require extra effort\r\n// like migrating internal callers or performance testing.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This is blocked on adding a symbol polyfill to www.\r\nexport const enableSymbolFallbackForWWW = false;\r\n\r\n// This rolled out to 10% public in www, so we should be able to land, but some\r\n// internal tests need to be updated. The open source behavior is correct.\r\nexport const skipUnmountedBoundaries = true;\r\n\r\n// TODO: Finish rolling out in www\r\nexport const enableClientRenderFallbackOnTextMismatch = true;\r\n\r\n// TODO: Need to review this code one more time before landing\r\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\r\n\r\n// Recoil still uses useMutableSource in www, need to delete\r\nexport const enableUseMutableSource = false;\r\n\r\n// Not sure if www still uses this. We don't have a replacement but whatever we\r\n// replace it with will likely be different than what's already there, so we\r\n// probably should just delete it as long as nothing in www relies on it.\r\nexport const enableSchedulerDebugging = false;\r\n\r\n// Need to remove didTimeout argument from Scheduler before landing\r\nexport const disableSchedulerTimeoutInWorkLoop = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Slated for removal in the future (significant effort)\r\n//\r\n// These are experiments that didn't work out, and never shipped, but we can't\r\n// delete from the codebase until we migrate internal callers.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Add a callback property to suspense to notify which promises are currently\r\n// in the update queue. This allows reporting and tracing of what is causing\r\n// the user to see a loading state.\r\n//\r\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\r\n// hydrated or deleted.\r\n//\r\n// This will eventually be replaced by the Transition Tracing proposal.\r\nexport const enableSuspenseCallback = false;\r\n\r\n// Experimental Scope support.\r\nexport const enableScopeAPI = false;\r\n\r\n// Experimental Create Event Handle API.\r\nexport const enableCreateEventHandleAPI = false;\r\n\r\n// This controls whether you get the `.old` modules or the `.new` modules in\r\n// the react-reconciler package.\r\nexport const enableNewReconciler = false;\r\n\r\n// Support legacy Primer support on internal FB www\r\nexport const enableLegacyFBSupport = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Ongoing experiments\r\n//\r\n// These are features that we're either actively exploring or are reasonably\r\n// likely to include in an upcoming release.\r\n// -----------------------------------------------------------------------------\r\n\r\nexport const enableCache = __EXPERIMENTAL__;\r\nexport const enableCacheElement = __EXPERIMENTAL__;\r\n\r\nexport const enableTransitionTracing = false;\r\n\r\n// No known bugs, but needs performance testing\r\nexport const enableLazyContextPropagation = false;\r\n\r\n// FB-only usage. The new API has different semantics.\r\nexport const enableLegacyHidden = false;\r\n\r\n// Enables unstable_avoidThisFallback feature in Fiber\r\nexport const enableSuspenseAvoidThisFallback = false;\r\n// Enables unstable_avoidThisFallback feature in Fizz\r\nexport const enableSuspenseAvoidThisFallbackFizz = false;\r\n\r\nexport const enableCPUSuspense = __EXPERIMENTAL__;\r\n\r\n// When a node is unmounted, recurse into the Fiber subtree and clean out\r\n// references. Each level cleans up more fiber fields than the previous level.\r\n// As far as we know, React itself doesn't leak, but because the Fiber contains\r\n// cycles, even a single leak in product code can cause us to retain large\r\n// amounts of memory.\r\n//\r\n// The long term plan is to remove the cycles, but in the meantime, we clear\r\n// additional fields to mitigate.\r\n//\r\n// It's an enum so that we can experiment with different levels of\r\n// aggressiveness.\r\nexport const deletedTreeCleanUpLevel = 3;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Chopping Block\r\n//\r\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\r\n// when we we plan to enable them.\r\n// -----------------------------------------------------------------------------\r\n\r\n// This flag enables Strict Effects by default. We're not turning this on until\r\n// after 18 because it requires migration work. Recommendation is to use\r\n// <StrictMode /> to gradually upgrade components.\r\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\r\n// If FALSE, these trees will be StrictLegacyMode.\r\nexport const createRootStrictEffectsByDefault = false;\r\n\r\nexport const disableModulePatternComponents = false;\r\n\r\nexport const disableLegacyContext = false;\r\n\r\nexport const enableUseRefAccessWarning = false;\r\n\r\n// Enables time slicing for updates that aren't wrapped in startTransition.\r\nexport const enableSyncDefaultUpdates = true;\r\n\r\n// Adds an opt-in to time slicing for updates that aren't wrapped in\r\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\r\nexport const allowConcurrentByDefault = false;\r\n\r\n// Updates that occur in the render phase are not officially supported. But when\r\n// they do occur, we defer them to a subsequent render by picking a lane that's\r\n// not currently rendering. We treat them the same as if they came from an\r\n// interleaved event. Remove this flag once we have migrated to the\r\n// new behavior.\r\n// NOTE: Not sure if we'll end up doing this or not.\r\nexport const deferRenderPhaseUpdateToNextBatch = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// React DOM Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to React DOM. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// Disable support for comment nodes as React DOM containers. Already disabled\r\n// in open source, but www codebase still relies on it. Need to remove.\r\nexport const disableCommentsAsDOMContainers = true;\r\n\r\n// Disable javascript: URL strings in href for XSS protection.\r\nexport const disableJavaScriptURLs = false;\r\n\r\nexport const enableTrustedTypesIntegration = false;\r\n\r\n// Prevent the value and checked attributes from syncing with their related\r\n// DOM properties\r\nexport const disableInputAttributeSyncing = false;\r\n\r\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\r\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\r\n// request for certain browsers.\r\nexport const enableFilterEmptyStringAttributesDOM = false;\r\n\r\n// Changes the behavior for rendering custom elements in both server rendering\r\n// and client rendering, mostly to allow JSX attributes to apply to the custom\r\n// element's object properties instead of only HTML attributes.\r\n// https://github.com/facebook/react/issues/11347\r\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\r\n\r\n// Disables children for <textarea> elements\r\nexport const disableTextareaChildren = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// JSX Chopping Block\r\n//\r\n// Similar to main Chopping Block but only flags related to JSX. These are\r\n// grouped because we will likely batch all of them into a single major release.\r\n// -----------------------------------------------------------------------------\r\n\r\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\r\n\r\n// Part of the simplification of React.createElement so we can eventually move\r\n// from React.createElement to React.jsx\r\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\r\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\r\n\r\n// Enables a warning when trying to spread a 'key' to an element;\r\n// a deprecated pattern we want to get rid of in the future\r\nexport const warnAboutSpreadingKeyToJSX = false;\r\n\r\nexport const warnAboutStringRefs = false;\r\n\r\n// -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\nexport const enableSchedulingProfiler = __PROFILE__;\r\n\r\n// Helps identify side effects in render-phase lifecycle hooks and setState\r\n// reducers by double invoking them in StrictLegacyMode.\r\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\r\n\r\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\r\n// this feature flag only impacts StrictEffectsMode.\r\nexport const enableStrictEffects = __DEV__;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nexport const enableProfilerTimer = __PROFILE__;\r\n\r\n// Record durations for commit and passive effects phases.\r\nexport const enableProfilerCommitHooks = __PROFILE__;\r\n\r\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\r\n\r\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\nexport const enableDebugTracing = false;\r\n\r\n// Track which Fiber(s) schedule render work.\r\nexport const enableUpdaterTracking = __PROFILE__;\r\n\r\n// Only enabled in RN, related to enableComponentStackLocations\r\nexport const disableNativeComponentFrames = false;\r\nexport const enableServerContext = __EXPERIMENTAL__;\r\n\r\n// Internal only.\r\nexport const enableGetInspectorDataForInstanceInProduction = false;\r\n\r\n// Profiler API accepts a function to be called when a nested update is scheduled.\r\n// This callback accepts the component type (class instance or function) the update is scheduled for.\r\nexport const enableProfilerNestedUpdateScheduledHook = false;\r\n\r\nexport const consoleManagedByDevToolsDuringStrictMode = true;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nlet suppressWarning = false;\r\nexport function setSuppressWarning(newSuppressWarning) {\r\n  if (__DEV__) {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n}\r\n\r\n// In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nexport function warn(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport function error(format, ...args) {\r\n  if (__DEV__) {\r\n    if (!suppressWarning) {\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  if (__DEV__) {\r\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    }\r\n\r\n    // eslint-disable-next-line react-internal/safe-string-coercion\r\n    const argsWithFormat = args.map(item => String(item));\r\n    // Careful: RN currently depends on this prefix\r\n    argsWithFormat.unshift('Warning: ' + format);\r\n    // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value: mixed): string {\r\n  if (__DEV__) {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    const type =\r\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\r\n      (value: any).constructor.name ||\r\n      'Object';\r\n    return type;\r\n  }\r\n}\r\n\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction willCoercionThrow(value: mixed): boolean {\r\n  if (__DEV__) {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value: mixed) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + (value: any);\r\n}\r\n\r\nexport function checkAttributeStringCoercion(\r\n  value: mixed,\r\n  attributeName: string,\r\n) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` attribute is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        attributeName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkKeyStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided key is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkPropStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` prop is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided `%s` CSS property is an unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        propName,\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkHtmlStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'The provided HTML markup uses a value of unsupported type %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkFormFieldValueStringCoercion(value: mixed) {\r\n  if (__DEV__) {\r\n    if (willCoercionThrow(value)) {\r\n      console.error(\r\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\r\n          ' must be strings, not %s.' +\r\n          ' This value must be coerced to a string before before using it here.',\r\n        typeName(value),\r\n      );\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {\r\n  enableServerContext,\r\n  enableTransitionTracing,\r\n  enableCache,\r\n} from './ReactFeatureFlags';\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getWrappedName(\r\n  outerType: mixed,\r\n  innerType: any,\r\n  wrapperName: string,\r\n): string {\r\n  const displayName = (outerType: any).displayName;\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n  const functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\r\n}\r\n\r\n// Keep in sync with react-reconciler/getComponentNameFromFiber\r\nfunction getContextName(type: ReactContext<any>) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\nexport default function getComponentNameFromType(type: mixed): string | null {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  if (__DEV__) {\r\n    if (typeof (type: any).tag === 'number') {\r\n      console.error(\r\n        'Received an unexpected object in getComponentNameFromType(). ' +\r\n          'This is likely a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return (type: any).displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n    case REACT_CACHE_TYPE:\r\n      if (enableCache) {\r\n        return 'Cache';\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case REACT_TRACING_MARKER_TYPE:\r\n      if (enableTransitionTracing) {\r\n        return 'TracingMarker';\r\n      }\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        const context: ReactContext<any> = (type: any);\r\n        return getContextName(context) + '.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        const provider: ReactProviderType<any> = (type: any);\r\n        return getContextName(provider._context) + '.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        const outerName = (type: any).displayName || null;\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n      case REACT_SERVER_CONTEXT_TYPE:\r\n        if (enableServerContext) {\r\n          const context2 = ((type: any): ReactContext<any>);\r\n          return (context2.displayName || context2._globalName) + '.Provider';\r\n        }\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_CONTEXT_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {\r\n  enableScopeAPI,\r\n  enableCacheElement,\r\n  enableTransitionTracing,\r\n  enableDebugTracing,\r\n  enableLegacyHidden,\r\n  enableSymbolFallbackForWWW,\r\n} from './ReactFeatureFlags';\r\n\r\nlet REACT_MODULE_REFERENCE;\r\nif (enableSymbolFallbackForWWW) {\r\n  if (typeof Symbol === 'function') {\r\n    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n  } else {\r\n    REACT_MODULE_REFERENCE = 0;\r\n  }\r\n} else {\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nexport default function isValidElementType(type: mixed) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  }\r\n\r\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n  if (\r\n    type === REACT_FRAGMENT_TYPE ||\r\n    type === REACT_PROFILER_TYPE ||\r\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\r\n    type === REACT_STRICT_MODE_TYPE ||\r\n    type === REACT_SUSPENSE_TYPE ||\r\n    type === REACT_SUSPENSE_LIST_TYPE ||\r\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\r\n    type === REACT_OFFSCREEN_TYPE ||\r\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\r\n    (enableCacheElement && type === REACT_CACHE_TYPE) ||\r\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (\r\n      type.$$typeof === REACT_LAZY_TYPE ||\r\n      type.$$typeof === REACT_MEMO_TYPE ||\r\n      type.$$typeof === REACT_PROVIDER_TYPE ||\r\n      type.$$typeof === REACT_CONTEXT_TYPE ||\r\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n      // This needs to include all possible module reference object\r\n      // types supported by any Flight configuration anywhere since\r\n      // we don't know which Flight build this will end up being used\r\n      // with.\r\n      type.$$typeof === REACT_MODULE_REFERENCE ||\r\n      type.getModuleId !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\n\r\nlet disabledDepth = 0;\r\nlet prevLog;\r\nlet prevInfo;\r\nlet prevWarn;\r\nlet prevError;\r\nlet prevGroup;\r\nlet prevGroupCollapsed;\r\nlet prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\ndisabledLog.__reactDisabledLog = true;\r\n\r\nexport function disableLogs(): void {\r\n  if (__DEV__) {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd;\r\n      // https://github.com/facebook/react/issues/19099\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props,\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    disabledDepth++;\r\n  }\r\n}\r\n\r\nexport function reenableLogs(): void {\r\n  if (__DEV__) {\r\n    disabledDepth--;\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      const props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n      };\r\n      // $FlowFixMe Flow thinks console is immutable.\r\n      Object.defineProperties(console, {\r\n        log: {...props, value: prevLog},\r\n        info: {...props, value: prevInfo},\r\n        warn: {...props, value: prevWarn},\r\n        error: {...props, value: prevError},\r\n        group: {...props, value: prevGroup},\r\n        groupCollapsed: {...props, value: prevGroupCollapsed},\r\n        groupEnd: {...props, value: prevGroupEnd},\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n    if (disabledDepth < 0) {\r\n      console.error(\r\n        'disabledDepth fell below zero. ' +\r\n          'This is a bug in React. Please file an issue.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Source} from 'shared/ReactElementType';\r\nimport type {LazyComponent} from 'react/src/ReactLazy';\r\n\r\nimport {\r\n  enableComponentStackLocations,\r\n  disableNativeComponentFrames,\r\n} from 'shared/ReactFeatureFlags';\r\n\r\nimport {\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_LAZY_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\r\n\r\nlet prefix;\r\nexport function describeBuiltInComponentFrame(\r\n  name: string,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = (match && match[1]) || '';\r\n      }\r\n    }\r\n    // We use the prefix to ensure our stacks line up with native stack frames.\r\n    return '\\n' + prefix + name;\r\n  } else {\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nlet reentry = false;\r\nlet componentFrameCache;\r\nif (__DEV__) {\r\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nexport function describeNativeComponentFrame(\r\n  fn: Function,\r\n  construct: boolean,\r\n): string {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if (disableNativeComponentFrames || !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const frame = componentFrameCache.get(fn);\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  let control;\r\n\r\n  reentry = true;\r\n  const previousPrepareStackTrace = Error.prepareStackTrace;\r\n  // $FlowFixMe It does accept undefined.\r\n  Error.prepareStackTrace = undefined;\r\n  let previousDispatcher;\r\n  if (__DEV__) {\r\n    previousDispatcher = ReactCurrentDispatcher.current;\r\n    // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      const Fake = function() {\r\n        throw Error();\r\n      };\r\n      // $FlowFixMe\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function() {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        },\r\n      });\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n      // TODO(luna): This will currently only throw if the function component\r\n      // tries to access React/ReactDOM/props. We should probably make this throw\r\n      // in simple components too\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      const sampleLines = sample.stack.split('\\n');\r\n      const controlLines = control.stack.split('\\n');\r\n      let s = sampleLines.length - 1;\r\n      let c = controlLines.length - 1;\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--;\r\n              // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\r\n\r\n                // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n                if (fn.displayName && frame.includes('<anonymous>')) {\r\n                  frame = frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, frame);\r\n                  }\r\n                }\r\n                // Return the line we found.\r\n                return frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n    if (__DEV__) {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  }\r\n  // Fallback to just using the name if we couldn't make it throw.\r\n  const name = fn ? fn.displayName || fn.name : '';\r\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n  if (__DEV__) {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n  return syntheticFrame;\r\n}\r\n\r\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(\r\n  name: null | string,\r\n  source: void | null | Source,\r\n  ownerName: null | string,\r\n) {\r\n  let sourceInfo = '';\r\n  if (__DEV__ && source) {\r\n    const path = source.fileName;\r\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n    if (/^index\\./.test(fileName)) {\r\n      const match = path.match(BEFORE_SLASH_RE);\r\n      if (match) {\r\n        const pathBeforeSlash = match[1];\r\n        if (pathBeforeSlash) {\r\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n          fileName = folderName + '/' + fileName;\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n}\r\n\r\nexport function describeClassComponentFrame(\r\n  ctor: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  } else {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\n\r\nexport function describeFunctionComponentFrame(\r\n  fn: Function,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (enableComponentStackLocations) {\r\n    return describeNativeComponentFrame(fn, false);\r\n  } else {\r\n    if (!fn) {\r\n      return '';\r\n    }\r\n    const name = fn.displayName || fn.name || null;\r\n    let ownerName = null;\r\n    if (__DEV__ && ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component: Function) {\r\n  const prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nexport function describeUnknownElementTypeFrameInDEV(\r\n  type: any,\r\n  source: void | null | Source,\r\n  ownerFn: void | null | Function,\r\n): string {\r\n  if (!__DEV__) {\r\n    return '';\r\n  }\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n  if (typeof type === 'function') {\r\n    if (enableComponentStackLocations) {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    } else {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n      case REACT_LAZY_TYPE: {\r\n        const lazyComponent: LazyComponent<any, any> = (type: any);\r\n        const payload = lazyComponent._payload;\r\n        const init = lazyComponent._init;\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn,\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst loggedTypeFailures = {};\r\n\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\n\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function checkPropTypes(\r\n  typeSpecs: Object,\r\n  values: Object,\r\n  location: string,\r\n  componentName: ?string,\r\n  element?: any,\r\n): void {\r\n  if (__DEV__) {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    const has = Function.call.bind(hasOwnProperty);\r\n    for (const typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        let error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            const err = Error(\r\n              (componentName || 'React class') +\r\n                ': ' +\r\n                location +\r\n                ' type `' +\r\n                typeSpecName +\r\n                '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' +\r\n                typeof typeSpecs[typeSpecName] +\r\n                '`.' +\r\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\r\n          );\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n          console.error(\r\n            '%s: type specification of %s' +\r\n              ' `%s` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a %s. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).',\r\n            componentName || 'React class',\r\n            location,\r\n            typeSpecName,\r\n            typeof error,\r\n          );\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n          console.error('Failed %s type: %s', location, error.message);\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_FORWARD_REF_TYPE,\r\n  REACT_MEMO_TYPE,\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_ELEMENT_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {warnAboutSpreadingKeyToJSX} from 'shared/ReactFeatureFlags';\r\nimport checkPropTypes from 'shared/checkPropTypes';\r\nimport isArray from 'shared/isArray';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport {\r\n  isValidElement,\r\n  createElement,\r\n  cloneElement,\r\n  jsxDEV,\r\n} from './ReactElement';\r\nimport {setExtraStackFrame} from './ReactDebugCurrentFrame';\r\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  if (__DEV__) {\r\n    if (element) {\r\n      const owner = element._owner;\r\n      const stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null,\r\n      );\r\n      setExtraStackFrame(stack);\r\n    } else {\r\n      setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nlet propTypesMisspellWarningShown;\r\n\r\nif (__DEV__) {\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (ReactCurrentOwner.current) {\r\n    const name = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n    if (name) {\r\n      return '\\n\\nCheck the render method of `' + name + '`.';\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  if (source !== undefined) {\r\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n    const lineNumber = source.lineNumber;\r\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\r\n  if (elementProps !== null && elementProps !== undefined) {\r\n    return getSourceInfoErrorAddendum(elementProps.__source);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nconst ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  let info = getDeclarationErrorAddendum();\r\n\r\n  if (!info) {\r\n    const parentName =\r\n      typeof parentType === 'string'\r\n        ? parentType\r\n        : parentType.displayName || parentType.name;\r\n    if (parentName) {\r\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\r\n    }\r\n  }\r\n  return info;\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (!element._store || element._store.validated || element.key != null) {\r\n    return;\r\n  }\r\n  element._store.validated = true;\r\n\r\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n    return;\r\n  }\r\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n  // Usually the current owner is the offender, but if it accepts children as a\r\n  // property, it may be the creator of the child that's responsible for\r\n  // assigning it a key.\r\n  let childOwner = '';\r\n  if (\r\n    element &&\r\n    element._owner &&\r\n    element._owner !== ReactCurrentOwner.current\r\n  ) {\r\n    // Give the component that originally created this child.\r\n    childOwner = ` It was passed a child from ${getComponentNameFromType(\r\n      element._owner.type,\r\n    )}.`;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    setCurrentlyValidatingElement(element);\r\n    console.error(\r\n      'Each child in a list should have a unique \"key\" prop.' +\r\n        '%s%s See https://reactjs.org/link/warning-keys for more information.',\r\n      currentComponentErrorInfo,\r\n      childOwner,\r\n    );\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (typeof node !== 'object') {\r\n    return;\r\n  }\r\n  if (isArray(node)) {\r\n    for (let i = 0; i < node.length; i++) {\r\n      const child = node[i];\r\n      if (isValidElement(child)) {\r\n        validateExplicitKey(child, parentType);\r\n      }\r\n    }\r\n  } else if (isValidElement(node)) {\r\n    // This element was passed in a valid location.\r\n    if (node._store) {\r\n      node._store.validated = true;\r\n    }\r\n  } else if (node) {\r\n    const iteratorFn = getIteratorFn(node);\r\n    if (typeof iteratorFn === 'function') {\r\n      // Entry iterators used to provide implicit keys,\r\n      // but now we print a separate warning for them later.\r\n      if (iteratorFn !== node.entries) {\r\n        const iterator = iteratorFn.call(node);\r\n        let step;\r\n        while (!(step = iterator.next()).done) {\r\n          if (isValidElement(step.value)) {\r\n            validateExplicitKey(step.value, parentType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  if (__DEV__) {\r\n    const type = element.type;\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n    let propTypes;\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (\r\n      typeof type === 'object' &&\r\n      (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n        // Note: Memo only checks outer props here.\r\n        // Inner props are checked in the reconciler.\r\n        type.$$typeof === REACT_MEMO_TYPE)\r\n    ) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      const name = getComponentNameFromType(type);\r\n      console.error(\r\n        'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\r\n        name || 'Unknown',\r\n      );\r\n    }\r\n    if (\r\n      typeof type.getDefaultProps === 'function' &&\r\n      !type.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      console.error(\r\n        'getDefaultProps is only used on classic React.createClass ' +\r\n          'definitions. Use a static property named `defaultProps` instead.',\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  if (__DEV__) {\r\n    const keys = Object.keys(fragment.props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement(fragment);\r\n        console.error(\r\n          'Invalid prop `%s` supplied to `React.Fragment`. ' +\r\n            'React.Fragment can only have `key` and `children` props.',\r\n          key,\r\n        );\r\n        setCurrentlyValidatingElement(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement(fragment);\r\n      console.error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n      setCurrentlyValidatingElement(null);\r\n    }\r\n  }\r\n}\r\n\r\nexport function jsxWithValidation(\r\n  type,\r\n  props,\r\n  key,\r\n  isStaticChildren,\r\n  source,\r\n  self,\r\n) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendum(source);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.jsx: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = jsxDEV(type, props, key, source, self);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n\r\n  if (validType) {\r\n    const children = props.children;\r\n    if (children !== undefined) {\r\n      if (isStaticChildren) {\r\n        if (isArray(children)) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            validateChildKeys(children[i], type);\r\n          }\r\n\r\n          if (Object.freeze) {\r\n            Object.freeze(children);\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            console.error(\r\n              'React.jsx: Static children should always be an array. ' +\r\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\r\n                'Use the Babel transform instead.',\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        validateChildKeys(children, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (warnAboutSpreadingKeyToJSX) {\r\n      if (hasOwnProperty.call(props, 'key')) {\r\n        console.error(\r\n          'React.jsx: Spreading a key to JSX is a deprecated pattern. ' +\r\n            'Explicitly pass a key after spreading props in your JSX call. ' +\r\n            'E.g. <%s {...props} key={key} />',\r\n          getComponentNameFromType(type) || 'ComponentName',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n// These two functions exist to still get child warnings in dev\r\n// even with the prod transform. This means that jsxDEV is purely\r\n// opt-in behavior for better messages but that we won't stop\r\n// giving you warnings if you use production apis.\r\nexport function jsxWithValidationStatic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, true);\r\n}\r\n\r\nexport function jsxWithValidationDynamic(type, props, key) {\r\n  return jsxWithValidation(type, props, key, false);\r\n}\r\n\r\nexport function createElementWithValidation(type, props, children) {\r\n  const validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    let info = '';\r\n    if (\r\n      type === undefined ||\r\n      (typeof type === 'object' &&\r\n        type !== null &&\r\n        Object.keys(type).length === 0)\r\n    ) {\r\n      info +=\r\n        ' You likely forgot to export your component from the file ' +\r\n        \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    const sourceInfo = getSourceInfoErrorAddendumForProps(props);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    let typeString;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\r\n      info =\r\n        ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    if (__DEV__) {\r\n      console.error(\r\n        'React.createElement: type is invalid -- expected a string (for ' +\r\n          'built-in components) or a class/function (for composite ' +\r\n          'components) but got: %s.%s',\r\n        typeString,\r\n        info,\r\n      );\r\n    }\r\n  }\r\n\r\n  const element = createElement.apply(this, arguments);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n  if (validType) {\r\n    for (let i = 2; i < arguments.length; i++) {\r\n      validateChildKeys(arguments[i], type);\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nlet didWarnAboutDeprecatedCreateFactory = false;\r\n\r\nexport function createFactoryWithValidation(type) {\r\n  const validatedFactory = createElementWithValidation.bind(null, type);\r\n  validatedFactory.type = type;\r\n  if (__DEV__) {\r\n    if (!didWarnAboutDeprecatedCreateFactory) {\r\n      didWarnAboutDeprecatedCreateFactory = true;\r\n      console.warn(\r\n        'React.createFactory() is deprecated and will be removed in ' +\r\n          'a future major release. Consider using JSX ' +\r\n          'or use React.createElement() directly instead.',\r\n      );\r\n    }\r\n    // Legacy hook: remove it\r\n    Object.defineProperty(validatedFactory, 'type', {\r\n      enumerable: false,\r\n      get: function() {\r\n        console.warn(\r\n          'Factory.type is deprecated. Access the class directly ' +\r\n            'before passing it to createFactory.',\r\n        );\r\n        Object.defineProperty(this, 'type', {\r\n          value: type,\r\n        });\r\n        return type;\r\n      },\r\n    });\r\n  }\r\n\r\n  return validatedFactory;\r\n}\r\n\r\nexport function cloneElementWithValidation(element, props, children) {\r\n  const newElement = cloneElement.apply(this, arguments);\r\n  for (let i = 2; i < arguments.length; i++) {\r\n    validateChildKeys(arguments[i], newElement.type);\r\n  }\r\n  validatePropTypes(newElement);\r\n  return newElement;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nexport const enableSchedulerDebugging = false;\r\nexport const enableIsInputPending = false;\r\nexport const enableProfiling = false;\r\nexport const enableIsInputPendingContinuous = false;\r\nexport const frameYieldMs = 5;\r\nexport const continuousYieldMs = 50;\r\nexport const maxYieldMs = 300;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\ntype Heap = Array<Node>;\r\ntype Node = {|\r\n  id: number,\r\n  sortIndex: number,\r\n|};\r\n\r\nexport function push(heap: Heap, node: Node): void {\r\n  const index = heap.length;\r\n  heap.push(node);\r\n  siftUp(heap, node, index);\r\n}\r\n\r\nexport function peek(heap: Heap): Node | null {\r\n  return heap.length === 0 ? null : heap[0];\r\n}\r\n\r\nexport function pop(heap: Heap): Node | null {\r\n  if (heap.length === 0) {\r\n    return null;\r\n  }\r\n  const first = heap[0];\r\n  const last = heap.pop();\r\n  if (last !== first) {\r\n    heap[0] = last;\r\n    siftDown(heap, last, 0);\r\n  }\r\n  return first;\r\n}\r\n\r\nfunction siftUp(heap, node, i) {\r\n  let index = i;\r\n  while (index > 0) {\r\n    const parentIndex = (index - 1) >>> 1;\r\n    const parent = heap[parentIndex];\r\n    if (compare(parent, node) > 0) {\r\n      // The parent is larger. Swap positions.\r\n      heap[parentIndex] = node;\r\n      heap[index] = parent;\r\n      index = parentIndex;\r\n    } else {\r\n      // The parent is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction siftDown(heap, node, i) {\r\n  let index = i;\r\n  const length = heap.length;\r\n  const halfLength = length >>> 1;\r\n  while (index < halfLength) {\r\n    const leftIndex = (index + 1) * 2 - 1;\r\n    const left = heap[leftIndex];\r\n    const rightIndex = leftIndex + 1;\r\n    const right = heap[rightIndex];\r\n\r\n    // If the left or right node is smaller, swap with the smaller of those.\r\n    if (compare(left, node) < 0) {\r\n      if (rightIndex < length && compare(right, left) < 0) {\r\n        heap[index] = right;\r\n        heap[rightIndex] = node;\r\n        index = rightIndex;\r\n      } else {\r\n        heap[index] = left;\r\n        heap[leftIndex] = node;\r\n        index = leftIndex;\r\n      }\r\n    } else if (rightIndex < length && compare(right, node) < 0) {\r\n      heap[index] = right;\r\n      heap[rightIndex] = node;\r\n      index = rightIndex;\r\n    } else {\r\n      // Neither child is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction compare(a, b) {\r\n  // Compare sort index first, then task id.\r\n  const diff = a.sortIndex - b.sortIndex;\r\n  return diff !== 0 ? diff : a.id - b.id;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n// TODO: Use symbols?\r\nexport const NoPriority = 0;\r\nexport const ImmediatePriority = 1;\r\nexport const UserBlockingPriority = 2;\r\nexport const NormalPriority = 3;\r\nexport const LowPriority = 4;\r\nexport const IdlePriority = 5;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {PriorityLevel} from './SchedulerPriorities';\r\nimport {enableProfiling} from './SchedulerFeatureFlags';\r\n\r\nlet runIdCounter: number = 0;\r\nlet mainThreadIdCounter: number = 0;\r\n\r\n// Bytes per element is 4\r\nconst INITIAL_EVENT_LOG_SIZE = 131072;\r\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\r\n\r\nlet eventLogSize = 0;\r\nlet eventLogBuffer = null;\r\nlet eventLog = null;\r\nlet eventLogIndex = 0;\r\n\r\nconst TaskStartEvent = 1;\r\nconst TaskCompleteEvent = 2;\r\nconst TaskErrorEvent = 3;\r\nconst TaskCancelEvent = 4;\r\nconst TaskRunEvent = 5;\r\nconst TaskYieldEvent = 6;\r\nconst SchedulerSuspendEvent = 7;\r\nconst SchedulerResumeEvent = 8;\r\n\r\nfunction logEvent(entries) {\r\n  if (eventLog !== null) {\r\n    const offset = eventLogIndex;\r\n    eventLogIndex += entries.length;\r\n    if (eventLogIndex + 1 > eventLogSize) {\r\n      eventLogSize *= 2;\r\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\r\n        // Using console['error'] to evade Babel and ESLint\r\n        console['error'](\r\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\r\n            'forget to call `stopLoggingProfilingEvents()`.',\r\n        );\r\n        stopLoggingProfilingEvents();\r\n        return;\r\n      }\r\n      const newEventLog = new Int32Array(eventLogSize * 4);\r\n      newEventLog.set(eventLog);\r\n      eventLogBuffer = newEventLog.buffer;\r\n      eventLog = newEventLog;\r\n    }\r\n    eventLog.set(entries, offset);\r\n  }\r\n}\r\n\r\nexport function startLoggingProfilingEvents(): void {\r\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\r\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\r\n  eventLog = new Int32Array(eventLogBuffer);\r\n  eventLogIndex = 0;\r\n}\r\n\r\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\r\n  const buffer = eventLogBuffer;\r\n  eventLogSize = 0;\r\n  eventLogBuffer = null;\r\n  eventLog = null;\r\n  eventLogIndex = 0;\r\n  return buffer;\r\n}\r\n\r\nexport function markTaskStart(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      // performance.now returns a float, representing milliseconds. When the\r\n      // event is logged, it's coerced to an int. Convert to microseconds to\r\n      // maintain extra degrees of precision.\r\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCompleted(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCanceled(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskErrored(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskRun(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    runIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerSuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    mainThreadIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerUnsuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/* eslint-disable no-var */\r\n\r\nimport {\r\n  enableSchedulerDebugging,\r\n  enableProfiling,\r\n  enableIsInputPending,\r\n  enableIsInputPendingContinuous,\r\n  frameYieldMs,\r\n  continuousYieldMs,\r\n  maxYieldMs,\r\n} from '../SchedulerFeatureFlags';\r\n\r\nimport {push, pop, peek} from '../SchedulerMinHeap';\r\n\r\n// TODO: Use symbols?\r\nimport {\r\n  ImmediatePriority,\r\n  UserBlockingPriority,\r\n  NormalPriority,\r\n  LowPriority,\r\n  IdlePriority,\r\n} from '../SchedulerPriorities';\r\nimport {\r\n  markTaskRun,\r\n  markTaskYield,\r\n  markTaskCompleted,\r\n  markTaskCanceled,\r\n  markTaskErrored,\r\n  markSchedulerSuspended,\r\n  markSchedulerUnsuspended,\r\n  markTaskStart,\r\n  stopLoggingProfilingEvents,\r\n  startLoggingProfilingEvents,\r\n} from '../SchedulerProfiling';\r\n\r\nlet getCurrentTime;\r\nconst hasPerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nif (hasPerformanceNow) {\r\n  const localPerformance = performance;\r\n  getCurrentTime = () => localPerformance.now();\r\n} else {\r\n  const localDate = Date;\r\n  const initialTime = localDate.now();\r\n  getCurrentTime = () => localDate.now() - initialTime;\r\n}\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\n// Times out immediately\r\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\r\n// Eventually times out\r\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\r\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\r\nvar LOW_PRIORITY_TIMEOUT = 10000;\r\n// Never times out\r\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\r\n\r\n// Tasks are stored on a min heap\r\nvar taskQueue = [];\r\nvar timerQueue = [];\r\n\r\n// Incrementing id counter. Used to maintain insertion order.\r\nvar taskIdCounter = 1;\r\n\r\n// Pausing the scheduler is useful for debugging.\r\nvar isSchedulerPaused = false;\r\n\r\nvar currentTask = null;\r\nvar currentPriorityLevel = NormalPriority;\r\n\r\n// This is set while performing work, to prevent re-entrance.\r\nvar isPerformingWork = false;\r\n\r\nvar isHostCallbackScheduled = false;\r\nvar isHostTimeoutScheduled = false;\r\n\r\n// Capture local references to native APIs, in case a polyfill overrides them.\r\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\r\nconst localClearTimeout =\r\n  typeof clearTimeout === 'function' ? clearTimeout : null;\r\nconst localSetImmediate =\r\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\r\n\r\nconst isInputPending =\r\n  typeof navigator !== 'undefined' &&\r\n  navigator.scheduling !== undefined &&\r\n  navigator.scheduling.isInputPending !== undefined\r\n    ? navigator.scheduling.isInputPending.bind(navigator.scheduling)\r\n    : null;\r\n\r\nconst continuousOptions = {includeContinuous: enableIsInputPendingContinuous};\r\n\r\nfunction advanceTimers(currentTime) {\r\n  // Check for tasks that are no longer delayed and add them to the queue.\r\n  let timer = peek(timerQueue);\r\n  while (timer !== null) {\r\n    if (timer.callback === null) {\r\n      // Timer was cancelled.\r\n      pop(timerQueue);\r\n    } else if (timer.startTime <= currentTime) {\r\n      // Timer fired. Transfer to the task queue.\r\n      pop(timerQueue);\r\n      timer.sortIndex = timer.expirationTime;\r\n      push(taskQueue, timer);\r\n      if (enableProfiling) {\r\n        markTaskStart(timer, currentTime);\r\n        timer.isQueued = true;\r\n      }\r\n    } else {\r\n      // Remaining timers are pending.\r\n      return;\r\n    }\r\n    timer = peek(timerQueue);\r\n  }\r\n}\r\n\r\nfunction handleTimeout(currentTime) {\r\n  isHostTimeoutScheduled = false;\r\n  advanceTimers(currentTime);\r\n\r\n  if (!isHostCallbackScheduled) {\r\n    if (peek(taskQueue) !== null) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    } else {\r\n      const firstTimer = peek(timerQueue);\r\n      if (firstTimer !== null) {\r\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushWork(hasTimeRemaining, initialTime) {\r\n  if (enableProfiling) {\r\n    markSchedulerUnsuspended(initialTime);\r\n  }\r\n\r\n  // We'll need a host callback the next time work is scheduled.\r\n  isHostCallbackScheduled = false;\r\n  if (isHostTimeoutScheduled) {\r\n    // We scheduled a timeout but it's no longer needed. Cancel it.\r\n    isHostTimeoutScheduled = false;\r\n    cancelHostTimeout();\r\n  }\r\n\r\n  isPerformingWork = true;\r\n  const previousPriorityLevel = currentPriorityLevel;\r\n  try {\r\n    if (enableProfiling) {\r\n      try {\r\n        return workLoop(hasTimeRemaining, initialTime);\r\n      } catch (error) {\r\n        if (currentTask !== null) {\r\n          const currentTime = getCurrentTime();\r\n          markTaskErrored(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        throw error;\r\n      }\r\n    } else {\r\n      // No catch in prod code path.\r\n      return workLoop(hasTimeRemaining, initialTime);\r\n    }\r\n  } finally {\r\n    currentTask = null;\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    isPerformingWork = false;\r\n    if (enableProfiling) {\r\n      const currentTime = getCurrentTime();\r\n      markSchedulerSuspended(currentTime);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop(hasTimeRemaining, initialTime) {\r\n  let currentTime = initialTime;\r\n  advanceTimers(currentTime);\r\n  currentTask = peek(taskQueue);\r\n  while (\r\n    currentTask !== null &&\r\n    !(enableSchedulerDebugging && isSchedulerPaused)\r\n  ) {\r\n    if (\r\n      currentTask.expirationTime > currentTime &&\r\n      (!hasTimeRemaining || shouldYieldToHost())\r\n    ) {\r\n      // This currentTask hasn't expired, and we've reached the deadline.\r\n      break;\r\n    }\r\n    const callback = currentTask.callback;\r\n    if (typeof callback === 'function') {\r\n      currentTask.callback = null;\r\n      currentPriorityLevel = currentTask.priorityLevel;\r\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\r\n      if (enableProfiling) {\r\n        markTaskRun(currentTask, currentTime);\r\n      }\r\n      const continuationCallback = callback(didUserCallbackTimeout);\r\n      currentTime = getCurrentTime();\r\n      if (typeof continuationCallback === 'function') {\r\n        currentTask.callback = continuationCallback;\r\n        if (enableProfiling) {\r\n          markTaskYield(currentTask, currentTime);\r\n        }\r\n      } else {\r\n        if (enableProfiling) {\r\n          markTaskCompleted(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        if (currentTask === peek(taskQueue)) {\r\n          pop(taskQueue);\r\n        }\r\n      }\r\n      advanceTimers(currentTime);\r\n    } else {\r\n      pop(taskQueue);\r\n    }\r\n    currentTask = peek(taskQueue);\r\n  }\r\n  // Return whether there's additional work\r\n  if (currentTask !== null) {\r\n    return true;\r\n  } else {\r\n    const firstTimer = peek(timerQueue);\r\n    if (firstTimer !== null) {\r\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n    case LowPriority:\r\n    case IdlePriority:\r\n      break;\r\n    default:\r\n      priorityLevel = NormalPriority;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_next(eventHandler) {\r\n  var priorityLevel;\r\n  switch (currentPriorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel;\r\n      break;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_wrapCallback(callback) {\r\n  var parentPriorityLevel = currentPriorityLevel;\r\n  return function() {\r\n    // This is a fork of runWithPriority, inlined for performance.\r\n    var previousPriorityLevel = currentPriorityLevel;\r\n    currentPriorityLevel = parentPriorityLevel;\r\n\r\n    try {\r\n      return callback.apply(this, arguments);\r\n    } finally {\r\n      currentPriorityLevel = previousPriorityLevel;\r\n    }\r\n  };\r\n}\r\n\r\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\r\n  var currentTime = getCurrentTime();\r\n\r\n  var startTime;\r\n  if (typeof options === 'object' && options !== null) {\r\n    var delay = options.delay;\r\n    if (typeof delay === 'number' && delay > 0) {\r\n      startTime = currentTime + delay;\r\n    } else {\r\n      startTime = currentTime;\r\n    }\r\n  } else {\r\n    startTime = currentTime;\r\n  }\r\n\r\n  var timeout;\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case UserBlockingPriority:\r\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\r\n      break;\r\n    case IdlePriority:\r\n      timeout = IDLE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case LowPriority:\r\n      timeout = LOW_PRIORITY_TIMEOUT;\r\n      break;\r\n    case NormalPriority:\r\n    default:\r\n      timeout = NORMAL_PRIORITY_TIMEOUT;\r\n      break;\r\n  }\r\n\r\n  var expirationTime = startTime + timeout;\r\n\r\n  var newTask = {\r\n    id: taskIdCounter++,\r\n    callback,\r\n    priorityLevel,\r\n    startTime,\r\n    expirationTime,\r\n    sortIndex: -1,\r\n  };\r\n  if (enableProfiling) {\r\n    newTask.isQueued = false;\r\n  }\r\n\r\n  if (startTime > currentTime) {\r\n    // This is a delayed task.\r\n    newTask.sortIndex = startTime;\r\n    push(timerQueue, newTask);\r\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\r\n      // All tasks are delayed, and this is the task with the earliest delay.\r\n      if (isHostTimeoutScheduled) {\r\n        // Cancel an existing timeout.\r\n        cancelHostTimeout();\r\n      } else {\r\n        isHostTimeoutScheduled = true;\r\n      }\r\n      // Schedule a timeout.\r\n      requestHostTimeout(handleTimeout, startTime - currentTime);\r\n    }\r\n  } else {\r\n    newTask.sortIndex = expirationTime;\r\n    push(taskQueue, newTask);\r\n    if (enableProfiling) {\r\n      markTaskStart(newTask, currentTime);\r\n      newTask.isQueued = true;\r\n    }\r\n    // Schedule a host callback, if needed. If we're already performing work,\r\n    // wait until the next time we yield.\r\n    if (!isHostCallbackScheduled && !isPerformingWork) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    }\r\n  }\r\n\r\n  return newTask;\r\n}\r\n\r\nfunction unstable_pauseExecution() {\r\n  isSchedulerPaused = true;\r\n}\r\n\r\nfunction unstable_continueExecution() {\r\n  isSchedulerPaused = false;\r\n  if (!isHostCallbackScheduled && !isPerformingWork) {\r\n    isHostCallbackScheduled = true;\r\n    requestHostCallback(flushWork);\r\n  }\r\n}\r\n\r\nfunction unstable_getFirstCallbackNode() {\r\n  return peek(taskQueue);\r\n}\r\n\r\nfunction unstable_cancelCallback(task) {\r\n  if (enableProfiling) {\r\n    if (task.isQueued) {\r\n      const currentTime = getCurrentTime();\r\n      markTaskCanceled(task, currentTime);\r\n      task.isQueued = false;\r\n    }\r\n  }\r\n\r\n  // Null out the callback to indicate the task has been canceled. (Can't\r\n  // remove from the queue because you can't remove arbitrary nodes from an\r\n  // array based heap, only the first one.)\r\n  task.callback = null;\r\n}\r\n\r\nfunction unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel;\r\n}\r\n\r\nlet isMessageLoopRunning = false;\r\nlet scheduledHostCallback = null;\r\nlet taskTimeoutID = -1;\r\n\r\n// Scheduler periodically yields in case there is other work on the main\r\n// thread, like user events. By default, it yields multiple times per frame.\r\n// It does not attempt to align with frame boundaries, since most tasks don't\r\n// need to be frame aligned; for those that do, use requestAnimationFrame.\r\nlet frameInterval = frameYieldMs;\r\nconst continuousInputInterval = continuousYieldMs;\r\nconst maxInterval = maxYieldMs;\r\nlet startTime = -1;\r\n\r\nlet needsPaint = false;\r\n\r\nfunction shouldYieldToHost() {\r\n  const timeElapsed = getCurrentTime() - startTime;\r\n  if (timeElapsed < frameInterval) {\r\n    // The main thread has only been blocked for a really short amount of time;\r\n    // smaller than a single frame. Don't yield yet.\r\n    return false;\r\n  }\r\n\r\n  // The main thread has been blocked for a non-negligible amount of time. We\r\n  // may want to yield control of the main thread, so the browser can perform\r\n  // high priority tasks. The main ones are painting and user input. If there's\r\n  // a pending paint or a pending input, then we should yield. But if there's\r\n  // neither, then we can yield less often while remaining responsive. We'll\r\n  // eventually yield regardless, since there could be a pending paint that\r\n  // wasn't accompanied by a call to `requestPaint`, or other main thread tasks\r\n  // like network events.\r\n  if (enableIsInputPending) {\r\n    if (needsPaint) {\r\n      // There's a pending paint (signaled by `requestPaint`). Yield now.\r\n      return true;\r\n    }\r\n    if (timeElapsed < continuousInputInterval) {\r\n      // We haven't blocked the thread for that long. Only yield if there's a\r\n      // pending discrete input (e.g. click). It's OK if there's pending\r\n      // continuous input (e.g. mouseover).\r\n      if (isInputPending !== null) {\r\n        return isInputPending();\r\n      }\r\n    } else if (timeElapsed < maxInterval) {\r\n      // Yield if there's either a pending discrete or continuous input.\r\n      if (isInputPending !== null) {\r\n        return isInputPending(continuousOptions);\r\n      }\r\n    } else {\r\n      // We've blocked the thread for a long time. Even if there's no pending\r\n      // input, there may be some other scheduled work that we don't know about,\r\n      // like a network event. Yield now.\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // `isInputPending` isn't available. Yield now.\r\n  return true;\r\n}\r\n\r\nfunction requestPaint() {\r\n  if (\r\n    enableIsInputPending &&\r\n    navigator !== undefined &&\r\n    navigator.scheduling !== undefined &&\r\n    navigator.scheduling.isInputPending !== undefined\r\n  ) {\r\n    needsPaint = true;\r\n  }\r\n\r\n  // Since we yield every frame regardless, `requestPaint` has no effect.\r\n}\r\n\r\nfunction forceFrameRate(fps) {\r\n  if (fps < 0 || fps > 125) {\r\n    // Using console['error'] to evade Babel and ESLint\r\n    console['error'](\r\n      'forceFrameRate takes a positive int between 0 and 125, ' +\r\n        'forcing frame rates higher than 125 fps is not supported',\r\n    );\r\n    return;\r\n  }\r\n  if (fps > 0) {\r\n    frameInterval = Math.floor(1000 / fps);\r\n  } else {\r\n    // reset the framerate\r\n    frameInterval = frameYieldMs;\r\n  }\r\n}\r\n\r\nconst performWorkUntilDeadline = () => {\r\n  if (scheduledHostCallback !== null) {\r\n    const currentTime = getCurrentTime();\r\n    // Keep track of the start time so we can measure how long the main thread\r\n    // has been blocked.\r\n    startTime = currentTime;\r\n    const hasTimeRemaining = true;\r\n\r\n    // If a scheduler task throws, exit the current browser task so the\r\n    // error can be observed.\r\n    //\r\n    // Intentionally not using a try-catch, since that makes some debugging\r\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\r\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\r\n    let hasMoreWork = true;\r\n    try {\r\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\r\n    } finally {\r\n      if (hasMoreWork) {\r\n        // If there's more work, schedule the next message event at the end\r\n        // of the preceding one.\r\n        schedulePerformWorkUntilDeadline();\r\n      } else {\r\n        isMessageLoopRunning = false;\r\n        scheduledHostCallback = null;\r\n      }\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n  // Yielding to the browser will give it a chance to paint, so we can\r\n  // reset this.\r\n  needsPaint = false;\r\n};\r\n\r\nlet schedulePerformWorkUntilDeadline;\r\nif (typeof localSetImmediate === 'function') {\r\n  // Node.js and old IE.\r\n  // There's a few reasons for why we prefer setImmediate.\r\n  //\r\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\r\n  // (Even though this is a DOM fork of the Scheduler, you could get here\r\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\r\n  // https://github.com/facebook/react/issues/20756\r\n  //\r\n  // But also, it runs earlier which is the semantic we want.\r\n  // If other browsers ever implement it, it's better to use it.\r\n  // Although both of these would be inferior to native scheduling.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetImmediate(performWorkUntilDeadline);\r\n  };\r\n} else if (typeof MessageChannel !== 'undefined') {\r\n  // DOM and Worker environments.\r\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\r\n  const channel = new MessageChannel();\r\n  const port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    port.postMessage(null);\r\n  };\r\n} else {\r\n  // We should only fallback here in non-browser environments.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetTimeout(performWorkUntilDeadline, 0);\r\n  };\r\n}\r\n\r\nfunction requestHostCallback(callback) {\r\n  scheduledHostCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    schedulePerformWorkUntilDeadline();\r\n  }\r\n}\r\n\r\nfunction requestHostTimeout(callback, ms) {\r\n  taskTimeoutID = localSetTimeout(() => {\r\n    callback(getCurrentTime());\r\n  }, ms);\r\n}\r\n\r\nfunction cancelHostTimeout() {\r\n  localClearTimeout(taskTimeoutID);\r\n  taskTimeoutID = -1;\r\n}\r\n\r\nconst unstable_requestPaint = requestPaint;\r\n\r\nexport {\r\n  ImmediatePriority as unstable_ImmediatePriority,\r\n  UserBlockingPriority as unstable_UserBlockingPriority,\r\n  NormalPriority as unstable_NormalPriority,\r\n  IdlePriority as unstable_IdlePriority,\r\n  LowPriority as unstable_LowPriority,\r\n  unstable_runWithPriority,\r\n  unstable_next,\r\n  unstable_scheduleCallback,\r\n  unstable_cancelCallback,\r\n  unstable_wrapCallback,\r\n  unstable_getCurrentPriorityLevel,\r\n  shouldYieldToHost as unstable_shouldYield,\r\n  unstable_requestPaint,\r\n  unstable_continueExecution,\r\n  unstable_pauseExecution,\r\n  unstable_getFirstCallbackNode,\r\n  getCurrentTime as unstable_now,\r\n  forceFrameRate as unstable_forceFrameRate,\r\n};\r\n\r\nexport const unstable_Profiling = enableProfiling\r\n  ? {\r\n      startLoggingProfilingEvents,\r\n      stopLoggingProfilingEvents,\r\n    }\r\n  : null;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport * as Scheduler from 'scheduler';\r\nimport ReactCurrentDispatcher from '../ReactCurrentDispatcher';\r\nimport ReactCurrentActQueue from '../ReactCurrentActQueue';\r\nimport ReactCurrentOwner from '../ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from '../ReactDebugCurrentFrame';\r\nimport ReactCurrentBatchConfig from '../ReactCurrentBatchConfig';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from '../ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentOwner,\r\n  ReactCurrentBatchConfig,\r\n\r\n  // Re-export the schedule API(s) for UMD bundles.\r\n  // This avoids introducing a dependency on a new UMD global in a minor update,\r\n  // Since that would be a breaking change (e.g. for all existing CodeSandboxes).\r\n  // This re-export is only required for UMD bundles;\r\n  // CJS bundles use the shared NPM package.\r\n  Scheduler,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nlet didWarnAboutMessageChannel = false;\r\nlet enqueueTaskImpl = null;\r\n\r\nexport default function enqueueTask(task: () => void) {\r\n  if (enqueueTaskImpl === null) {\r\n    try {\r\n      // read require off the module object to get around the bundlers.\r\n      // we don't want them to detect a require and bundle a Node polyfill.\r\n      const requireString = ('require' + Math.random()).slice(0, 7);\r\n      const nodeRequire = module && module[requireString];\r\n      // assuming we're in node, let's try to get node's\r\n      // version of setImmediate, bypassing fake timers if any.\r\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\r\n    } catch (_err) {\r\n      // we're in a browser\r\n      // we can't use regular timers because they may still be faked\r\n      // so we try MessageChannel+postMessage instead\r\n      enqueueTaskImpl = function(callback: () => void) {\r\n        if (__DEV__) {\r\n          if (didWarnAboutMessageChannel === false) {\r\n            didWarnAboutMessageChannel = true;\r\n            if (typeof MessageChannel === 'undefined') {\r\n              console.error(\r\n                'This browser does not have a MessageChannel implementation, ' +\r\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\r\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\r\n                  'if you encounter this warning.',\r\n              );\r\n            }\r\n          }\r\n        }\r\n        const channel = new MessageChannel();\r\n        channel.port1.onmessage = callback;\r\n        channel.port2.postMessage(undefined);\r\n      };\r\n    }\r\n  }\r\n  return enqueueTaskImpl(task);\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","ContextRegistry","ReactSharedInternals","warn","format","args","printWarning","error","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","Error","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","Array","isArray","a","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","tag","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","arguments","length","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","defineProperties","set","_Provider","_currentRenderer","_currentRenderer2","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","thenable","then","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","REACT_MODULE_REFERENCE","isValidElementType","enableCacheElement","getModuleId","memo","compare","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","realContext","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","reenableLogs","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","checkPropTypes","typeSpecs","values","location","has","bind","typeSpecName","err","ex","message","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","didWarnAboutDeprecatedCreateFactory","createFactoryWithValidation","validatedFactory","cloneElementWithValidation","createServerContext","globalName","wasDefined","hasWarnedAboutUsingConsumer","enableSchedulerDebugging","enableProfiling","frameYieldMs","heap","siftUp","peek","pop","first","last","siftDown","parentIndex","parent","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","getCurrentTime","hasPerformanceNow","performance","now","localPerformance","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","advanceTimers","currentTime","timer","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","isSchedulerPaused","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling","Scheduler","startTransition","scope","prevTransition","currentTransition","_updatedFibers","Set","updatedFibersCount","size","clear","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","requireString","random","slice","nodeRequire","module","_err","actScopeDepth","didWarnNoAwaitAct","act","prevActScopeDepth","prevIsBatchingLegacy","queue","flushActQueue","popActScope","thenableResult","wasAwaited","resolve","reject","returnValue","recursivelyFlushAsyncActWork","Promise","isFlushing","__DEV__","createFactory","Children","forEach","only"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react/umd/react.production.min.js b/node_modules/react/umd/react.production.min.js
new file mode 100644
index 0000000..33125a9
--- /dev/null
+++ b/node_modules/react/umd/react.production.min.js
@@ -0,0 +1,1681 @@
+(function (global, factory) {
+  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
+  typeof define === 'function' && define.amd ? define(['exports'], factory) :
+  (global = global || self, factory(global.React = {}));
+}(this, (function (exports) { 'use strict';
+
+  // TODO: this is special because it gets imported during build.
+  //
+  // TODO: 18.0.0 has not been released to NPM;
+  // It exists as a placeholder so that DevTools can support work tag changes between releases.
+  // When we next publish a release, update the matching TODO in backend/renderer.js
+  // TODO: This module is used both by the release scripts and to expose a version
+  // at runtime. We should instead inject the version number as part of the build
+  // process, and use the ReactVersions.js module as the single source of truth.
+  var ReactVersion = '18.2.0';
+
+  // ATTENTION
+  // When adding new symbols to this file,
+  // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+  // The Symbol used to tag the ReactElement-like types.
+  const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+  const REACT_PORTAL_TYPE = Symbol.for('react.portal');
+  const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+  const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+  const REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+  const REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+  const REACT_CONTEXT_TYPE = Symbol.for('react.context');
+  const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+  const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+  const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+  const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+  const REACT_MEMO_TYPE = Symbol.for('react.memo');
+  const REACT_LAZY_TYPE = Symbol.for('react.lazy');
+  const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+  const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+  const REACT_CACHE_TYPE = Symbol.for('react.cache');
+  const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');
+  const MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+  const FAUX_ITERATOR_SYMBOL = '@@iterator';
+  function getIteratorFn(maybeIterable) {
+    if (maybeIterable === null || typeof maybeIterable !== 'object') {
+      return null;
+    }
+
+    const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+    if (typeof maybeIterator === 'function') {
+      return maybeIterator;
+    }
+
+    return null;
+  }
+
+  /**
+   * This is the abstract API for an update queue.
+   */
+
+
+  const ReactNoopUpdateQueue = {
+    /**
+     * Checks whether or not this composite component is mounted.
+     * @param {ReactClass} publicInstance The instance we want to test.
+     * @return {boolean} True if mounted, false otherwise.
+     * @protected
+     * @final
+     */
+    isMounted: function (publicInstance) {
+      return false;
+    },
+
+    /**
+     * Forces an update. This should only be invoked when it is known with
+     * certainty that we are **not** in a DOM transaction.
+     *
+     * You may want to call this when you know that some deeper aspect of the
+     * component's state has changed but `setState` was not called.
+     *
+     * This will not invoke `shouldComponentUpdate`, but it will invoke
+     * `componentWillUpdate` and `componentDidUpdate`.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueForceUpdate: function (publicInstance, callback, callerName) {
+    },
+
+    /**
+     * Replaces all of the state. Always use this or `setState` to mutate state.
+     * You should treat `this.state` as immutable.
+     *
+     * There is no guarantee that `this.state` will be immediately updated, so
+     * accessing `this.state` after calling this method may return the old value.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} completeState Next state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+    },
+
+    /**
+     * Sets a subset of the state. This only exists because _pendingState is
+     * internal. This provides a merging strategy that is not available to deep
+     * properties which is confusing. TODO: Expose pendingState or don't use it
+     * during the merge.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} partialState Next partial state to be merged with state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} Name of the calling function in the public API.
+     * @internal
+     */
+    enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+    }
+  };
+
+  const assign = Object.assign;
+
+  const emptyObject = {};
+  /**
+   * Base class helpers for the updating state of a component.
+   */
+
+
+  function Component(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+    // renderer.
+
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  Component.prototype.isReactComponent = {};
+  /**
+   * Sets a subset of the state. Always use this to mutate
+   * state. You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * There is no guarantee that calls to `setState` will run synchronously,
+   * as they may eventually be batched together.  You can provide an optional
+   * callback that will be executed when the call to setState is actually
+   * completed.
+   *
+   * When a function is provided to setState, it will be called at some point in
+   * the future (not synchronously). It will be called with the up to date
+   * component arguments (state, props, context). These values can be different
+   * from this.* because your function may be called after receiveProps but before
+   * shouldComponentUpdate, and this new state, props, and context will not yet be
+   * assigned to this.
+   *
+   * @param {object|function} partialState Next partial state or function to
+   *        produce next partial state to be merged with current state.
+   * @param {?function} callback Called after state is updated.
+   * @final
+   * @protected
+   */
+
+  Component.prototype.setState = function (partialState, callback) {
+    if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+      throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+    }
+
+    this.updater.enqueueSetState(this, partialState, callback, 'setState');
+  };
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {?function} callback Called after update is complete.
+   * @final
+   * @protected
+   */
+
+
+  Component.prototype.forceUpdate = function (callback) {
+    this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+  };
+
+  function ComponentDummy() {}
+
+  ComponentDummy.prototype = Component.prototype;
+  /**
+   * Convenience component with default shallow equality check for sCU.
+   */
+
+  function PureComponent(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject;
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  const pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+  pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+  assign(pureComponentPrototype, Component.prototype);
+  pureComponentPrototype.isPureReactComponent = true;
+
+  // an immutable object with a single mutable value
+  function createRef() {
+    const refObject = {
+      current: null
+    };
+
+    return refObject;
+  }
+
+  const isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+  function isArray(a) {
+    return isArrayImpl(a);
+  }
+
+  const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+  /**
+   * Keeps track of the current owner.
+   *
+   * The current owner is the component who should own any components that are
+   * currently being constructed.
+   */
+  const ReactCurrentOwner = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  const RESERVED_PROPS = {
+    key: true,
+    ref: true,
+    __self: true,
+    __source: true
+  };
+
+  function hasValidRef(config) {
+
+    return config.ref !== undefined;
+  }
+
+  function hasValidKey(config) {
+
+    return config.key !== undefined;
+  }
+  /**
+   * Factory method to create a new React element. This no longer adheres to
+   * the class pattern, so do not use new to call it. Also, instanceof check
+   * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+   * if something is a React Element.
+   *
+   * @param {*} type
+   * @param {*} props
+   * @param {*} key
+   * @param {string|object} ref
+   * @param {*} owner
+   * @param {*} self A *temporary* helper to detect places where `this` is
+   * different from the `owner` when React.createElement is called, so that we
+   * can warn. We want to get rid of owner and replace string `ref`s with arrow
+   * functions, and as long as `this` and owner are the same, there will be no
+   * change in behavior.
+   * @param {*} source An annotation object (added by a transpiler or otherwise)
+   * indicating filename, line number, and/or other information.
+   * @internal
+   */
+
+
+  const ReactElement = function (type, key, ref, self, source, owner, props) {
+    const element = {
+      // This tag allows us to uniquely identify this as a React Element
+      $$typeof: REACT_ELEMENT_TYPE,
+      // Built-in properties that belong on the element
+      type: type,
+      key: key,
+      ref: ref,
+      props: props,
+      // Record the component responsible for creating this element.
+      _owner: owner
+    };
+
+    return element;
+  };
+  /**
+   * Create and return a new ReactElement of the given type.
+   * See https://reactjs.org/docs/react-api.html#createelement
+   */
+
+  function createElement(type, config, children) {
+    let propName; // Reserved names are extracted
+
+    const props = {};
+    let key = null;
+    let ref = null;
+    let self = null;
+    let source = null;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        ref = config.ref;
+      }
+
+      if (hasValidKey(config)) {
+
+        key = '' + config.key;
+      }
+
+      self = config.__self === undefined ? null : config.__self;
+      source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          props[propName] = config[propName];
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    const childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      const childArray = Array(childrenLength);
+
+      for (let i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      props.children = childArray;
+    } // Resolve default props
+
+
+    if (type && type.defaultProps) {
+      const defaultProps = type.defaultProps;
+
+      for (propName in defaultProps) {
+        if (props[propName] === undefined) {
+          props[propName] = defaultProps[propName];
+        }
+      }
+    }
+
+    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+  }
+  /**
+   * Return a function that produces ReactElements of a given type.
+   * See https://reactjs.org/docs/react-api.html#createfactory
+   */
+
+  function createFactory(type) {
+    const factory = createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be
+    // easily accessed on elements. E.g. `<Foo />.type === Foo`.
+    // This should not be named `constructor` since this may not be the function
+    // that created the element, and it may not even be a constructor.
+    // Legacy hook: remove it
+
+    factory.type = type;
+    return factory;
+  }
+  function cloneAndReplaceKey(oldElement, newKey) {
+    const newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+    return newElement;
+  }
+  /**
+   * Clone and return a new ReactElement using element as the starting point.
+   * See https://reactjs.org/docs/react-api.html#cloneelement
+   */
+
+  function cloneElement(element, config, children) {
+    if (element === null || element === undefined) {
+      throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+    }
+
+    let propName; // Original props are copied
+
+    const props = assign({}, element.props); // Reserved names are extracted
+
+    let key = element.key;
+    let ref = element.ref; // Self is preserved since the owner is preserved.
+
+    const self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+    // transpiler, and the original source is probably a better indicator of the
+    // true owner.
+
+    const source = element._source; // Owner will be preserved, unless ref is overridden
+
+    let owner = element._owner;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        // Silently steal the ref from the parent.
+        ref = config.ref;
+        owner = ReactCurrentOwner.current;
+      }
+
+      if (hasValidKey(config)) {
+
+        key = '' + config.key;
+      } // Remaining properties override existing props
+
+
+      let defaultProps;
+
+      if (element.type && element.type.defaultProps) {
+        defaultProps = element.type.defaultProps;
+      }
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          if (config[propName] === undefined && defaultProps !== undefined) {
+            // Resolve default props
+            props[propName] = defaultProps[propName];
+          } else {
+            props[propName] = config[propName];
+          }
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    const childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      const childArray = Array(childrenLength);
+
+      for (let i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      props.children = childArray;
+    }
+
+    return ReactElement(element.type, key, ref, self, source, owner, props);
+  }
+  /**
+   * Verifies the object is a ReactElement.
+   * See https://reactjs.org/docs/react-api.html#isvalidelement
+   * @param {?object} object
+   * @return {boolean} True if `object` is a ReactElement.
+   * @final
+   */
+
+  function isValidElement(object) {
+    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+  }
+
+  const SEPARATOR = '.';
+  const SUBSEPARATOR = ':';
+  /**
+   * Escape and wrap key so it is safe to use as a reactid
+   *
+   * @param {string} key to be escaped.
+   * @return {string} the escaped key.
+   */
+
+  function escape(key) {
+    const escapeRegex = /[=:]/g;
+    const escaperLookup = {
+      '=': '=0',
+      ':': '=2'
+    };
+    const escapedString = key.replace(escapeRegex, function (match) {
+      return escaperLookup[match];
+    });
+    return '$' + escapedString;
+  }
+  const userProvidedKeyEscapeRegex = /\/+/g;
+
+  function escapeUserProvidedKey(text) {
+    return text.replace(userProvidedKeyEscapeRegex, '$&/');
+  }
+  /**
+   * Generate a key string that identifies a element within a set.
+   *
+   * @param {*} element A element that could contain a manual key.
+   * @param {number} index Index that is used if a manual key is not provided.
+   * @return {string}
+   */
+
+
+  function getElementKey(element, index) {
+    // Do some typechecking here since we call this blindly. We want to ensure
+    // that we don't block potential future ES APIs.
+    if (typeof element === 'object' && element !== null && element.key != null) {
+
+      return escape('' + element.key);
+    } // Implicit key determined by the index in the set
+
+
+    return index.toString(36);
+  }
+
+  function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+    const type = typeof children;
+
+    if (type === 'undefined' || type === 'boolean') {
+      // All of the above are perceived as null.
+      children = null;
+    }
+
+    let invokeCallback = false;
+
+    if (children === null) {
+      invokeCallback = true;
+    } else {
+      switch (type) {
+        case 'string':
+        case 'number':
+          invokeCallback = true;
+          break;
+
+        case 'object':
+          switch (children.$$typeof) {
+            case REACT_ELEMENT_TYPE:
+            case REACT_PORTAL_TYPE:
+              invokeCallback = true;
+          }
+
+      }
+    }
+
+    if (invokeCallback) {
+      const child = children;
+      let mappedChild = callback(child); // If it's the only child, treat the name as if it was wrapped in an array
+      // so that it's consistent if the number of children grows:
+
+      const childKey = nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;
+
+      if (isArray(mappedChild)) {
+        let escapedChildKey = '';
+
+        if (childKey != null) {
+          escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+        }
+
+        mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);
+      } else if (mappedChild != null) {
+        if (isValidElement(mappedChild)) {
+
+          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+          // traverseAllChildren used to do for objects as children
+          escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+          mappedChild.key && (!child || child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+          // eslint-disable-next-line react-internal/safe-string-coercion
+          escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+        }
+
+        array.push(mappedChild);
+      }
+
+      return 1;
+    }
+
+    let child;
+    let nextName;
+    let subtreeCount = 0; // Count of children found in the current subtree.
+
+    const nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+    if (isArray(children)) {
+      for (let i = 0; i < children.length; i++) {
+        child = children[i];
+        nextName = nextNamePrefix + getElementKey(child, i);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else {
+      const iteratorFn = getIteratorFn(children);
+
+      if (typeof iteratorFn === 'function') {
+        const iterableChildren = children;
+
+        const iterator = iteratorFn.call(iterableChildren);
+        let step;
+        let ii = 0;
+
+        while (!(step = iterator.next()).done) {
+          child = step.value;
+          nextName = nextNamePrefix + getElementKey(child, ii++);
+          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+        }
+      } else if (type === 'object') {
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        const childrenString = String(children);
+        throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+      }
+    }
+
+    return subtreeCount;
+  }
+
+  /**
+   * Maps children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+   *
+   * The provided mapFunction(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} func The map function.
+   * @param {*} context Context for mapFunction.
+   * @return {object} Object containing the ordered map of results.
+   */
+  function mapChildren(children, func, context) {
+    if (children == null) {
+      return children;
+    }
+
+    const result = [];
+    let count = 0;
+    mapIntoArray(children, result, '', '', function (child) {
+      return func.call(context, child, count++);
+    });
+    return result;
+  }
+  /**
+   * Count the number of children that are typically specified as
+   * `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrencount
+   *
+   * @param {?*} children Children tree container.
+   * @return {number} The number of children.
+   */
+
+
+  function countChildren(children) {
+    let n = 0;
+    mapChildren(children, () => {
+      n++; // Don't return anything
+    });
+    return n;
+  }
+
+  /**
+   * Iterates through children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+   *
+   * The provided forEachFunc(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} forEachFunc
+   * @param {*} forEachContext Context for forEachContext.
+   */
+  function forEachChildren(children, forEachFunc, forEachContext) {
+    mapChildren(children, function () {
+      forEachFunc.apply(this, arguments); // Don't return anything.
+    }, forEachContext);
+  }
+  /**
+   * Flatten a children object (typically specified as `props.children`) and
+   * return an array with appropriately re-keyed children.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+   */
+
+
+  function toArray(children) {
+    return mapChildren(children, child => child) || [];
+  }
+  /**
+   * Returns the first child in a collection of children and verifies that there
+   * is only one child in the collection.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+   *
+   * The current implementation of this function assumes that a single child gets
+   * passed without a wrapper, but the purpose of this helper function is to
+   * abstract away the particular structure of children.
+   *
+   * @param {?object} children Child collection structure.
+   * @return {ReactElement} The first and only `ReactElement` contained in the
+   * structure.
+   */
+
+
+  function onlyChild(children) {
+    if (!isValidElement(children)) {
+      throw new Error('React.Children.only expected to receive a single React element child.');
+    }
+
+    return children;
+  }
+
+  function createContext(defaultValue) {
+    // TODO: Second argument used to be an optional `calculateChangedBits`
+    // function. Warn to reserve for future use?
+    const context = {
+      $$typeof: REACT_CONTEXT_TYPE,
+      // As a workaround to support multiple concurrent renderers, we categorize
+      // some renderers as primary and others as secondary. We only expect
+      // there to be two concurrent renderers at most: React Native (primary) and
+      // Fabric (secondary); React DOM (primary) and React ART (secondary).
+      // Secondary renderers store their context values on separate fields.
+      _currentValue: defaultValue,
+      _currentValue2: defaultValue,
+      // Used to track how many concurrent renderers this context currently
+      // supports within in a single renderer. Such as parallel server rendering.
+      _threadCount: 0,
+      // These are circular
+      Provider: null,
+      Consumer: null,
+      // Add these to use same hidden class in VM as ServerContext
+      _defaultValue: null,
+      _globalName: null
+    };
+    context.Provider = {
+      $$typeof: REACT_PROVIDER_TYPE,
+      _context: context
+    };
+
+    {
+      context.Consumer = context;
+    }
+
+    return context;
+  }
+
+  const Uninitialized = -1;
+  const Pending = 0;
+  const Resolved = 1;
+  const Rejected = 2;
+
+  function lazyInitializer(payload) {
+    if (payload._status === Uninitialized) {
+      const ctor = payload._result;
+      const thenable = ctor(); // Transition to the next state.
+      // This might throw either because it's missing or throws. If so, we treat it
+      // as still uninitialized and try again next time. Which is the same as what
+      // happens if the ctor or any wrappers processing the ctor throws. This might
+      // end up fixing it if the resolution was a concurrency bug.
+
+      thenable.then(moduleObject => {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          const resolved = payload;
+          resolved._status = Resolved;
+          resolved._result = moduleObject;
+        }
+      }, error => {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          const rejected = payload;
+          rejected._status = Rejected;
+          rejected._result = error;
+        }
+      });
+
+      if (payload._status === Uninitialized) {
+        // In case, we're still uninitialized, then we're waiting for the thenable
+        // to resolve. Set it as pending in the meantime.
+        const pending = payload;
+        pending._status = Pending;
+        pending._result = thenable;
+      }
+    }
+
+    if (payload._status === Resolved) {
+      const moduleObject = payload._result;
+
+      return moduleObject.default;
+    } else {
+      throw payload._result;
+    }
+  }
+
+  function lazy(ctor) {
+    const payload = {
+      // We use these fields to store the result.
+      _status: Uninitialized,
+      _result: ctor
+    };
+    const lazyType = {
+      $$typeof: REACT_LAZY_TYPE,
+      _payload: payload,
+      _init: lazyInitializer
+    };
+
+    return lazyType;
+  }
+
+  function forwardRef(render) {
+
+    const elementType = {
+      $$typeof: REACT_FORWARD_REF_TYPE,
+      render
+    };
+
+    return elementType;
+  }
+
+  function memo(type, compare) {
+
+    const elementType = {
+      $$typeof: REACT_MEMO_TYPE,
+      type,
+      compare: compare === undefined ? null : compare
+    };
+
+    return elementType;
+  }
+
+  /**
+   * Keeps track of the current dispatcher.
+   */
+  const ReactCurrentDispatcher = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  function resolveDispatcher() {
+    const dispatcher = ReactCurrentDispatcher.current;
+    // intentionally don't throw our own error because this is in a hot path.
+    // Also helps ensure this is inlined.
+
+
+    return dispatcher;
+  }
+
+  function getCacheSignal() {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheSignal();
+  }
+  function getCacheForType(resourceType) {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheForType(resourceType);
+  }
+  function useContext(Context) {
+    const dispatcher = resolveDispatcher();
+
+    return dispatcher.useContext(Context);
+  }
+  function useState(initialState) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useState(initialState);
+  }
+  function useReducer(reducer, initialArg, init) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useReducer(reducer, initialArg, init);
+  }
+  function useRef(initialValue) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useRef(initialValue);
+  }
+  function useEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useEffect(create, deps);
+  }
+  function useInsertionEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useInsertionEffect(create, deps);
+  }
+  function useLayoutEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useLayoutEffect(create, deps);
+  }
+  function useCallback(callback, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useCallback(callback, deps);
+  }
+  function useMemo(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useMemo(create, deps);
+  }
+  function useImperativeHandle(ref, create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useImperativeHandle(ref, create, deps);
+  }
+  function useDebugValue(value, formatterFn) {
+  }
+  function useTransition() {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useTransition();
+  }
+  function useDeferredValue(value) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useDeferredValue(value);
+  }
+  function useId() {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useId();
+  }
+  function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
+  }
+  function useCacheRefresh() {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.useCacheRefresh();
+  }
+
+  /**
+   * Keeps track of the current batch's configuration such as how long an update
+   * should suspend for if it needs to.
+   */
+  const ReactCurrentBatchConfig = {
+    transition: null
+  };
+
+  const ContextRegistry = {};
+
+  const ReactSharedInternals = {
+    ReactCurrentDispatcher,
+    ReactCurrentBatchConfig,
+    ReactCurrentOwner
+  };
+
+  {
+    ReactSharedInternals.ContextRegistry = ContextRegistry;
+  }
+
+  const ContextRegistry$1 = ReactSharedInternals.ContextRegistry;
+  function createServerContext(globalName, defaultValue) {
+
+    let wasDefined = true;
+
+    if (!ContextRegistry$1[globalName]) {
+      wasDefined = false;
+      const context = {
+        $$typeof: REACT_SERVER_CONTEXT_TYPE,
+        // As a workaround to support multiple concurrent renderers, we categorize
+        // some renderers as primary and others as secondary. We only expect
+        // there to be two concurrent renderers at most: React Native (primary) and
+        // Fabric (secondary); React DOM (primary) and React ART (secondary).
+        // Secondary renderers store their context values on separate fields.
+        _currentValue: defaultValue,
+        _currentValue2: defaultValue,
+        _defaultValue: defaultValue,
+        // Used to track how many concurrent renderers this context currently
+        // supports within in a single renderer. Such as parallel server rendering.
+        _threadCount: 0,
+        // These are circular
+        Provider: null,
+        Consumer: null,
+        _globalName: globalName
+      };
+      context.Provider = {
+        $$typeof: REACT_PROVIDER_TYPE,
+        _context: context
+      };
+
+      ContextRegistry$1[globalName] = context;
+    }
+
+    const context = ContextRegistry$1[globalName];
+
+    if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._defaultValue = defaultValue;
+
+      if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue = defaultValue;
+      }
+
+      if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue2 = defaultValue;
+      }
+    } else if (wasDefined) {
+      throw new Error("ServerContext: " + globalName + " already defined");
+    }
+
+    return context;
+  }
+
+  const enableSchedulerDebugging = false;
+  const enableProfiling = false;
+  const frameYieldMs = 5;
+
+  function push(heap, node) {
+    const index = heap.length;
+    heap.push(node);
+    siftUp(heap, node, index);
+  }
+  function peek(heap) {
+    return heap.length === 0 ? null : heap[0];
+  }
+  function pop(heap) {
+    if (heap.length === 0) {
+      return null;
+    }
+
+    const first = heap[0];
+    const last = heap.pop();
+
+    if (last !== first) {
+      heap[0] = last;
+      siftDown(heap, last, 0);
+    }
+
+    return first;
+  }
+
+  function siftUp(heap, node, i) {
+    let index = i;
+
+    while (index > 0) {
+      const parentIndex = index - 1 >>> 1;
+      const parent = heap[parentIndex];
+
+      if (compare(parent, node) > 0) {
+        // The parent is larger. Swap positions.
+        heap[parentIndex] = node;
+        heap[index] = parent;
+        index = parentIndex;
+      } else {
+        // The parent is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function siftDown(heap, node, i) {
+    let index = i;
+    const length = heap.length;
+    const halfLength = length >>> 1;
+
+    while (index < halfLength) {
+      const leftIndex = (index + 1) * 2 - 1;
+      const left = heap[leftIndex];
+      const rightIndex = leftIndex + 1;
+      const right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
+
+      if (compare(left, node) < 0) {
+        if (rightIndex < length && compare(right, left) < 0) {
+          heap[index] = right;
+          heap[rightIndex] = node;
+          index = rightIndex;
+        } else {
+          heap[index] = left;
+          heap[leftIndex] = node;
+          index = leftIndex;
+        }
+      } else if (rightIndex < length && compare(right, node) < 0) {
+        heap[index] = right;
+        heap[rightIndex] = node;
+        index = rightIndex;
+      } else {
+        // Neither child is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function compare(a, b) {
+    // Compare sort index first, then task id.
+    const diff = a.sortIndex - b.sortIndex;
+    return diff !== 0 ? diff : a.id - b.id;
+  }
+
+  // TODO: Use symbols?
+  const ImmediatePriority = 1;
+  const UserBlockingPriority = 2;
+  const NormalPriority = 3;
+  const LowPriority = 4;
+  const IdlePriority = 5;
+
+  function markTaskErrored(task, ms) {
+  }
+
+  /* eslint-disable no-var */
+  let getCurrentTime;
+  const hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
+
+  if (hasPerformanceNow) {
+    const localPerformance = performance;
+
+    getCurrentTime = () => localPerformance.now();
+  } else {
+    const localDate = Date;
+    const initialTime = localDate.now();
+
+    getCurrentTime = () => localDate.now() - initialTime;
+  } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
+  // Math.pow(2, 30) - 1
+  // 0b111111111111111111111111111111
+
+
+  var maxSigned31BitInt = 1073741823; // Times out immediately
+
+  var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
+
+  var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
+  var NORMAL_PRIORITY_TIMEOUT = 5000;
+  var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
+
+  var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
+
+  var taskQueue = [];
+  var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
+
+  var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
+  var currentTask = null;
+  var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
+
+  var isPerformingWork = false;
+  var isHostCallbackScheduled = false;
+  var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
+
+  const localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
+  const localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
+  const localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
+
+  const isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
+
+  function advanceTimers(currentTime) {
+    // Check for tasks that are no longer delayed and add them to the queue.
+    let timer = peek(timerQueue);
+
+    while (timer !== null) {
+      if (timer.callback === null) {
+        // Timer was cancelled.
+        pop(timerQueue);
+      } else if (timer.startTime <= currentTime) {
+        // Timer fired. Transfer to the task queue.
+        pop(timerQueue);
+        timer.sortIndex = timer.expirationTime;
+        push(taskQueue, timer);
+      } else {
+        // Remaining timers are pending.
+        return;
+      }
+
+      timer = peek(timerQueue);
+    }
+  }
+
+  function handleTimeout(currentTime) {
+    isHostTimeoutScheduled = false;
+    advanceTimers(currentTime);
+
+    if (!isHostCallbackScheduled) {
+      if (peek(taskQueue) !== null) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      } else {
+        const firstTimer = peek(timerQueue);
+
+        if (firstTimer !== null) {
+          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+        }
+      }
+    }
+  }
+
+  function flushWork(hasTimeRemaining, initialTime) {
+
+
+    isHostCallbackScheduled = false;
+
+    if (isHostTimeoutScheduled) {
+      // We scheduled a timeout but it's no longer needed. Cancel it.
+      isHostTimeoutScheduled = false;
+      cancelHostTimeout();
+    }
+
+    isPerformingWork = true;
+    const previousPriorityLevel = currentPriorityLevel;
+
+    try {
+      if (enableProfiling) {
+        try {
+          return workLoop(hasTimeRemaining, initialTime);
+        } catch (error) {
+          if (currentTask !== null) {
+            const currentTime = getCurrentTime();
+            markTaskErrored(currentTask, currentTime);
+            currentTask.isQueued = false;
+          }
+
+          throw error;
+        }
+      } else {
+        // No catch in prod code path.
+        return workLoop(hasTimeRemaining, initialTime);
+      }
+    } finally {
+      currentTask = null;
+      currentPriorityLevel = previousPriorityLevel;
+      isPerformingWork = false;
+    }
+  }
+
+  function workLoop(hasTimeRemaining, initialTime) {
+    let currentTime = initialTime;
+    advanceTimers(currentTime);
+    currentTask = peek(taskQueue);
+
+    while (currentTask !== null && !(enableSchedulerDebugging )) {
+      if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
+        // This currentTask hasn't expired, and we've reached the deadline.
+        break;
+      }
+
+      const callback = currentTask.callback;
+
+      if (typeof callback === 'function') {
+        currentTask.callback = null;
+        currentPriorityLevel = currentTask.priorityLevel;
+        const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
+
+        const continuationCallback = callback(didUserCallbackTimeout);
+        currentTime = getCurrentTime();
+
+        if (typeof continuationCallback === 'function') {
+          currentTask.callback = continuationCallback;
+        } else {
+
+          if (currentTask === peek(taskQueue)) {
+            pop(taskQueue);
+          }
+        }
+
+        advanceTimers(currentTime);
+      } else {
+        pop(taskQueue);
+      }
+
+      currentTask = peek(taskQueue);
+    } // Return whether there's additional work
+
+
+    if (currentTask !== null) {
+      return true;
+    } else {
+      const firstTimer = peek(timerQueue);
+
+      if (firstTimer !== null) {
+        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+      }
+
+      return false;
+    }
+  }
+
+  function unstable_runWithPriority(priorityLevel, eventHandler) {
+    switch (priorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+      case LowPriority:
+      case IdlePriority:
+        break;
+
+      default:
+        priorityLevel = NormalPriority;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_next(eventHandler) {
+    var priorityLevel;
+
+    switch (currentPriorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+        // Shift down to normal priority
+        priorityLevel = NormalPriority;
+        break;
+
+      default:
+        // Anything lower than normal priority should remain at the current level.
+        priorityLevel = currentPriorityLevel;
+        break;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_wrapCallback(callback) {
+    var parentPriorityLevel = currentPriorityLevel;
+    return function () {
+      // This is a fork of runWithPriority, inlined for performance.
+      var previousPriorityLevel = currentPriorityLevel;
+      currentPriorityLevel = parentPriorityLevel;
+
+      try {
+        return callback.apply(this, arguments);
+      } finally {
+        currentPriorityLevel = previousPriorityLevel;
+      }
+    };
+  }
+
+  function unstable_scheduleCallback(priorityLevel, callback, options) {
+    var currentTime = getCurrentTime();
+    var startTime;
+
+    if (typeof options === 'object' && options !== null) {
+      var delay = options.delay;
+
+      if (typeof delay === 'number' && delay > 0) {
+        startTime = currentTime + delay;
+      } else {
+        startTime = currentTime;
+      }
+    } else {
+      startTime = currentTime;
+    }
+
+    var timeout;
+
+    switch (priorityLevel) {
+      case ImmediatePriority:
+        timeout = IMMEDIATE_PRIORITY_TIMEOUT;
+        break;
+
+      case UserBlockingPriority:
+        timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
+        break;
+
+      case IdlePriority:
+        timeout = IDLE_PRIORITY_TIMEOUT;
+        break;
+
+      case LowPriority:
+        timeout = LOW_PRIORITY_TIMEOUT;
+        break;
+
+      case NormalPriority:
+      default:
+        timeout = NORMAL_PRIORITY_TIMEOUT;
+        break;
+    }
+
+    var expirationTime = startTime + timeout;
+    var newTask = {
+      id: taskIdCounter++,
+      callback,
+      priorityLevel,
+      startTime,
+      expirationTime,
+      sortIndex: -1
+    };
+
+    if (startTime > currentTime) {
+      // This is a delayed task.
+      newTask.sortIndex = startTime;
+      push(timerQueue, newTask);
+
+      if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
+        // All tasks are delayed, and this is the task with the earliest delay.
+        if (isHostTimeoutScheduled) {
+          // Cancel an existing timeout.
+          cancelHostTimeout();
+        } else {
+          isHostTimeoutScheduled = true;
+        } // Schedule a timeout.
+
+
+        requestHostTimeout(handleTimeout, startTime - currentTime);
+      }
+    } else {
+      newTask.sortIndex = expirationTime;
+      push(taskQueue, newTask);
+      // wait until the next time we yield.
+
+
+      if (!isHostCallbackScheduled && !isPerformingWork) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      }
+    }
+
+    return newTask;
+  }
+
+  function unstable_pauseExecution() {
+  }
+
+  function unstable_continueExecution() {
+
+    if (!isHostCallbackScheduled && !isPerformingWork) {
+      isHostCallbackScheduled = true;
+      requestHostCallback(flushWork);
+    }
+  }
+
+  function unstable_getFirstCallbackNode() {
+    return peek(taskQueue);
+  }
+
+  function unstable_cancelCallback(task) {
+    // remove from the queue because you can't remove arbitrary nodes from an
+    // array based heap, only the first one.)
+
+
+    task.callback = null;
+  }
+
+  function unstable_getCurrentPriorityLevel() {
+    return currentPriorityLevel;
+  }
+
+  let isMessageLoopRunning = false;
+  let scheduledHostCallback = null;
+  let taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
+  // thread, like user events. By default, it yields multiple times per frame.
+  // It does not attempt to align with frame boundaries, since most tasks don't
+  // need to be frame aligned; for those that do, use requestAnimationFrame.
+
+  let frameInterval = frameYieldMs;
+  let startTime = -1;
+
+  function shouldYieldToHost() {
+    const timeElapsed = getCurrentTime() - startTime;
+
+    if (timeElapsed < frameInterval) {
+      // The main thread has only been blocked for a really short amount of time;
+      // smaller than a single frame. Don't yield yet.
+      return false;
+    } // The main thread has been blocked for a non-negligible amount of time. We
+
+
+    return true;
+  }
+
+  function requestPaint() {
+
+  }
+
+  function forceFrameRate(fps) {
+    if (fps < 0 || fps > 125) {
+      // Using console['error'] to evade Babel and ESLint
+      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
+      return;
+    }
+
+    if (fps > 0) {
+      frameInterval = Math.floor(1000 / fps);
+    } else {
+      // reset the framerate
+      frameInterval = frameYieldMs;
+    }
+  }
+
+  const performWorkUntilDeadline = () => {
+    if (scheduledHostCallback !== null) {
+      const currentTime = getCurrentTime(); // Keep track of the start time so we can measure how long the main thread
+      // has been blocked.
+
+      startTime = currentTime;
+      const hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
+      // error can be observed.
+      //
+      // Intentionally not using a try-catch, since that makes some debugging
+      // techniques harder. Instead, if `scheduledHostCallback` errors, then
+      // `hasMoreWork` will remain true, and we'll continue the work loop.
+
+      let hasMoreWork = true;
+
+      try {
+        hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
+      } finally {
+        if (hasMoreWork) {
+          // If there's more work, schedule the next message event at the end
+          // of the preceding one.
+          schedulePerformWorkUntilDeadline();
+        } else {
+          isMessageLoopRunning = false;
+          scheduledHostCallback = null;
+        }
+      }
+    } else {
+      isMessageLoopRunning = false;
+    } // Yielding to the browser will give it a chance to paint, so we can
+  };
+
+  let schedulePerformWorkUntilDeadline;
+
+  if (typeof localSetImmediate === 'function') {
+    // Node.js and old IE.
+    // There's a few reasons for why we prefer setImmediate.
+    //
+    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
+    // (Even though this is a DOM fork of the Scheduler, you could get here
+    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
+    // https://github.com/facebook/react/issues/20756
+    //
+    // But also, it runs earlier which is the semantic we want.
+    // If other browsers ever implement it, it's better to use it.
+    // Although both of these would be inferior to native scheduling.
+    schedulePerformWorkUntilDeadline = () => {
+      localSetImmediate(performWorkUntilDeadline);
+    };
+  } else if (typeof MessageChannel !== 'undefined') {
+    // DOM and Worker environments.
+    // We prefer MessageChannel because of the 4ms setTimeout clamping.
+    const channel = new MessageChannel();
+    const port = channel.port2;
+    channel.port1.onmessage = performWorkUntilDeadline;
+
+    schedulePerformWorkUntilDeadline = () => {
+      port.postMessage(null);
+    };
+  } else {
+    // We should only fallback here in non-browser environments.
+    schedulePerformWorkUntilDeadline = () => {
+      localSetTimeout(performWorkUntilDeadline, 0);
+    };
+  }
+
+  function requestHostCallback(callback) {
+    scheduledHostCallback = callback;
+
+    if (!isMessageLoopRunning) {
+      isMessageLoopRunning = true;
+      schedulePerformWorkUntilDeadline();
+    }
+  }
+
+  function requestHostTimeout(callback, ms) {
+    taskTimeoutID = localSetTimeout(() => {
+      callback(getCurrentTime());
+    }, ms);
+  }
+
+  function cancelHostTimeout() {
+    localClearTimeout(taskTimeoutID);
+    taskTimeoutID = -1;
+  }
+
+  const unstable_requestPaint = requestPaint;
+  const unstable_Profiling =  null;
+
+
+
+  var Scheduler = {
+    __proto__: null,
+    unstable_ImmediatePriority: ImmediatePriority,
+    unstable_UserBlockingPriority: UserBlockingPriority,
+    unstable_NormalPriority: NormalPriority,
+    unstable_IdlePriority: IdlePriority,
+    unstable_LowPriority: LowPriority,
+    unstable_runWithPriority: unstable_runWithPriority,
+    unstable_next: unstable_next,
+    unstable_scheduleCallback: unstable_scheduleCallback,
+    unstable_cancelCallback: unstable_cancelCallback,
+    unstable_wrapCallback: unstable_wrapCallback,
+    unstable_getCurrentPriorityLevel: unstable_getCurrentPriorityLevel,
+    unstable_shouldYield: shouldYieldToHost,
+    unstable_requestPaint: unstable_requestPaint,
+    unstable_continueExecution: unstable_continueExecution,
+    unstable_pauseExecution: unstable_pauseExecution,
+    unstable_getFirstCallbackNode: unstable_getFirstCallbackNode,
+    get unstable_now () { return getCurrentTime; },
+    unstable_forceFrameRate: forceFrameRate,
+    unstable_Profiling: unstable_Profiling
+  };
+
+  const ReactSharedInternals$1 = {
+    ReactCurrentDispatcher,
+    ReactCurrentOwner,
+    ReactCurrentBatchConfig,
+    // Re-export the schedule API(s) for UMD bundles.
+    // This avoids introducing a dependency on a new UMD global in a minor update,
+    // Since that would be a breaking change (e.g. for all existing CodeSandboxes).
+    // This re-export is only required for UMD bundles;
+    // CJS bundles use the shared NPM package.
+    Scheduler
+  };
+
+  {
+    ReactSharedInternals$1.ContextRegistry = ContextRegistry;
+  }
+
+  function startTransition(scope, options) {
+    const prevTransition = ReactCurrentBatchConfig.transition;
+    ReactCurrentBatchConfig.transition = {};
+
+    try {
+      scope();
+    } finally {
+      ReactCurrentBatchConfig.transition = prevTransition;
+    }
+  }
+
+  function act(callback) {
+    {
+      throw new Error('act(...) is not supported in production builds of React.');
+    }
+  }
+
+  const createElement$1 =  createElement;
+  const cloneElement$1 =  cloneElement;
+  const createFactory$1 =  createFactory;
+  const Children = {
+    map: mapChildren,
+    forEach: forEachChildren,
+    count: countChildren,
+    toArray,
+    only: onlyChild
+  };
+
+  exports.Children = Children;
+  exports.Component = Component;
+  exports.Fragment = REACT_FRAGMENT_TYPE;
+  exports.Profiler = REACT_PROFILER_TYPE;
+  exports.PureComponent = PureComponent;
+  exports.StrictMode = REACT_STRICT_MODE_TYPE;
+  exports.Suspense = REACT_SUSPENSE_TYPE;
+  exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+  exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals$1;
+  exports.cloneElement = cloneElement$1;
+  exports.createContext = createContext;
+  exports.createElement = createElement$1;
+  exports.createFactory = createFactory$1;
+  exports.createRef = createRef;
+  exports.createServerContext = createServerContext;
+  exports.forwardRef = forwardRef;
+  exports.isValidElement = isValidElement;
+  exports.lazy = lazy;
+  exports.memo = memo;
+  exports.startTransition = startTransition;
+  exports.unstable_Cache = REACT_CACHE_TYPE;
+  exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+  exports.unstable_Offscreen = REACT_OFFSCREEN_TYPE;
+  exports.unstable_act = act;
+  exports.unstable_getCacheForType = getCacheForType;
+  exports.unstable_getCacheSignal = getCacheSignal;
+  exports.unstable_useCacheRefresh = useCacheRefresh;
+  exports.useCallback = useCallback;
+  exports.useContext = useContext;
+  exports.useDebugValue = useDebugValue;
+  exports.useDeferredValue = useDeferredValue;
+  exports.useEffect = useEffect;
+  exports.useId = useId;
+  exports.useImperativeHandle = useImperativeHandle;
+  exports.useInsertionEffect = useInsertionEffect;
+  exports.useLayoutEffect = useLayoutEffect;
+  exports.useMemo = useMemo;
+  exports.useReducer = useReducer;
+  exports.useRef = useRef;
+  exports.useState = useState;
+  exports.useSyncExternalStore = useSyncExternalStore;
+  exports.useTransition = useTransition;
+  exports.version = ReactVersion;
+
+})));
+//# sourceMappingURL=react.production.min.js.map
diff --git a/node_modules/react/umd/react.production.min.js.map b/node_modules/react/umd/react.production.min.js.map
new file mode 100644
index 0000000..1f79ef8
--- /dev/null
+++ b/node_modules/react/umd/react.production.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.production.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContext.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerMinHeap.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerPriorities.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerProfiling.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/forks/Scheduler.js","D:/code-projects/debugger-learning/react/packages/react/src/forks/ReactSharedInternals.umd.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactAct.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nexport const enableSchedulerDebugging = false;\r\nexport const enableIsInputPending = false;\r\nexport const enableProfiling = false;\r\nexport const enableIsInputPendingContinuous = false;\r\nexport const frameYieldMs = 5;\r\nexport const continuousYieldMs = 50;\r\nexport const maxYieldMs = 300;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\ntype Heap = Array<Node>;\r\ntype Node = {|\r\n  id: number,\r\n  sortIndex: number,\r\n|};\r\n\r\nexport function push(heap: Heap, node: Node): void {\r\n  const index = heap.length;\r\n  heap.push(node);\r\n  siftUp(heap, node, index);\r\n}\r\n\r\nexport function peek(heap: Heap): Node | null {\r\n  return heap.length === 0 ? null : heap[0];\r\n}\r\n\r\nexport function pop(heap: Heap): Node | null {\r\n  if (heap.length === 0) {\r\n    return null;\r\n  }\r\n  const first = heap[0];\r\n  const last = heap.pop();\r\n  if (last !== first) {\r\n    heap[0] = last;\r\n    siftDown(heap, last, 0);\r\n  }\r\n  return first;\r\n}\r\n\r\nfunction siftUp(heap, node, i) {\r\n  let index = i;\r\n  while (index > 0) {\r\n    const parentIndex = (index - 1) >>> 1;\r\n    const parent = heap[parentIndex];\r\n    if (compare(parent, node) > 0) {\r\n      // The parent is larger. Swap positions.\r\n      heap[parentIndex] = node;\r\n      heap[index] = parent;\r\n      index = parentIndex;\r\n    } else {\r\n      // The parent is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction siftDown(heap, node, i) {\r\n  let index = i;\r\n  const length = heap.length;\r\n  const halfLength = length >>> 1;\r\n  while (index < halfLength) {\r\n    const leftIndex = (index + 1) * 2 - 1;\r\n    const left = heap[leftIndex];\r\n    const rightIndex = leftIndex + 1;\r\n    const right = heap[rightIndex];\r\n\r\n    // If the left or right node is smaller, swap with the smaller of those.\r\n    if (compare(left, node) < 0) {\r\n      if (rightIndex < length && compare(right, left) < 0) {\r\n        heap[index] = right;\r\n        heap[rightIndex] = node;\r\n        index = rightIndex;\r\n      } else {\r\n        heap[index] = left;\r\n        heap[leftIndex] = node;\r\n        index = leftIndex;\r\n      }\r\n    } else if (rightIndex < length && compare(right, node) < 0) {\r\n      heap[index] = right;\r\n      heap[rightIndex] = node;\r\n      index = rightIndex;\r\n    } else {\r\n      // Neither child is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction compare(a, b) {\r\n  // Compare sort index first, then task id.\r\n  const diff = a.sortIndex - b.sortIndex;\r\n  return diff !== 0 ? diff : a.id - b.id;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n// TODO: Use symbols?\r\nexport const NoPriority = 0;\r\nexport const ImmediatePriority = 1;\r\nexport const UserBlockingPriority = 2;\r\nexport const NormalPriority = 3;\r\nexport const LowPriority = 4;\r\nexport const IdlePriority = 5;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {PriorityLevel} from './SchedulerPriorities';\r\nimport {enableProfiling} from './SchedulerFeatureFlags';\r\n\r\nlet runIdCounter: number = 0;\r\nlet mainThreadIdCounter: number = 0;\r\n\r\n// Bytes per element is 4\r\nconst INITIAL_EVENT_LOG_SIZE = 131072;\r\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\r\n\r\nlet eventLogSize = 0;\r\nlet eventLogBuffer = null;\r\nlet eventLog = null;\r\nlet eventLogIndex = 0;\r\n\r\nconst TaskStartEvent = 1;\r\nconst TaskCompleteEvent = 2;\r\nconst TaskErrorEvent = 3;\r\nconst TaskCancelEvent = 4;\r\nconst TaskRunEvent = 5;\r\nconst TaskYieldEvent = 6;\r\nconst SchedulerSuspendEvent = 7;\r\nconst SchedulerResumeEvent = 8;\r\n\r\nfunction logEvent(entries) {\r\n  if (eventLog !== null) {\r\n    const offset = eventLogIndex;\r\n    eventLogIndex += entries.length;\r\n    if (eventLogIndex + 1 > eventLogSize) {\r\n      eventLogSize *= 2;\r\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\r\n        // Using console['error'] to evade Babel and ESLint\r\n        console['error'](\r\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\r\n            'forget to call `stopLoggingProfilingEvents()`.',\r\n        );\r\n        stopLoggingProfilingEvents();\r\n        return;\r\n      }\r\n      const newEventLog = new Int32Array(eventLogSize * 4);\r\n      newEventLog.set(eventLog);\r\n      eventLogBuffer = newEventLog.buffer;\r\n      eventLog = newEventLog;\r\n    }\r\n    eventLog.set(entries, offset);\r\n  }\r\n}\r\n\r\nexport function startLoggingProfilingEvents(): void {\r\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\r\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\r\n  eventLog = new Int32Array(eventLogBuffer);\r\n  eventLogIndex = 0;\r\n}\r\n\r\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\r\n  const buffer = eventLogBuffer;\r\n  eventLogSize = 0;\r\n  eventLogBuffer = null;\r\n  eventLog = null;\r\n  eventLogIndex = 0;\r\n  return buffer;\r\n}\r\n\r\nexport function markTaskStart(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      // performance.now returns a float, representing milliseconds. When the\r\n      // event is logged, it's coerced to an int. Convert to microseconds to\r\n      // maintain extra degrees of precision.\r\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCompleted(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCanceled(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskErrored(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskRun(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    runIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerSuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    mainThreadIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerUnsuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/* eslint-disable no-var */\r\n\r\nimport {\r\n  enableSchedulerDebugging,\r\n  enableProfiling,\r\n  enableIsInputPending,\r\n  enableIsInputPendingContinuous,\r\n  frameYieldMs,\r\n  continuousYieldMs,\r\n  maxYieldMs,\r\n} from '../SchedulerFeatureFlags';\r\n\r\nimport {push, pop, peek} from '../SchedulerMinHeap';\r\n\r\n// TODO: Use symbols?\r\nimport {\r\n  ImmediatePriority,\r\n  UserBlockingPriority,\r\n  NormalPriority,\r\n  LowPriority,\r\n  IdlePriority,\r\n} from '../SchedulerPriorities';\r\nimport {\r\n  markTaskRun,\r\n  markTaskYield,\r\n  markTaskCompleted,\r\n  markTaskCanceled,\r\n  markTaskErrored,\r\n  markSchedulerSuspended,\r\n  markSchedulerUnsuspended,\r\n  markTaskStart,\r\n  stopLoggingProfilingEvents,\r\n  startLoggingProfilingEvents,\r\n} from '../SchedulerProfiling';\r\n\r\nlet getCurrentTime;\r\nconst hasPerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nif (hasPerformanceNow) {\r\n  const localPerformance = performance;\r\n  getCurrentTime = () => localPerformance.now();\r\n} else {\r\n  const localDate = Date;\r\n  const initialTime = localDate.now();\r\n  getCurrentTime = () => localDate.now() - initialTime;\r\n}\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\n// Times out immediately\r\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\r\n// Eventually times out\r\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\r\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\r\nvar LOW_PRIORITY_TIMEOUT = 10000;\r\n// Never times out\r\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\r\n\r\n// Tasks are stored on a min heap\r\nvar taskQueue = [];\r\nvar timerQueue = [];\r\n\r\n// Incrementing id counter. Used to maintain insertion order.\r\nvar taskIdCounter = 1;\r\n\r\n// Pausing the scheduler is useful for debugging.\r\nvar isSchedulerPaused = false;\r\n\r\nvar currentTask = null;\r\nvar currentPriorityLevel = NormalPriority;\r\n\r\n// This is set while performing work, to prevent re-entrance.\r\nvar isPerformingWork = false;\r\n\r\nvar isHostCallbackScheduled = false;\r\nvar isHostTimeoutScheduled = false;\r\n\r\n// Capture local references to native APIs, in case a polyfill overrides them.\r\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\r\nconst localClearTimeout =\r\n  typeof clearTimeout === 'function' ? clearTimeout : null;\r\nconst localSetImmediate =\r\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\r\n\r\nconst isInputPending =\r\n  typeof navigator !== 'undefined' &&\r\n  navigator.scheduling !== undefined &&\r\n  navigator.scheduling.isInputPending !== undefined\r\n    ? navigator.scheduling.isInputPending.bind(navigator.scheduling)\r\n    : null;\r\n\r\nconst continuousOptions = {includeContinuous: enableIsInputPendingContinuous};\r\n\r\nfunction advanceTimers(currentTime) {\r\n  // Check for tasks that are no longer delayed and add them to the queue.\r\n  let timer = peek(timerQueue);\r\n  while (timer !== null) {\r\n    if (timer.callback === null) {\r\n      // Timer was cancelled.\r\n      pop(timerQueue);\r\n    } else if (timer.startTime <= currentTime) {\r\n      // Timer fired. Transfer to the task queue.\r\n      pop(timerQueue);\r\n      timer.sortIndex = timer.expirationTime;\r\n      push(taskQueue, timer);\r\n      if (enableProfiling) {\r\n        markTaskStart(timer, currentTime);\r\n        timer.isQueued = true;\r\n      }\r\n    } else {\r\n      // Remaining timers are pending.\r\n      return;\r\n    }\r\n    timer = peek(timerQueue);\r\n  }\r\n}\r\n\r\nfunction handleTimeout(currentTime) {\r\n  isHostTimeoutScheduled = false;\r\n  advanceTimers(currentTime);\r\n\r\n  if (!isHostCallbackScheduled) {\r\n    if (peek(taskQueue) !== null) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    } else {\r\n      const firstTimer = peek(timerQueue);\r\n      if (firstTimer !== null) {\r\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushWork(hasTimeRemaining, initialTime) {\r\n  if (enableProfiling) {\r\n    markSchedulerUnsuspended(initialTime);\r\n  }\r\n\r\n  // We'll need a host callback the next time work is scheduled.\r\n  isHostCallbackScheduled = false;\r\n  if (isHostTimeoutScheduled) {\r\n    // We scheduled a timeout but it's no longer needed. Cancel it.\r\n    isHostTimeoutScheduled = false;\r\n    cancelHostTimeout();\r\n  }\r\n\r\n  isPerformingWork = true;\r\n  const previousPriorityLevel = currentPriorityLevel;\r\n  try {\r\n    if (enableProfiling) {\r\n      try {\r\n        return workLoop(hasTimeRemaining, initialTime);\r\n      } catch (error) {\r\n        if (currentTask !== null) {\r\n          const currentTime = getCurrentTime();\r\n          markTaskErrored(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        throw error;\r\n      }\r\n    } else {\r\n      // No catch in prod code path.\r\n      return workLoop(hasTimeRemaining, initialTime);\r\n    }\r\n  } finally {\r\n    currentTask = null;\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    isPerformingWork = false;\r\n    if (enableProfiling) {\r\n      const currentTime = getCurrentTime();\r\n      markSchedulerSuspended(currentTime);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop(hasTimeRemaining, initialTime) {\r\n  let currentTime = initialTime;\r\n  advanceTimers(currentTime);\r\n  currentTask = peek(taskQueue);\r\n  while (\r\n    currentTask !== null &&\r\n    !(enableSchedulerDebugging && isSchedulerPaused)\r\n  ) {\r\n    if (\r\n      currentTask.expirationTime > currentTime &&\r\n      (!hasTimeRemaining || shouldYieldToHost())\r\n    ) {\r\n      // This currentTask hasn't expired, and we've reached the deadline.\r\n      break;\r\n    }\r\n    const callback = currentTask.callback;\r\n    if (typeof callback === 'function') {\r\n      currentTask.callback = null;\r\n      currentPriorityLevel = currentTask.priorityLevel;\r\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\r\n      if (enableProfiling) {\r\n        markTaskRun(currentTask, currentTime);\r\n      }\r\n      const continuationCallback = callback(didUserCallbackTimeout);\r\n      currentTime = getCurrentTime();\r\n      if (typeof continuationCallback === 'function') {\r\n        currentTask.callback = continuationCallback;\r\n        if (enableProfiling) {\r\n          markTaskYield(currentTask, currentTime);\r\n        }\r\n      } else {\r\n        if (enableProfiling) {\r\n          markTaskCompleted(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        if (currentTask === peek(taskQueue)) {\r\n          pop(taskQueue);\r\n        }\r\n      }\r\n      advanceTimers(currentTime);\r\n    } else {\r\n      pop(taskQueue);\r\n    }\r\n    currentTask = peek(taskQueue);\r\n  }\r\n  // Return whether there's additional work\r\n  if (currentTask !== null) {\r\n    return true;\r\n  } else {\r\n    const firstTimer = peek(timerQueue);\r\n    if (firstTimer !== null) {\r\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n    case LowPriority:\r\n    case IdlePriority:\r\n      break;\r\n    default:\r\n      priorityLevel = NormalPriority;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_next(eventHandler) {\r\n  var priorityLevel;\r\n  switch (currentPriorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel;\r\n      break;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_wrapCallback(callback) {\r\n  var parentPriorityLevel = currentPriorityLevel;\r\n  return function() {\r\n    // This is a fork of runWithPriority, inlined for performance.\r\n    var previousPriorityLevel = currentPriorityLevel;\r\n    currentPriorityLevel = parentPriorityLevel;\r\n\r\n    try {\r\n      return callback.apply(this, arguments);\r\n    } finally {\r\n      currentPriorityLevel = previousPriorityLevel;\r\n    }\r\n  };\r\n}\r\n\r\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\r\n  var currentTime = getCurrentTime();\r\n\r\n  var startTime;\r\n  if (typeof options === 'object' && options !== null) {\r\n    var delay = options.delay;\r\n    if (typeof delay === 'number' && delay > 0) {\r\n      startTime = currentTime + delay;\r\n    } else {\r\n      startTime = currentTime;\r\n    }\r\n  } else {\r\n    startTime = currentTime;\r\n  }\r\n\r\n  var timeout;\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case UserBlockingPriority:\r\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\r\n      break;\r\n    case IdlePriority:\r\n      timeout = IDLE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case LowPriority:\r\n      timeout = LOW_PRIORITY_TIMEOUT;\r\n      break;\r\n    case NormalPriority:\r\n    default:\r\n      timeout = NORMAL_PRIORITY_TIMEOUT;\r\n      break;\r\n  }\r\n\r\n  var expirationTime = startTime + timeout;\r\n\r\n  var newTask = {\r\n    id: taskIdCounter++,\r\n    callback,\r\n    priorityLevel,\r\n    startTime,\r\n    expirationTime,\r\n    sortIndex: -1,\r\n  };\r\n  if (enableProfiling) {\r\n    newTask.isQueued = false;\r\n  }\r\n\r\n  if (startTime > currentTime) {\r\n    // This is a delayed task.\r\n    newTask.sortIndex = startTime;\r\n    push(timerQueue, newTask);\r\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\r\n      // All tasks are delayed, and this is the task with the earliest delay.\r\n      if (isHostTimeoutScheduled) {\r\n        // Cancel an existing timeout.\r\n        cancelHostTimeout();\r\n      } else {\r\n        isHostTimeoutScheduled = true;\r\n      }\r\n      // Schedule a timeout.\r\n      requestHostTimeout(handleTimeout, startTime - currentTime);\r\n    }\r\n  } else {\r\n    newTask.sortIndex = expirationTime;\r\n    push(taskQueue, newTask);\r\n    if (enableProfiling) {\r\n      markTaskStart(newTask, currentTime);\r\n      newTask.isQueued = true;\r\n    }\r\n    // Schedule a host callback, if needed. If we're already performing work,\r\n    // wait until the next time we yield.\r\n    if (!isHostCallbackScheduled && !isPerformingWork) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    }\r\n  }\r\n\r\n  return newTask;\r\n}\r\n\r\nfunction unstable_pauseExecution() {\r\n  isSchedulerPaused = true;\r\n}\r\n\r\nfunction unstable_continueExecution() {\r\n  isSchedulerPaused = false;\r\n  if (!isHostCallbackScheduled && !isPerformingWork) {\r\n    isHostCallbackScheduled = true;\r\n    requestHostCallback(flushWork);\r\n  }\r\n}\r\n\r\nfunction unstable_getFirstCallbackNode() {\r\n  return peek(taskQueue);\r\n}\r\n\r\nfunction unstable_cancelCallback(task) {\r\n  if (enableProfiling) {\r\n    if (task.isQueued) {\r\n      const currentTime = getCurrentTime();\r\n      markTaskCanceled(task, currentTime);\r\n      task.isQueued = false;\r\n    }\r\n  }\r\n\r\n  // Null out the callback to indicate the task has been canceled. (Can't\r\n  // remove from the queue because you can't remove arbitrary nodes from an\r\n  // array based heap, only the first one.)\r\n  task.callback = null;\r\n}\r\n\r\nfunction unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel;\r\n}\r\n\r\nlet isMessageLoopRunning = false;\r\nlet scheduledHostCallback = null;\r\nlet taskTimeoutID = -1;\r\n\r\n// Scheduler periodically yields in case there is other work on the main\r\n// thread, like user events. By default, it yields multiple times per frame.\r\n// It does not attempt to align with frame boundaries, since most tasks don't\r\n// need to be frame aligned; for those that do, use requestAnimationFrame.\r\nlet frameInterval = frameYieldMs;\r\nconst continuousInputInterval = continuousYieldMs;\r\nconst maxInterval = maxYieldMs;\r\nlet startTime = -1;\r\n\r\nlet needsPaint = false;\r\n\r\nfunction shouldYieldToHost() {\r\n  const timeElapsed = getCurrentTime() - startTime;\r\n  if (timeElapsed < frameInterval) {\r\n    // The main thread has only been blocked for a really short amount of time;\r\n    // smaller than a single frame. Don't yield yet.\r\n    return false;\r\n  }\r\n\r\n  // The main thread has been blocked for a non-negligible amount of time. We\r\n  // may want to yield control of the main thread, so the browser can perform\r\n  // high priority tasks. The main ones are painting and user input. If there's\r\n  // a pending paint or a pending input, then we should yield. But if there's\r\n  // neither, then we can yield less often while remaining responsive. We'll\r\n  // eventually yield regardless, since there could be a pending paint that\r\n  // wasn't accompanied by a call to `requestPaint`, or other main thread tasks\r\n  // like network events.\r\n  if (enableIsInputPending) {\r\n    if (needsPaint) {\r\n      // There's a pending paint (signaled by `requestPaint`). Yield now.\r\n      return true;\r\n    }\r\n    if (timeElapsed < continuousInputInterval) {\r\n      // We haven't blocked the thread for that long. Only yield if there's a\r\n      // pending discrete input (e.g. click). It's OK if there's pending\r\n      // continuous input (e.g. mouseover).\r\n      if (isInputPending !== null) {\r\n        return isInputPending();\r\n      }\r\n    } else if (timeElapsed < maxInterval) {\r\n      // Yield if there's either a pending discrete or continuous input.\r\n      if (isInputPending !== null) {\r\n        return isInputPending(continuousOptions);\r\n      }\r\n    } else {\r\n      // We've blocked the thread for a long time. Even if there's no pending\r\n      // input, there may be some other scheduled work that we don't know about,\r\n      // like a network event. Yield now.\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // `isInputPending` isn't available. Yield now.\r\n  return true;\r\n}\r\n\r\nfunction requestPaint() {\r\n  if (\r\n    enableIsInputPending &&\r\n    navigator !== undefined &&\r\n    navigator.scheduling !== undefined &&\r\n    navigator.scheduling.isInputPending !== undefined\r\n  ) {\r\n    needsPaint = true;\r\n  }\r\n\r\n  // Since we yield every frame regardless, `requestPaint` has no effect.\r\n}\r\n\r\nfunction forceFrameRate(fps) {\r\n  if (fps < 0 || fps > 125) {\r\n    // Using console['error'] to evade Babel and ESLint\r\n    console['error'](\r\n      'forceFrameRate takes a positive int between 0 and 125, ' +\r\n        'forcing frame rates higher than 125 fps is not supported',\r\n    );\r\n    return;\r\n  }\r\n  if (fps > 0) {\r\n    frameInterval = Math.floor(1000 / fps);\r\n  } else {\r\n    // reset the framerate\r\n    frameInterval = frameYieldMs;\r\n  }\r\n}\r\n\r\nconst performWorkUntilDeadline = () => {\r\n  if (scheduledHostCallback !== null) {\r\n    const currentTime = getCurrentTime();\r\n    // Keep track of the start time so we can measure how long the main thread\r\n    // has been blocked.\r\n    startTime = currentTime;\r\n    const hasTimeRemaining = true;\r\n\r\n    // If a scheduler task throws, exit the current browser task so the\r\n    // error can be observed.\r\n    //\r\n    // Intentionally not using a try-catch, since that makes some debugging\r\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\r\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\r\n    let hasMoreWork = true;\r\n    try {\r\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\r\n    } finally {\r\n      if (hasMoreWork) {\r\n        // If there's more work, schedule the next message event at the end\r\n        // of the preceding one.\r\n        schedulePerformWorkUntilDeadline();\r\n      } else {\r\n        isMessageLoopRunning = false;\r\n        scheduledHostCallback = null;\r\n      }\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n  // Yielding to the browser will give it a chance to paint, so we can\r\n  // reset this.\r\n  needsPaint = false;\r\n};\r\n\r\nlet schedulePerformWorkUntilDeadline;\r\nif (typeof localSetImmediate === 'function') {\r\n  // Node.js and old IE.\r\n  // There's a few reasons for why we prefer setImmediate.\r\n  //\r\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\r\n  // (Even though this is a DOM fork of the Scheduler, you could get here\r\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\r\n  // https://github.com/facebook/react/issues/20756\r\n  //\r\n  // But also, it runs earlier which is the semantic we want.\r\n  // If other browsers ever implement it, it's better to use it.\r\n  // Although both of these would be inferior to native scheduling.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetImmediate(performWorkUntilDeadline);\r\n  };\r\n} else if (typeof MessageChannel !== 'undefined') {\r\n  // DOM and Worker environments.\r\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\r\n  const channel = new MessageChannel();\r\n  const port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    port.postMessage(null);\r\n  };\r\n} else {\r\n  // We should only fallback here in non-browser environments.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetTimeout(performWorkUntilDeadline, 0);\r\n  };\r\n}\r\n\r\nfunction requestHostCallback(callback) {\r\n  scheduledHostCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    schedulePerformWorkUntilDeadline();\r\n  }\r\n}\r\n\r\nfunction requestHostTimeout(callback, ms) {\r\n  taskTimeoutID = localSetTimeout(() => {\r\n    callback(getCurrentTime());\r\n  }, ms);\r\n}\r\n\r\nfunction cancelHostTimeout() {\r\n  localClearTimeout(taskTimeoutID);\r\n  taskTimeoutID = -1;\r\n}\r\n\r\nconst unstable_requestPaint = requestPaint;\r\n\r\nexport {\r\n  ImmediatePriority as unstable_ImmediatePriority,\r\n  UserBlockingPriority as unstable_UserBlockingPriority,\r\n  NormalPriority as unstable_NormalPriority,\r\n  IdlePriority as unstable_IdlePriority,\r\n  LowPriority as unstable_LowPriority,\r\n  unstable_runWithPriority,\r\n  unstable_next,\r\n  unstable_scheduleCallback,\r\n  unstable_cancelCallback,\r\n  unstable_wrapCallback,\r\n  unstable_getCurrentPriorityLevel,\r\n  shouldYieldToHost as unstable_shouldYield,\r\n  unstable_requestPaint,\r\n  unstable_continueExecution,\r\n  unstable_pauseExecution,\r\n  unstable_getFirstCallbackNode,\r\n  getCurrentTime as unstable_now,\r\n  forceFrameRate as unstable_forceFrameRate,\r\n};\r\n\r\nexport const unstable_Profiling = enableProfiling\r\n  ? {\r\n      startLoggingProfilingEvents,\r\n      stopLoggingProfilingEvents,\r\n    }\r\n  : null;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport * as Scheduler from 'scheduler';\r\nimport ReactCurrentDispatcher from '../ReactCurrentDispatcher';\r\nimport ReactCurrentActQueue from '../ReactCurrentActQueue';\r\nimport ReactCurrentOwner from '../ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from '../ReactDebugCurrentFrame';\r\nimport ReactCurrentBatchConfig from '../ReactCurrentBatchConfig';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from '../ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentOwner,\r\n  ReactCurrentBatchConfig,\r\n\r\n  // Re-export the schedule API(s) for UMD bundles.\r\n  // This avoids introducing a dependency on a new UMD global in a minor update,\r\n  // Since that would be a breaking change (e.g. for all existing CodeSandboxes).\r\n  // This re-export is only required for UMD bundles;\r\n  // CJS bundles use the shared NPM package.\r\n  Scheduler,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","enableSchedulerDebugging","enableProfiling","frameYieldMs","heap","node","siftUp","peek","pop","first","last","siftDown","parentIndex","parent","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","getCurrentTime","hasPerformanceNow","performance","now","localPerformance","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","advanceTimers","currentTime","timer","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","isSchedulerPaused","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling","Scheduler","startTransition","scope","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":";;;;;;EAOA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,qBAAe,QAAf;;ECNA;EACA;EACA;EAEA;AACA,EAAO,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,EAAO,MAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;AACP,QAAaE,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,QAAaG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,QAAaI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,EAAO,MAAMK,mBAAmB,GAAGN,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,EAAO,MAAMM,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,EAAO,MAAMO,yBAAyB,GAAGR,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAlC;AACP,EAAO,MAAMQ,sBAAsB,GAAGT,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,QAAaS,mBAAmB,GAAGV,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,QAAaU,wBAAwB,GAAGX,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACP,EAAO,MAAMW,eAAe,GAAGZ,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,EAAO,MAAMY,eAAe,GAAGb,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,QACaa,6BAA6B,GAAGd,MAAM,CAACC,GAAP,CAC3C,wBAD2C,CAAtC;AAGP,QAAac,oBAAoB,GAAGf,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA7B;AACP,QACae,gBAAgB,GAAGhB,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AACP,EACO,MAAMgB,6CAA6C,GAAGjB,MAAM,CAACC,GAAP,CAC3D,qBAD2D,CAAtD;EAIP,MAAMiB,qBAAqB,GAAGlB,MAAM,CAACmB,QAArC;EACA,MAAMC,oBAAoB,GAAG,YAA7B;AAEA,EAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;EACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;EAC/D,WAAO,IAAP;EACD;;EACD,QAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;EAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;EACvC,WAAOA,aAAP;EACD;;EACD,SAAO,IAAP;EACD;;ECtBD;;;;;EAGA,MAAMC,oBAAoB,GAAG;EAC3B;;;;;;;EAOAC,EAAAA,SAAS,EAAE,UAASC,cAAT,EAAyB;EAClC,WAAO,KAAP;EACD,GAV0B;;EAY3B;;;;;;;;;;;;;;;EAeAC,EAAAA,kBAAkB,EAAE,UAASD,cAAT,EAAyBE,QAAzB,EAAmCC,UAAnC,EAA+C;AACjEC,EACD,GA7B0B;;EA+B3B;;;;;;;;;;;;;EAaAC,EAAAA,mBAAmB,EAAE,UACnBL,cADmB,EAEnBM,aAFmB,EAGnBJ,QAHmB,EAInBC,UAJmB,EAKnB;AACAC,EACD,GAnD0B;;EAqD3B;;;;;;;;;;;;EAYAG,EAAAA,eAAe,EAAE,UACfP,cADe,EAEfQ,YAFe,EAGfN,QAHe,EAIfC,UAJe,EAKf;AACAC,EACD;EAxE0B,CAA7B;;ECzBA,MAAMK,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ECCA,MAAME,WAAW,GAAG,EAApB;EAKA;;;;;EAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;EAC1C,OAAKF,KAAL,GAAaA,KAAb;EACA,OAAKC,OAAL,GAAeA,OAAf,CAF0C;;EAI1C,OAAKE,IAAL,GAAYL,WAAZ,CAJ0C;EAM1C;;EACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;EACD;;EAEDc,SAAS,CAACK,SAAV,CAAoBC,gBAApB,GAAuC,EAAvC;EAEA;;;;;;;;;;;;;;;;;;;;;;;;;;EAyBAN,SAAS,CAACK,SAAV,CAAoBE,QAApB,GAA+B,UAASX,YAAT,EAAuBN,QAAvB,EAAiC;EAC9D,MACE,OAAOM,YAAP,KAAwB,QAAxB,IACA,OAAOA,YAAP,KAAwB,UADxB,IAEAA,YAAY,IAAI,IAHlB,EAIE;EACA,UAAM,IAAIY,KAAJ,CACJ,sEACE,sDAFE,CAAN;EAID;;EAED,OAAKL,OAAL,CAAaR,eAAb,CAA6B,IAA7B,EAAmCC,YAAnC,EAAiDN,QAAjD,EAA2D,UAA3D;EACD,CAbD;EAeA;;;;;;;;;;;;;;;;EAcAU,SAAS,CAACK,SAAV,CAAoBI,WAApB,GAAkC,UAASnB,QAAT,EAAmB;EACnD,OAAKa,OAAL,CAAad,kBAAb,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgD,aAAhD;EACD,CAFD;AAIA;EAqCA,SAASoB,cAAT,GAA0B;;EAC1BA,cAAc,CAACL,SAAf,GAA2BL,SAAS,CAACK,SAArC;EAEA;;;;EAGA,SAASM,aAAT,CAAuBV,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;EAC9C,OAAKF,KAAL,GAAaA,KAAb;EACA,OAAKC,OAAL,GAAeA,OAAf,CAF8C;;EAI9C,OAAKE,IAAL,GAAYL,WAAZ;EACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;EACD;;EAED,MAAM0B,sBAAsB,GAAID,aAAa,CAACN,SAAd,GAA0B,IAAIK,cAAJ,EAA1D;EACAE,sBAAsB,CAACC,WAAvB,GAAqCF,aAArC;;EAEAd,MAAM,CAACe,sBAAD,EAAyBZ,SAAS,CAACK,SAAnC,CAAN;EACAO,sBAAsB,CAACE,oBAAvB,GAA8C,IAA9C;;ECrIA;AACA,EAAO,SAASC,SAAT,GAAgC;EACrC,QAAMC,SAAS,GAAG;EAChBC,IAAAA,OAAO,EAAE;EADO,GAAlB;;EAMA,SAAOD,SAAP;EACD;;ECRD,MAAME,WAAW,GAAGC,KAAK,CAACC,OAA1B;;EAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;EAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;EACD;;ECPD,MAAMC,cAAc,GAAGxB,MAAM,CAACO,SAAP,CAAiBiB,cAAxC;;ECEA;;;;;;EAMA,MAAMC,iBAAiB,GAAG;EACxB;;;;EAIAN,EAAAA,OAAO,EAAG;EALc,CAA1B;;ECFA,MAAMO,cAAc,GAAG;EACrBC,EAAAA,GAAG,EAAE,IADgB;EAErBC,EAAAA,GAAG,EAAE,IAFgB;EAGrBC,EAAAA,MAAM,EAAE,IAHa;EAIrBC,EAAAA,QAAQ,EAAE;EAJW,CAAvB;AAOA;EAQA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;EAQA,SAAOA,MAAM,CAACJ,GAAP,KAAeK,SAAtB;EACD;;EAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;AAC3B;EAQA,SAAOA,MAAM,CAACL,GAAP,KAAeM,SAAtB;EACD;EA2ED;;;;;;;;;;;;;;;;;;;;;;EAoBA,MAAME,YAAY,GAAG,UAASC,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,EAAqD;EACxE,QAAMqC,OAAO,GAAG;EACd;EACAC,IAAAA,QAAQ,EAAE9E,kBAFI;EAId;EACAyE,IAAAA,IAAI,EAAEA,IALQ;EAMdT,IAAAA,GAAG,EAAEA,GANS;EAOdC,IAAAA,GAAG,EAAEA,GAPS;EAQdzB,IAAAA,KAAK,EAAEA,KARO;EAUd;EACAuC,IAAAA,MAAM,EAAEH;EAXM,GAAhB;;EAoDA,SAAOC,OAAP;EACD,CAtDD;AAwDA,EA0JA;;;;;AAIA,EAAO,SAASG,aAAT,CAAuBP,IAAvB,EAA6BJ,MAA7B,EAAqCY,QAArC,EAA+C;EACpD,MAAIC,QAAJ,CADoD;;EAIpD,QAAM1C,KAAK,GAAG,EAAd;EAEA,MAAIwB,GAAG,GAAG,IAAV;EACA,MAAIC,GAAG,GAAG,IAAV;EACA,MAAIS,IAAI,GAAG,IAAX;EACA,MAAIC,MAAM,GAAG,IAAb;;EAEA,MAAIN,MAAM,IAAI,IAAd,EAAoB;EAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;EACvBJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;EAKD;;EACD,QAAIM,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;EAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;EACD;;EAEDU,IAAAA,IAAI,GAAGL,MAAM,CAACH,MAAP,KAAkBI,SAAlB,GAA8B,IAA9B,GAAqCD,MAAM,CAACH,MAAnD;EACAS,IAAAA,MAAM,GAAGN,MAAM,CAACF,QAAP,KAAoBG,SAApB,GAAgC,IAAhC,GAAuCD,MAAM,CAACF,QAAvD,CAhBkB;;EAkBlB,SAAKe,QAAL,IAAiBb,MAAjB,EAAyB;EACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;EACA1C,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;EACD;EACF;EACF,GArCmD;EAwCpD;;;EACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;EACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;EACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;EACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;EAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;EACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;EACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;EACD;;EAMDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;EACD,GAvDmD;;;EA0DpD,MAAId,IAAI,IAAIA,IAAI,CAACgB,YAAjB,EAA+B;EAC7B,UAAMA,YAAY,GAAGhB,IAAI,CAACgB,YAA1B;;EACA,SAAKP,QAAL,IAAiBO,YAAjB,EAA+B;EAC7B,UAAIjD,KAAK,CAAC0C,QAAD,CAAL,KAAoBZ,SAAxB,EAAmC;EACjC9B,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;EACD;EACF;EACF;;EAeD,SAAOV,YAAY,CACjBC,IADiB,EAEjBT,GAFiB,EAGjBC,GAHiB,EAIjBS,IAJiB,EAKjBC,MALiB,EAMjBb,iBAAiB,CAACN,OAND,EAOjBhB,KAPiB,CAAnB;EASD;EAED;;;;;AAIA,EAAO,SAASkD,aAAT,CAAuBjB,IAAvB,EAA6B;EAClC,QAAMkB,OAAO,GAAGX,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyBnB,IAAzB,CAAhB,CADkC;EAGlC;EACA;EACA;EACA;;EACAkB,EAAAA,OAAO,CAAClB,IAAR,GAAeA,IAAf;EACA,SAAOkB,OAAP;EACD;AAED,EAAO,SAASE,kBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;EACrD,QAAMC,UAAU,GAAGxB,YAAY,CAC7BsB,UAAU,CAACrB,IADkB,EAE7BsB,MAF6B,EAG7BD,UAAU,CAAC7B,GAHkB,EAI7B6B,UAAU,CAACG,KAJkB,EAK7BH,UAAU,CAACI,OALkB,EAM7BJ,UAAU,CAACf,MANkB,EAO7Be,UAAU,CAACtD,KAPkB,CAA/B;EAUA,SAAOwD,UAAP;EACD;EAED;;;;;AAIA,EAAO,SAASG,YAAT,CAAsBtB,OAAtB,EAA+BR,MAA/B,EAAuCY,QAAvC,EAAiD;EACtD,MAAIJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKP,SAApC,EAA+C;EAC7C,UAAM,IAAIvB,KAAJ,oFAC6E8B,OAD7E,OAAN;EAGD;;EAED,MAAIK,QAAJ,CAPsD;;EAUtD,QAAM1C,KAAK,GAAGJ,MAAM,CAAC,EAAD,EAAKyC,OAAO,CAACrC,KAAb,CAApB,CAVsD;;EAatD,MAAIwB,GAAG,GAAGa,OAAO,CAACb,GAAlB;EACA,MAAIC,GAAG,GAAGY,OAAO,CAACZ,GAAlB,CAdsD;;EAgBtD,QAAMS,IAAI,GAAGG,OAAO,CAACoB,KAArB,CAhBsD;EAkBtD;EACA;;EACA,QAAMtB,MAAM,GAAGE,OAAO,CAACqB,OAAvB,CApBsD;;EAuBtD,MAAItB,KAAK,GAAGC,OAAO,CAACE,MAApB;;EAEA,MAAIV,MAAM,IAAI,IAAd,EAAoB;EAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;EACvB;EACAJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;EACAW,MAAAA,KAAK,GAAGd,iBAAiB,CAACN,OAA1B;EACD;;EACD,QAAIe,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;EAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;EACD,KAXiB;;;EAclB,QAAIyB,YAAJ;;EACA,QAAIZ,OAAO,CAACJ,IAAR,IAAgBI,OAAO,CAACJ,IAAR,CAAagB,YAAjC,EAA+C;EAC7CA,MAAAA,YAAY,GAAGZ,OAAO,CAACJ,IAAR,CAAagB,YAA5B;EACD;;EACD,SAAKP,QAAL,IAAiBb,MAAjB,EAAyB;EACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;EACA,YAAIb,MAAM,CAACa,QAAD,CAAN,KAAqBZ,SAArB,IAAkCmB,YAAY,KAAKnB,SAAvD,EAAkE;EAChE;EACA9B,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;EACD,SAHD,MAGO;EACL1C,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;EACD;EACF;EACF;EACF,GAxDqD;EA2DtD;;;EACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;EACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;EACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;EACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;EAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;EACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;EACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;EACD;;EACDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;EACD;;EAED,SAAOf,YAAY,CAACK,OAAO,CAACJ,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,CAAnB;EACD;EAED;;;;;;;;AAOA,EAAO,SAAS4D,cAAT,CAAwBC,MAAxB,EAAgC;EACrC,SACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAACvB,QAAP,KAAoB9E,kBAHtB;EAKD;;ECviBD,MAAMsG,SAAS,GAAG,GAAlB;EACA,MAAMC,YAAY,GAAG,GAArB;EAEA;;;;;;;EAMA,SAASC,MAAT,CAAgBxC,GAAhB,EAAqC;EACnC,QAAMyC,WAAW,GAAG,OAApB;EACA,QAAMC,aAAa,GAAG;EACpB,SAAK,IADe;EAEpB,SAAK;EAFe,GAAtB;EAIA,QAAMC,aAAa,GAAG3C,GAAG,CAAC4C,OAAJ,CAAYH,WAAZ,EAAyB,UAASI,KAAT,EAAgB;EAC7D,WAAOH,aAAa,CAACG,KAAD,CAApB;EACD,GAFqB,CAAtB;EAIA,SAAO,MAAMF,aAAb;EACD;AAED,EAOA,MAAMG,0BAA0B,GAAG,MAAnC;;EACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;EACnD,SAAOA,IAAI,CAACJ,OAAL,CAAaE,0BAAb,EAAyC,KAAzC,CAAP;EACD;EAED;;;;;;;;;EAOA,SAASG,aAAT,CAAuBpC,OAAvB,EAAqCqC,KAArC,EAA4D;EAC1D;EACA;EACA,MAAI,OAAOrC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmDA,OAAO,CAACb,GAAR,IAAe,IAAtE,EAA4E;AAC1E;EAIA,WAAOwC,MAAM,CAAC,KAAK3B,OAAO,CAACb,GAAd,CAAb;EACD,GATyD;;;EAW1D,SAAOkD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAP;EACD;;EAED,SAASC,YAAT,CACEnC,QADF,EAEEoC,KAFF,EAGEC,aAHF,EAIEC,SAJF,EAKE1F,QALF,EAMU;EACR,QAAM4C,IAAI,GAAG,OAAOQ,QAApB;;EAEA,MAAIR,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAArC,EAAgD;EAC9C;EACAQ,IAAAA,QAAQ,GAAG,IAAX;EACD;;EAED,MAAIuC,cAAc,GAAG,KAArB;;EAEA,MAAIvC,QAAQ,KAAK,IAAjB,EAAuB;EACrBuC,IAAAA,cAAc,GAAG,IAAjB;EACD,GAFD,MAEO;EACL,YAAQ/C,IAAR;EACE,WAAK,QAAL;EACA,WAAK,QAAL;EACE+C,QAAAA,cAAc,GAAG,IAAjB;EACA;;EACF,WAAK,QAAL;EACE,gBAASvC,QAAD,CAAgBH,QAAxB;EACE,eAAK9E,kBAAL;EACA,eAAKG,iBAAL;EACEqH,YAAAA,cAAc,GAAG,IAAjB;EAHJ;;EANJ;EAYD;;EAED,MAAIA,cAAJ,EAAoB;EAClB,UAAMC,KAAK,GAAGxC,QAAd;EACA,QAAIyC,WAAW,GAAG7F,QAAQ,CAAC4F,KAAD,CAA1B,CAFkB;EAIlB;;EACA,UAAME,QAAQ,GACZJ,SAAS,KAAK,EAAd,GAAmBjB,SAAS,GAAGW,aAAa,CAACQ,KAAD,EAAQ,CAAR,CAA5C,GAAyDF,SAD3D;;EAEA,QAAI5D,OAAO,CAAC+D,WAAD,CAAX,EAA0B;EACxB,UAAIE,eAAe,GAAG,EAAtB;;EACA,UAAID,QAAQ,IAAI,IAAhB,EAAsB;EACpBC,QAAAA,eAAe,GAAGb,qBAAqB,CAACY,QAAD,CAArB,GAAkC,GAApD;EACD;;EACDP,MAAAA,YAAY,CAACM,WAAD,EAAcL,KAAd,EAAqBO,eAArB,EAAsC,EAAtC,EAA0CC,CAAC,IAAIA,CAA/C,CAAZ;EACD,KAND,MAMO,IAAIH,WAAW,IAAI,IAAnB,EAAyB;EAC9B,UAAItB,cAAc,CAACsB,WAAD,CAAlB,EAAiC;AAC/B;EAQAA,QAAAA,WAAW,GAAG7B,kBAAkB,CAC9B6B,WAD8B;EAG9B;EACAJ,QAAAA,aAAa;EAEVI,QAAAA,WAAW,CAAC1D,GAAZ,KAAoB,CAACyD,KAAD,IAAUA,KAAK,CAACzD,GAAN,KAAc0D,WAAW,CAAC1D,GAAxD;EAEG;EACA+C,QAAAA,qBAAqB,CAAC,KAAKW,WAAW,CAAC1D,GAAlB,CAArB,GAA8C,GAHjD,GAIG,EANO,CAAb,GAOE2D,QAX4B,CAAhC;EAaD;;EACDN,MAAAA,KAAK,CAACS,IAAN,CAAWJ,WAAX;EACD;;EACD,WAAO,CAAP;EACD;;EAED,MAAID,KAAJ;EACA,MAAIM,QAAJ;EACA,MAAIC,YAAY,GAAG,CAAnB,CAvEQ;;EAwER,QAAMC,cAAc,GAClBV,SAAS,KAAK,EAAd,GAAmBjB,SAAnB,GAA+BiB,SAAS,GAAGhB,YAD7C;;EAGA,MAAI5C,OAAO,CAACsB,QAAD,CAAX,EAAuB;EACrB,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACK,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;EACxCiC,MAAAA,KAAK,GAAGxC,QAAQ,CAACO,CAAD,CAAhB;EACAuC,MAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQjC,CAAR,CAAzC;EACAwC,MAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;EAOD;EACF,GAZD,MAYO;EACL,UAAMqG,UAAU,GAAG5G,aAAa,CAAC2D,QAAD,CAAhC;;EACA,QAAI,OAAOiD,UAAP,KAAsB,UAA1B,EAAsC;EACpC,YAAMC,gBAEL,GAAIlD,QAFL;;EAiBA,YAAM7D,QAAQ,GAAG8G,UAAU,CAAC/C,IAAX,CAAgBgD,gBAAhB,CAAjB;EACA,UAAIC,IAAJ;EACA,UAAIC,EAAE,GAAG,CAAT;;EACA,aAAO,CAAC,CAACD,IAAI,GAAGhH,QAAQ,CAACkH,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;EACrCd,QAAAA,KAAK,GAAGW,IAAI,CAACI,KAAb;EACAT,QAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQY,EAAE,EAAV,CAAzC;EACAL,QAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;EAOD;EACF,KAhCD,MAgCO,IAAI4C,IAAI,KAAK,QAAb,EAAuB;EAC5B;EACA,YAAMgE,cAAc,GAAGC,MAAM,CAAEzD,QAAF,CAA7B;EAEA,YAAM,IAAIlC,KAAJ,CACJ,qDACE0F,cAAc,KAAK,iBAAnB,GACI,uBACApG,MAAM,CAACsG,IAAP,CAAa1D,QAAb,EAA6B2D,IAA7B,CAAkC,IAAlC,CADA,GAEA,GAHJ,GAIIH,cALN,YAOE,gEAPF,GAQE,UATE,CAAN;EAWD;EACF;;EAED,SAAOT,YAAP;EACD;;EAID;;;;;;;;;;;;;EAaA,SAASa,WAAT,CACE5D,QADF,EAEE6D,IAFF,EAGErG,OAHF,EAIsB;EACpB,MAAIwC,QAAQ,IAAI,IAAhB,EAAsB;EACpB,WAAOA,QAAP;EACD;;EACD,QAAM8D,MAAM,GAAG,EAAf;EACA,MAAIC,KAAK,GAAG,CAAZ;EACA5B,EAAAA,YAAY,CAACnC,QAAD,EAAW8D,MAAX,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,UAAStB,KAAT,EAAgB;EACrD,WAAOqB,IAAI,CAAC3D,IAAL,CAAU1C,OAAV,EAAmBgF,KAAnB,EAA0BuB,KAAK,EAA/B,CAAP;EACD,GAFW,CAAZ;EAGA,SAAOD,MAAP;EACD;EAED;;;;;;;;;;;EASA,SAASE,aAAT,CAAuBhE,QAAvB,EAAyD;EACvD,MAAIiE,CAAC,GAAG,CAAR;EACAL,EAAAA,WAAW,CAAC5D,QAAD,EAAW,MAAM;EAC1BiE,IAAAA,CAAC,GADyB;EAG3B,GAHU,CAAX;EAIA,SAAOA,CAAP;EACD;;EAID;;;;;;;;;;;;EAYA,SAASC,eAAT,CACElE,QADF,EAEEmE,WAFF,EAGEC,cAHF,EAIQ;EACNR,EAAAA,WAAW,CACT5D,QADS,EAET,YAAW;EACTmE,IAAAA,WAAW,CAACE,KAAZ,CAAkB,IAAlB,EAAwBjE,SAAxB,EADS;EAGV,GALQ,EAMTgE,cANS,CAAX;EAQD;EAED;;;;;;;;EAMA,SAASE,OAAT,CAAiBtE,QAAjB,EAA8D;EAC5D,SAAO4D,WAAW,CAAC5D,QAAD,EAAWwC,KAAK,IAAIA,KAApB,CAAX,IAAyC,EAAhD;EACD;EAED;;;;;;;;;;;;;;;;EAcA,SAAS+B,SAAT,CAAsBvE,QAAtB,EAAsC;EACpC,MAAI,CAACmB,cAAc,CAACnB,QAAD,CAAnB,EAA+B;EAC7B,UAAM,IAAIlC,KAAJ,CACJ,uEADI,CAAN;EAGD;;EAED,SAAOkC,QAAP;EACD;;ECjUM,SAASwE,aAAT,CAA0BC,YAA1B,EAA4D;EACjE;EACA;EAEA,QAAMjH,OAAwB,GAAG;EAC/BqC,IAAAA,QAAQ,EAAEtE,kBADqB;EAE/B;EACA;EACA;EACA;EACA;EACAmJ,IAAAA,aAAa,EAAED,YAPgB;EAQ/BE,IAAAA,cAAc,EAAEF,YARe;EAS/B;EACA;EACAG,IAAAA,YAAY,EAAE,CAXiB;EAY/B;EACAC,IAAAA,QAAQ,EAAG,IAboB;EAc/BC,IAAAA,QAAQ,EAAG,IAdoB;EAgB/B;EACAC,IAAAA,aAAa,EAAG,IAjBe;EAkB/BC,IAAAA,WAAW,EAAG;EAlBiB,GAAjC;EAqBAxH,EAAAA,OAAO,CAACqH,QAAR,GAAmB;EACjBhF,IAAAA,QAAQ,EAAEvE,mBADO;EAEjB2J,IAAAA,QAAQ,EAAEzH;EAFO,GAAnB;AAKA;EAIA,EA+EO;EACLA,IAAAA,OAAO,CAACsH,QAAR,GAAmBtH,OAAnB;EACD;;EAOD,SAAOA,OAAP;EACD;;EC3HD,MAAM0H,aAAa,GAAG,CAAC,CAAvB;EACA,MAAMC,OAAO,GAAG,CAAhB;EACA,MAAMC,QAAQ,GAAG,CAAjB;EACA,MAAMC,QAAQ,GAAG,CAAjB;;EAkCA,SAASC,eAAT,CAA4BC,OAA5B,EAAoD;EAClD,MAAIA,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;EACrC,UAAMO,IAAI,GAAGF,OAAO,CAACG,OAArB;EACA,UAAMC,QAAQ,GAAGF,IAAI,EAArB,CAFqC;EAIrC;EACA;EACA;EACA;;EACAE,IAAAA,QAAQ,CAACC,IAAT,CACEC,YAAY,IAAI;EACd,UAAIN,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;EACpE;EACA,cAAMY,QAA4B,GAAIP,OAAtC;EACAO,QAAAA,QAAQ,CAACN,OAAT,GAAmBJ,QAAnB;EACAU,QAAAA,QAAQ,CAACJ,OAAT,GAAmBG,YAAnB;EACD;EACF,KARH,EASEE,KAAK,IAAI;EACP,UAAIR,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;EACpE;EACA,cAAMc,QAAyB,GAAIT,OAAnC;EACAS,QAAAA,QAAQ,CAACR,OAAT,GAAmBH,QAAnB;EACAW,QAAAA,QAAQ,CAACN,OAAT,GAAmBK,KAAnB;EACD;EACF,KAhBH;;EAkBA,QAAIR,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;EACrC;EACA;EACA,YAAMe,OAAuB,GAAIV,OAAjC;EACAU,MAAAA,OAAO,CAACT,OAAR,GAAkBL,OAAlB;EACAc,MAAAA,OAAO,CAACP,OAAR,GAAkBC,QAAlB;EACD;EACF;;EACD,MAAIJ,OAAO,CAACC,OAAR,KAAoBJ,QAAxB,EAAkC;EAChC,UAAMS,YAAY,GAAGN,OAAO,CAACG,OAA7B;;EA4BA,WAAOG,YAAY,CAACK,OAApB;EACD,GA9BD,MA8BO;EACL,UAAMX,OAAO,CAACG,OAAd;EACD;EACF;;AAED,EAAO,SAASS,IAAT,CACLV,IADK,EAEyB;EAC9B,QAAMF,OAAmB,GAAG;EAC1B;EACAC,IAAAA,OAAO,EAAEN,aAFiB;EAG1BQ,IAAAA,OAAO,EAAED;EAHiB,GAA5B;EAMA,QAAMW,QAAsC,GAAG;EAC7CvG,IAAAA,QAAQ,EAAEhE,eADmC;EAE7CwK,IAAAA,QAAQ,EAAEd,OAFmC;EAG7Ce,IAAAA,KAAK,EAAEhB;EAHsC,GAA/C;;EAqDA,SAAOc,QAAP;EACD;;EC9KM,SAASG,UAAT,CACLC,MADK,EAEL;AACA;EAiCA,QAAMC,WAAW,GAAG;EAClB5G,IAAAA,QAAQ,EAAEpE,sBADQ;EAElB+K,IAAAA;EAFkB,GAApB;;EA4BA,SAAOC,WAAP;EACD;;EC/DM,SAASC,IAAT,CACLlH,IADK,EAELmH,OAFK,EAGL;AACA;EASA,QAAMF,WAAW,GAAG;EAClB5G,IAAAA,QAAQ,EAAEjE,eADQ;EAElB4D,IAAAA,IAFkB;EAGlBmH,IAAAA,OAAO,EAAEA,OAAO,KAAKtH,SAAZ,GAAwB,IAAxB,GAA+BsH;EAHtB,GAApB;;EA6BA,SAAOF,WAAP;EACD;;EC3CD;;;EAGA,MAAMG,sBAAsB,GAAG;EAC7B;;;;EAIArI,EAAAA,OAAO,EAAG;EALmB,CAA/B;;ECSA,SAASsI,iBAAT,GAA6B;EAC3B,QAAMC,UAAU,GAAGF,sBAAsB,CAACrI,OAA1C;EAcA;EACA;;;EACA,SAASuI,UAAT;EACD;;AAED,EAAO,SAASC,cAAT,GAAuC;EAC5C,QAAMD,UAAU,GAAGD,iBAAiB,EAApC,CAD4C;;EAG5C,SAAOC,UAAU,CAACC,cAAX,EAAP;EACD;AAED,EAAO,SAASC,eAAT,CAA4BC,YAA5B,EAAsD;EAC3D,QAAMH,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;EAG3D,SAAOC,UAAU,CAACE,eAAX,CAA2BC,YAA3B,CAAP;EACD;AAED,EAAO,SAASC,UAAT,CAAuBC,OAAvB,EAAoD;EACzD,QAAML,UAAU,GAAGD,iBAAiB,EAApC;;EAoBA,SAAOC,UAAU,CAACI,UAAX,CAAsBC,OAAtB,CAAP;EACD;AAED,EAAO,SAASC,QAAT,CACLC,YADK,EAE+B;EACpC,QAAMP,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACM,QAAX,CAAoBC,YAApB,CAAP;EACD;AAED,EAAO,SAASC,UAAT,CACLC,OADK,EAELC,UAFK,EAGLC,IAHK,EAIa;EAClB,QAAMX,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACQ,UAAX,CAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,IAA3C,CAAP;EACD;AAED,EAAO,SAASC,MAAT,CAAmBC,YAAnB,EAAoD;EACzD,QAAMb,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACY,MAAX,CAAkBC,YAAlB,CAAP;EACD;AAED,EAAO,SAASC,SAAT,CACLC,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACc,SAAX,CAAqBC,MAArB,EAA6BC,IAA7B,CAAP;EACD;AAED,EAAO,SAASC,kBAAT,CACLF,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACiB,kBAAX,CAA8BF,MAA9B,EAAsCC,IAAtC,CAAP;EACD;AAED,EAAO,SAASE,eAAT,CACLH,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACkB,eAAX,CAA2BH,MAA3B,EAAmCC,IAAnC,CAAP;EACD;AAED,EAAO,SAASG,WAAT,CACLrL,QADK,EAELkL,IAFK,EAGF;EACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACmB,WAAX,CAAuBrL,QAAvB,EAAiCkL,IAAjC,CAAP;EACD;AAED,EAAO,SAASI,OAAT,CACLL,MADK,EAELC,IAFK,EAGF;EACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACoB,OAAX,CAAmBL,MAAnB,EAA2BC,IAA3B,CAAP;EACD;AAED,EAAO,SAASK,mBAAT,CACLnJ,GADK,EAEL6I,MAFK,EAGLC,IAHK,EAIC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACqB,mBAAX,CAA+BnJ,GAA/B,EAAoC6I,MAApC,EAA4CC,IAA5C,CAAP;EACD;AAED,EAAO,SAASM,aAAT,CACL7E,KADK,EAEL8E,WAFK,EAGC;AACN,EAID;AAED,EAEO,SAASC,aAAT,GAGL;EACA,QAAMxB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACwB,aAAX,EAAP;EACD;AAED,EAAO,SAASC,gBAAT,CAA6BhF,KAA7B,EAA0C;EAC/C,QAAMuD,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACyB,gBAAX,CAA4BhF,KAA5B,CAAP;EACD;AAED,EAAO,SAASiF,KAAT,GAAyB;EAC9B,QAAM1B,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAAC0B,KAAX,EAAP;EACD;AAED,EASO,SAASC,oBAAT,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,EAIF;EACH,QAAM9B,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAAC2B,oBAAX,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,CAAP;EAKD;AAED,EAAO,SAASC,eAAT,GAAsD;EAC3D,QAAM/B,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;EAG3D,SAAOC,UAAU,CAAC+B,eAAX,EAAP;EACD;;EC/LD;;;;EAIA,MAAMC,uBAAoC,GAAG;EAC3CC,EAAAA,UAAU,EAAE;EAD+B,CAA7C;;EChBO,MAAMC,eAEZ,GAAG,EAFG;;ECaP,MAAMC,oBAAoB,GAAG;EAC3BrC,EAAAA,sBAD2B;EAE3BkC,EAAAA,uBAF2B;EAG3BjK,EAAAA;EAH2B,CAA7B;;AAWA,EAAyB;EACvBoK,EAAAA,oBAAoB,CAACD,eAArB,GAAuCA,eAAvC;EACD;;ECLD,MAAMA,iBAAe,GAAGC,oBAAoB,CAACD,eAA7C;AAEA,EAAO,SAASE,mBAAT,CACLC,UADK,EAEL1E,YAFK,EAGkB;AACvB;EAGA,MAAI2E,UAAU,GAAG,IAAjB;;EACA,MAAI,CAACJ,iBAAe,CAACG,UAAD,CAApB,EAAkC;EAChCC,IAAAA,UAAU,GAAG,KAAb;EACA,UAAM5L,OAA8B,GAAG;EACrCqC,MAAAA,QAAQ,EAAErE,yBAD2B;EAGrC;EACA;EACA;EACA;EACA;EACAkJ,MAAAA,aAAa,EAAED,YARsB;EASrCE,MAAAA,cAAc,EAAEF,YATqB;EAWrCM,MAAAA,aAAa,EAAEN,YAXsB;EAarC;EACA;EACAG,MAAAA,YAAY,EAAE,CAfuB;EAgBrC;EACAC,MAAAA,QAAQ,EAAG,IAjB0B;EAkBrCC,MAAAA,QAAQ,EAAG,IAlB0B;EAmBrCE,MAAAA,WAAW,EAAEmE;EAnBwB,KAAvC;EAsBA3L,IAAAA,OAAO,CAACqH,QAAR,GAAmB;EACjBhF,MAAAA,QAAQ,EAAEvE,mBADO;EAEjB2J,MAAAA,QAAQ,EAAEzH;EAFO,KAAnB;;EA0BAwL,IAAAA,iBAAe,CAACG,UAAD,CAAf,GAA8B3L,OAA9B;EACD;;EAED,QAAMA,OAAO,GAAGwL,iBAAe,CAACG,UAAD,CAA/B;;EACA,MAAI3L,OAAO,CAACuH,aAAR,KAA0B9I,6CAA9B,EAA6E;EAC3EuB,IAAAA,OAAO,CAACuH,aAAR,GAAwBN,YAAxB;;EACA,QACEjH,OAAO,CAACkH,aAAR,KAA0BzI,6CAD5B,EAEE;EACAuB,MAAAA,OAAO,CAACkH,aAAR,GAAwBD,YAAxB;EACD;;EACD,QACEjH,OAAO,CAACmH,cAAR,KAA2B1I,6CAD7B,EAEE;EACAuB,MAAAA,OAAO,CAACmH,cAAR,GAAyBF,YAAzB;EACD;EACF,GAZD,MAYO,IAAI2E,UAAJ,EAAgB;EACrB,UAAM,IAAItL,KAAJ,qBAA4BqL,UAA5B,sBAAN;EACD;;EACD,SAAO3L,OAAP;EACD;;EC/FM,MAAM6L,wBAAwB,GAAG,KAAjC;AACP,EACO,MAAMC,eAAe,GAAG,KAAxB;AACP,EACO,MAAMC,YAAY,GAAG,CAArB;;ECGA,SAAS1G,IAAT,CAAc2G,IAAd,EAA0BC,IAA1B,EAA4C;EACjD,QAAMxH,KAAK,GAAGuH,IAAI,CAACnJ,MAAnB;EACAmJ,EAAAA,IAAI,CAAC3G,IAAL,CAAU4G,IAAV;EACAC,EAAAA,MAAM,CAACF,IAAD,EAAOC,IAAP,EAAaxH,KAAb,CAAN;EACD;AAED,EAAO,SAAS0H,IAAT,CAAcH,IAAd,EAAuC;EAC5C,SAAOA,IAAI,CAACnJ,MAAL,KAAgB,CAAhB,GAAoB,IAApB,GAA2BmJ,IAAI,CAAC,CAAD,CAAtC;EACD;AAED,EAAO,SAASI,GAAT,CAAaJ,IAAb,EAAsC;EAC3C,MAAIA,IAAI,CAACnJ,MAAL,KAAgB,CAApB,EAAuB;EACrB,WAAO,IAAP;EACD;;EACD,QAAMwJ,KAAK,GAAGL,IAAI,CAAC,CAAD,CAAlB;EACA,QAAMM,IAAI,GAAGN,IAAI,CAACI,GAAL,EAAb;;EACA,MAAIE,IAAI,KAAKD,KAAb,EAAoB;EAClBL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUM,IAAV;EACAC,IAAAA,QAAQ,CAACP,IAAD,EAAOM,IAAP,EAAa,CAAb,CAAR;EACD;;EACD,SAAOD,KAAP;EACD;;EAED,SAASH,MAAT,CAAgBF,IAAhB,EAAsBC,IAAtB,EAA4BlJ,CAA5B,EAA+B;EAC7B,MAAI0B,KAAK,GAAG1B,CAAZ;;EACA,SAAO0B,KAAK,GAAG,CAAf,EAAkB;EAChB,UAAM+H,WAAW,GAAI/H,KAAK,GAAG,CAAT,KAAgB,CAApC;EACA,UAAMgI,MAAM,GAAGT,IAAI,CAACQ,WAAD,CAAnB;;EACA,QAAIrD,OAAO,CAACsD,MAAD,EAASR,IAAT,CAAP,GAAwB,CAA5B,EAA+B;EAC7B;EACAD,MAAAA,IAAI,CAACQ,WAAD,CAAJ,GAAoBP,IAApB;EACAD,MAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcgI,MAAd;EACAhI,MAAAA,KAAK,GAAG+H,WAAR;EACD,KALD,MAKO;EACL;EACA;EACD;EACF;EACF;;EAED,SAASD,QAAT,CAAkBP,IAAlB,EAAwBC,IAAxB,EAA8BlJ,CAA9B,EAAiC;EAC/B,MAAI0B,KAAK,GAAG1B,CAAZ;EACA,QAAMF,MAAM,GAAGmJ,IAAI,CAACnJ,MAApB;EACA,QAAM6J,UAAU,GAAG7J,MAAM,KAAK,CAA9B;;EACA,SAAO4B,KAAK,GAAGiI,UAAf,EAA2B;EACzB,UAAMC,SAAS,GAAG,CAAClI,KAAK,GAAG,CAAT,IAAc,CAAd,GAAkB,CAApC;EACA,UAAMmI,IAAI,GAAGZ,IAAI,CAACW,SAAD,CAAjB;EACA,UAAME,UAAU,GAAGF,SAAS,GAAG,CAA/B;EACA,UAAMG,KAAK,GAAGd,IAAI,CAACa,UAAD,CAAlB,CAJyB;;EAOzB,QAAI1D,OAAO,CAACyD,IAAD,EAAOX,IAAP,CAAP,GAAsB,CAA1B,EAA6B;EAC3B,UAAIY,UAAU,GAAGhK,MAAb,IAAuBsG,OAAO,CAAC2D,KAAD,EAAQF,IAAR,CAAP,GAAuB,CAAlD,EAAqD;EACnDZ,QAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcqI,KAAd;EACAd,QAAAA,IAAI,CAACa,UAAD,CAAJ,GAAmBZ,IAAnB;EACAxH,QAAAA,KAAK,GAAGoI,UAAR;EACD,OAJD,MAIO;EACLb,QAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcmI,IAAd;EACAZ,QAAAA,IAAI,CAACW,SAAD,CAAJ,GAAkBV,IAAlB;EACAxH,QAAAA,KAAK,GAAGkI,SAAR;EACD;EACF,KAVD,MAUO,IAAIE,UAAU,GAAGhK,MAAb,IAAuBsG,OAAO,CAAC2D,KAAD,EAAQb,IAAR,CAAP,GAAuB,CAAlD,EAAqD;EAC1DD,MAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcqI,KAAd;EACAd,MAAAA,IAAI,CAACa,UAAD,CAAJ,GAAmBZ,IAAnB;EACAxH,MAAAA,KAAK,GAAGoI,UAAR;EACD,KAJM,MAIA;EACL;EACA;EACD;EACF;EACF;;EAED,SAAS1D,OAAT,CAAiBhI,CAAjB,EAAoB4L,CAApB,EAAuB;EACrB;EACA,QAAMC,IAAI,GAAG7L,CAAC,CAAC8L,SAAF,GAAcF,CAAC,CAACE,SAA7B;EACA,SAAOD,IAAI,KAAK,CAAT,GAAaA,IAAb,GAAoB7L,CAAC,CAAC+L,EAAF,GAAOH,CAAC,CAACG,EAApC;EACD;;EChFD;AACA,EACO,MAAMC,iBAAiB,GAAG,CAA1B;AACP,EAAO,MAAMC,oBAAoB,GAAG,CAA7B;AACP,EAAO,MAAMC,cAAc,GAAG,CAAvB;AACP,EAAO,MAAMC,WAAW,GAAG,CAApB;AACP,EAAO,MAAMC,YAAY,GAAG,CAArB;;ECwGA,SAASC,eAAT,CACLC,IADK,EAMLC,EANK,EAOL;AACA,EAKD;;EC9HD;AAEA,EAiCA,IAAIC,cAAJ;EACA,MAAMC,iBAAiB,GACrB,OAAOC,WAAP,KAAuB,QAAvB,IAAmC,OAAOA,WAAW,CAACC,GAAnB,KAA2B,UADhE;;EAGA,IAAIF,iBAAJ,EAAuB;EACrB,QAAMG,gBAAgB,GAAGF,WAAzB;;EACAF,EAAAA,cAAc,GAAG,MAAMI,gBAAgB,CAACD,GAAjB,EAAvB;EACD,CAHD,MAGO;EACL,QAAME,SAAS,GAAGC,IAAlB;EACA,QAAMC,WAAW,GAAGF,SAAS,CAACF,GAAV,EAApB;;EACAH,EAAAA,cAAc,GAAG,MAAMK,SAAS,CAACF,GAAV,KAAkBI,WAAzC;EACD;EAGD;EACA;;;EACA,IAAIC,iBAAiB,GAAG,UAAxB;;EAGA,IAAIC,0BAA0B,GAAG,CAAC,CAAlC;;EAEA,IAAIC,8BAA8B,GAAG,GAArC;EACA,IAAIC,uBAAuB,GAAG,IAA9B;EACA,IAAIC,oBAAoB,GAAG,KAA3B;;EAEA,IAAIC,qBAAqB,GAAGL,iBAA5B;;EAGA,IAAIM,SAAS,GAAG,EAAhB;EACA,IAAIC,UAAU,GAAG,EAAjB;;EAGA,IAAIC,aAAa,GAAG,CAApB;EAKA,IAAIC,WAAW,GAAG,IAAlB;EACA,IAAIC,oBAAoB,GAAGxB,cAA3B;;EAGA,IAAIyB,gBAAgB,GAAG,KAAvB;EAEA,IAAIC,uBAAuB,GAAG,KAA9B;EACA,IAAIC,sBAAsB,GAAG,KAA7B;;EAGA,MAAMC,eAAe,GAAG,OAAOC,UAAP,KAAsB,UAAtB,GAAmCA,UAAnC,GAAgD,IAAxE;EACA,MAAMC,iBAAiB,GACrB,OAAOC,YAAP,KAAwB,UAAxB,GAAqCA,YAArC,GAAoD,IADtD;EAEA,MAAMC,iBAAiB,GACrB,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqD,IADvD;;EAGA,MAAMC,cAAc,GAClB,OAAOC,SAAP,KAAqB,WAArB,IACAA,SAAS,CAACC,UAAV,KAAyB5N,SADzB,IAEA2N,SAAS,CAACC,UAAV,CAAqBF,cAArB,KAAwC1N,SAFxC,GAGI2N,SAAS,CAACC,UAAV,CAAqBF,cAArB,CAAoCpM,IAApC,CAAyCqM,SAAS,CAACC,UAAnD,CAHJ,GAII,IALN;AAOA;EAEA,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;EAClC;EACA,MAAIC,KAAK,GAAGzD,IAAI,CAACuC,UAAD,CAAhB;;EACA,SAAOkB,KAAK,KAAK,IAAjB,EAAuB;EACrB,QAAIA,KAAK,CAACxQ,QAAN,KAAmB,IAAvB,EAA6B;EAC3B;EACAgN,MAAAA,GAAG,CAACsC,UAAD,CAAH;EACD,KAHD,MAGO,IAAIkB,KAAK,CAACC,SAAN,IAAmBF,WAAvB,EAAoC;EACzC;EACAvD,MAAAA,GAAG,CAACsC,UAAD,CAAH;EACAkB,MAAAA,KAAK,CAAC3C,SAAN,GAAkB2C,KAAK,CAACE,cAAxB;EACAzK,MAAAA,IAAI,CAACoJ,SAAD,EAAYmB,KAAZ,CAAJ;EAKD,KATM,MASA;EACL;EACA;EACD;;EACDA,IAAAA,KAAK,GAAGzD,IAAI,CAACuC,UAAD,CAAZ;EACD;EACF;;EAED,SAASqB,aAAT,CAAuBJ,WAAvB,EAAoC;EAClCX,EAAAA,sBAAsB,GAAG,KAAzB;EACAU,EAAAA,aAAa,CAACC,WAAD,CAAb;;EAEA,MAAI,CAACZ,uBAAL,EAA8B;EAC5B,QAAI5C,IAAI,CAACsC,SAAD,CAAJ,KAAoB,IAAxB,EAA8B;EAC5BM,MAAAA,uBAAuB,GAAG,IAA1B;EACAiB,MAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD,KAHD,MAGO;EACL,YAAMC,UAAU,GAAG/D,IAAI,CAACuC,UAAD,CAAvB;;EACA,UAAIwB,UAAU,KAAK,IAAnB,EAAyB;EACvBC,QAAAA,kBAAkB,CAACJ,aAAD,EAAgBG,UAAU,CAACL,SAAX,GAAuBF,WAAvC,CAAlB;EACD;EACF;EACF;EACF;;EAED,SAASM,SAAT,CAAmBG,gBAAnB,EAAqClC,WAArC,EAAkD;AAChD;;EAKAa,EAAAA,uBAAuB,GAAG,KAA1B;;EACA,MAAIC,sBAAJ,EAA4B;EAC1B;EACAA,IAAAA,sBAAsB,GAAG,KAAzB;EACAqB,IAAAA,iBAAiB;EAClB;;EAEDvB,EAAAA,gBAAgB,GAAG,IAAnB;EACA,QAAMwB,qBAAqB,GAAGzB,oBAA9B;;EACA,MAAI;EACF,QAAI/C,eAAJ,EAAqB;EACnB,UAAI;EACF,eAAOyE,QAAQ,CAACH,gBAAD,EAAmBlC,WAAnB,CAAf;EACD,OAFD,CAEE,OAAO3F,KAAP,EAAc;EACd,YAAIqG,WAAW,KAAK,IAApB,EAA0B;EACxB,gBAAMe,WAAW,GAAGhC,cAAc,EAAlC;EACAH,UAAAA,eAAe,CAACoB,WAAD,EAAce,WAAd,CAAf;EACAf,UAAAA,WAAW,CAAC4B,QAAZ,GAAuB,KAAvB;EACD;;EACD,cAAMjI,KAAN;EACD;EACF,KAXD,MAWO;EACL;EACA,aAAOgI,QAAQ,CAACH,gBAAD,EAAmBlC,WAAnB,CAAf;EACD;EACF,GAhBD,SAgBU;EACRU,IAAAA,WAAW,GAAG,IAAd;EACAC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACAxB,IAAAA,gBAAgB,GAAG,KAAnB;EAKD;EACF;;EAED,SAASyB,QAAT,CAAkBH,gBAAlB,EAAoClC,WAApC,EAAiD;EAC/C,MAAIyB,WAAW,GAAGzB,WAAlB;EACAwB,EAAAA,aAAa,CAACC,WAAD,CAAb;EACAf,EAAAA,WAAW,GAAGzC,IAAI,CAACsC,SAAD,CAAlB;;EACA,SACEG,WAAW,KAAK,IAAhB,IACA,EAAE/C,wBAAwB,CAA1B,CAFF,EAGE;EACA,QACE+C,WAAW,CAACkB,cAAZ,GAA6BH,WAA7B,KACC,CAACS,gBAAD,IAAqBK,iBAAiB,EADvC,CADF,EAGE;EACA;EACA;EACD;;EACD,UAAMrR,QAAQ,GAAGwP,WAAW,CAACxP,QAA7B;;EACA,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;EAClCwP,MAAAA,WAAW,CAACxP,QAAZ,GAAuB,IAAvB;EACAyP,MAAAA,oBAAoB,GAAGD,WAAW,CAAC8B,aAAnC;EACA,YAAMC,sBAAsB,GAAG/B,WAAW,CAACkB,cAAZ,IAA8BH,WAA7D;;EAIA,YAAMiB,oBAAoB,GAAGxR,QAAQ,CAACuR,sBAAD,CAArC;EACAhB,MAAAA,WAAW,GAAGhC,cAAc,EAA5B;;EACA,UAAI,OAAOiD,oBAAP,KAAgC,UAApC,EAAgD;EAC9ChC,QAAAA,WAAW,CAACxP,QAAZ,GAAuBwR,oBAAvB;EAID,OALD,MAKO;AACL;EAIA,YAAIhC,WAAW,KAAKzC,IAAI,CAACsC,SAAD,CAAxB,EAAqC;EACnCrC,UAAAA,GAAG,CAACqC,SAAD,CAAH;EACD;EACF;;EACDiB,MAAAA,aAAa,CAACC,WAAD,CAAb;EACD,KAxBD,MAwBO;EACLvD,MAAAA,GAAG,CAACqC,SAAD,CAAH;EACD;;EACDG,IAAAA,WAAW,GAAGzC,IAAI,CAACsC,SAAD,CAAlB;EACD,GA5C8C;;;EA8C/C,MAAIG,WAAW,KAAK,IAApB,EAA0B;EACxB,WAAO,IAAP;EACD,GAFD,MAEO;EACL,UAAMsB,UAAU,GAAG/D,IAAI,CAACuC,UAAD,CAAvB;;EACA,QAAIwB,UAAU,KAAK,IAAnB,EAAyB;EACvBC,MAAAA,kBAAkB,CAACJ,aAAD,EAAgBG,UAAU,CAACL,SAAX,GAAuBF,WAAvC,CAAlB;EACD;;EACD,WAAO,KAAP;EACD;EACF;;EAED,SAASkB,wBAAT,CAAkCH,aAAlC,EAAiDI,YAAjD,EAA+D;EAC7D,UAAQJ,aAAR;EACE,SAAKvD,iBAAL;EACA,SAAKC,oBAAL;EACA,SAAKC,cAAL;EACA,SAAKC,WAAL;EACA,SAAKC,YAAL;EACE;;EACF;EACEmD,MAAAA,aAAa,GAAGrD,cAAhB;EARJ;;EAWA,MAAIiD,qBAAqB,GAAGzB,oBAA5B;EACAA,EAAAA,oBAAoB,GAAG6B,aAAvB;;EAEA,MAAI;EACF,WAAOI,YAAY,EAAnB;EACD,GAFD,SAEU;EACRjC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF;;EAED,SAASS,aAAT,CAAuBD,YAAvB,EAAqC;EACnC,MAAIJ,aAAJ;;EACA,UAAQ7B,oBAAR;EACE,SAAK1B,iBAAL;EACA,SAAKC,oBAAL;EACA,SAAKC,cAAL;EACE;EACAqD,MAAAA,aAAa,GAAGrD,cAAhB;EACA;;EACF;EACE;EACAqD,MAAAA,aAAa,GAAG7B,oBAAhB;EACA;EAVJ;;EAaA,MAAIyB,qBAAqB,GAAGzB,oBAA5B;EACAA,EAAAA,oBAAoB,GAAG6B,aAAvB;;EAEA,MAAI;EACF,WAAOI,YAAY,EAAnB;EACD,GAFD,SAEU;EACRjC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF;;EAED,SAASU,qBAAT,CAA+B5R,QAA/B,EAAyC;EACvC,MAAI6R,mBAAmB,GAAGpC,oBAA1B;EACA,SAAO,YAAW;EAChB;EACA,QAAIyB,qBAAqB,GAAGzB,oBAA5B;EACAA,IAAAA,oBAAoB,GAAGoC,mBAAvB;;EAEA,QAAI;EACF,aAAO7R,QAAQ,CAACyH,KAAT,CAAe,IAAf,EAAqBjE,SAArB,CAAP;EACD,KAFD,SAEU;EACRiM,MAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF,GAVD;EAWD;;EAED,SAASY,yBAAT,CAAmCR,aAAnC,EAAkDtR,QAAlD,EAA4D+R,OAA5D,EAAqE;EACnE,MAAIxB,WAAW,GAAGhC,cAAc,EAAhC;EAEA,MAAIkC,SAAJ;;EACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA/C,EAAqD;EACnD,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;;EACA,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAAzC,EAA4C;EAC1CvB,MAAAA,SAAS,GAAGF,WAAW,GAAGyB,KAA1B;EACD,KAFD,MAEO;EACLvB,MAAAA,SAAS,GAAGF,WAAZ;EACD;EACF,GAPD,MAOO;EACLE,IAAAA,SAAS,GAAGF,WAAZ;EACD;;EAED,MAAI0B,OAAJ;;EACA,UAAQX,aAAR;EACE,SAAKvD,iBAAL;EACEkE,MAAAA,OAAO,GAAGjD,0BAAV;EACA;;EACF,SAAKhB,oBAAL;EACEiE,MAAAA,OAAO,GAAGhD,8BAAV;EACA;;EACF,SAAKd,YAAL;EACE8D,MAAAA,OAAO,GAAG7C,qBAAV;EACA;;EACF,SAAKlB,WAAL;EACE+D,MAAAA,OAAO,GAAG9C,oBAAV;EACA;;EACF,SAAKlB,cAAL;EACA;EACEgE,MAAAA,OAAO,GAAG/C,uBAAV;EACA;EAhBJ;;EAmBA,MAAIwB,cAAc,GAAGD,SAAS,GAAGwB,OAAjC;EAEA,MAAIC,OAAO,GAAG;EACZpE,IAAAA,EAAE,EAAEyB,aAAa,EADL;EAEZvP,IAAAA,QAFY;EAGZsR,IAAAA,aAHY;EAIZb,IAAAA,SAJY;EAKZC,IAAAA,cALY;EAMZ7C,IAAAA,SAAS,EAAE,CAAC;EANA,GAAd;;EAYA,MAAI4C,SAAS,GAAGF,WAAhB,EAA6B;EAC3B;EACA2B,IAAAA,OAAO,CAACrE,SAAR,GAAoB4C,SAApB;EACAxK,IAAAA,IAAI,CAACqJ,UAAD,EAAa4C,OAAb,CAAJ;;EACA,QAAInF,IAAI,CAACsC,SAAD,CAAJ,KAAoB,IAApB,IAA4B6C,OAAO,KAAKnF,IAAI,CAACuC,UAAD,CAAhD,EAA8D;EAC5D;EACA,UAAIM,sBAAJ,EAA4B;EAC1B;EACAqB,QAAAA,iBAAiB;EAClB,OAHD,MAGO;EACLrB,QAAAA,sBAAsB,GAAG,IAAzB;EACD,OAP2D;;;EAS5DmB,MAAAA,kBAAkB,CAACJ,aAAD,EAAgBF,SAAS,GAAGF,WAA5B,CAAlB;EACD;EACF,GAfD,MAeO;EACL2B,IAAAA,OAAO,CAACrE,SAAR,GAAoB6C,cAApB;EACAzK,IAAAA,IAAI,CAACoJ,SAAD,EAAY6C,OAAZ,CAAJ;EAMA;;;EACA,QAAI,CAACvC,uBAAD,IAA4B,CAACD,gBAAjC,EAAmD;EACjDC,MAAAA,uBAAuB,GAAG,IAA1B;EACAiB,MAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD;EACF;;EAED,SAAOqB,OAAP;EACD;;EAED,SAASC,uBAAT,GAAmC;AACjCC,EACD;;EAED,SAASC,0BAAT,GAAsC;AACpCD;EACA,MAAI,CAACzC,uBAAD,IAA4B,CAACD,gBAAjC,EAAmD;EACjDC,IAAAA,uBAAuB,GAAG,IAA1B;EACAiB,IAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD;EACF;;EAED,SAASyB,6BAAT,GAAyC;EACvC,SAAOvF,IAAI,CAACsC,SAAD,CAAX;EACD;;EAED,SAASkD,uBAAT,CAAiClE,IAAjC,EAAuC;AACrC,EASA;EACA;;;EACAA,EAAAA,IAAI,CAACrO,QAAL,GAAgB,IAAhB;EACD;;EAED,SAASwS,gCAAT,GAA4C;EAC1C,SAAO/C,oBAAP;EACD;;EAED,IAAIgD,oBAAoB,GAAG,KAA3B;EACA,IAAIC,qBAAqB,GAAG,IAA5B;EACA,IAAIC,aAAa,GAAG,CAAC,CAArB;EAGA;EACA;EACA;;EACA,IAAIC,aAAa,GAAGjG,YAApB;AACA,EAEA,IAAI8D,SAAS,GAAG,CAAC,CAAjB;AAEA;EAEA,SAASY,iBAAT,GAA6B;EAC3B,QAAMwB,WAAW,GAAGtE,cAAc,KAAKkC,SAAvC;;EACA,MAAIoC,WAAW,GAAGD,aAAlB,EAAiC;EAC/B;EACA;EACA,WAAO,KAAP;EACD,GAN0B;AAS3B;;EAiCA,SAAO,IAAP;EACD;;EAED,SAASE,YAAT,GAAwB;AACtB;EAUD;;EAED,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAC3B,MAAIA,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,GAArB,EAA0B;EACxB;EACAC,IAAAA,OAAO,CAAC,OAAD,CAAP,CACE,4DACE,0DAFJ;EAIA;EACD;;EACD,MAAID,GAAG,GAAG,CAAV,EAAa;EACXJ,IAAAA,aAAa,GAAGM,IAAI,CAACC,KAAL,CAAW,OAAOH,GAAlB,CAAhB;EACD,GAFD,MAEO;EACL;EACAJ,IAAAA,aAAa,GAAGjG,YAAhB;EACD;EACF;;EAED,MAAMyG,wBAAwB,GAAG,MAAM;EACrC,MAAIV,qBAAqB,KAAK,IAA9B,EAAoC;EAClC,UAAMnC,WAAW,GAAGhC,cAAc,EAAlC,CADkC;EAGlC;;EACAkC,IAAAA,SAAS,GAAGF,WAAZ;EACA,UAAMS,gBAAgB,GAAG,IAAzB,CALkC;EAQlC;EACA;EACA;EACA;EACA;;EACA,QAAIqC,WAAW,GAAG,IAAlB;;EACA,QAAI;EACFA,MAAAA,WAAW,GAAGX,qBAAqB,CAAC1B,gBAAD,EAAmBT,WAAnB,CAAnC;EACD,KAFD,SAEU;EACR,UAAI8C,WAAJ,EAAiB;EACf;EACA;EACAC,QAAAA,gCAAgC;EACjC,OAJD,MAIO;EACLb,QAAAA,oBAAoB,GAAG,KAAvB;EACAC,QAAAA,qBAAqB,GAAG,IAAxB;EACD;EACF;EACF,GA1BD,MA0BO;EACLD,IAAAA,oBAAoB,GAAG,KAAvB;EACD,GA7BoC;AA+BrC,EAED,CAjCD;;EAmCA,IAAIa,gCAAJ;;EACA,IAAI,OAAOrD,iBAAP,KAA6B,UAAjC,EAA6C;EAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAqD,EAAAA,gCAAgC,GAAG,MAAM;EACvCrD,IAAAA,iBAAiB,CAACmD,wBAAD,CAAjB;EACD,GAFD;EAGD,CAfD,MAeO,IAAI,OAAOG,cAAP,KAA0B,WAA9B,EAA2C;EAChD;EACA;EACA,QAAMC,OAAO,GAAG,IAAID,cAAJ,EAAhB;EACA,QAAME,IAAI,GAAGD,OAAO,CAACE,KAArB;EACAF,EAAAA,OAAO,CAACG,KAAR,CAAcC,SAAd,GAA0BR,wBAA1B;;EACAE,EAAAA,gCAAgC,GAAG,MAAM;EACvCG,IAAAA,IAAI,CAACI,WAAL,CAAiB,IAAjB;EACD,GAFD;EAGD,CATM,MASA;EACL;EACAP,EAAAA,gCAAgC,GAAG,MAAM;EACvCzD,IAAAA,eAAe,CAACuD,wBAAD,EAA2B,CAA3B,CAAf;EACD,GAFD;EAGD;;EAED,SAASxC,mBAAT,CAA6B5Q,QAA7B,EAAuC;EACrC0S,EAAAA,qBAAqB,GAAG1S,QAAxB;;EACA,MAAI,CAACyS,oBAAL,EAA2B;EACzBA,IAAAA,oBAAoB,GAAG,IAAvB;EACAa,IAAAA,gCAAgC;EACjC;EACF;;EAED,SAASvC,kBAAT,CAA4B/Q,QAA5B,EAAsCsO,EAAtC,EAA0C;EACxCqE,EAAAA,aAAa,GAAG9C,eAAe,CAAC,MAAM;EACpC7P,IAAAA,QAAQ,CAACuO,cAAc,EAAf,CAAR;EACD,GAF8B,EAE5BD,EAF4B,CAA/B;EAGD;;EAED,SAAS2C,iBAAT,GAA6B;EAC3BlB,EAAAA,iBAAiB,CAAC4C,aAAD,CAAjB;EACAA,EAAAA,aAAa,GAAG,CAAC,CAAjB;EACD;;EAED,MAAMmB,qBAAqB,GAAGhB,YAA9B;AAEA,EAqBO,MAAMiB,kBAAkB,GAAGrH,CAK9B,IALG;;;;;;;;;;;;;;;;;;;;;;;;;;;EC/lBP,MAAML,sBAAoB,GAAG;EAC3BrC,EAAAA,sBAD2B;EAE3B/H,EAAAA,iBAF2B;EAG3BiK,EAAAA,uBAH2B;EAK3B;EACA;EACA;EACA;EACA;EACA8H,EAAAA;EAV2B,CAA7B;;AAkBA,EAAyB;EACvB3H,EAAAA,sBAAoB,CAACD,eAArB,GAAuCA,eAAvC;EACD;;ECvBM,SAAS6H,eAAT,CACLC,KADK,EAELnC,OAFK,EAGL;EACA,QAAMoC,cAAc,GAAGjI,uBAAuB,CAACC,UAA/C;EACAD,EAAAA,uBAAuB,CAACC,UAAxB,GAAqC,EAArC;AACA;EAaA,MAAI;EACF+H,IAAAA,KAAK;EACN,GAFD,SAEU;EACRhI,IAAAA,uBAAuB,CAACC,UAAxB,GAAqCgI,cAArC;EAeD;EACF;;ECnCM,SAASC,GAAT,CAAgBpU,QAAhB,EAA8D;EACnE,EAsIO;EACL,UAAM,IAAIkB,KAAJ,CAAU,0DAAV,CAAN;EACD;EACF;;QCpFKiC,eAAa,GAAGkR,CAAwCC;AAC9D,QAAMhQ,cAAY,GAAG+P,CAAuCE;AAC5D,QAAM1Q,eAAa,GAAGwQ,CAAwCG;AAE9D,QAAMC,QAAQ,GAAG;EACfC,OAAAA,WADe;EAEfC,WAAAA,eAFe;EAGfxN,SAAAA,aAHe;EAIfO,EAAAA,OAJe;EAKfkN,QAAAA;EALe,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/react/umd/react.profiling.min.js b/node_modules/react/umd/react.profiling.min.js
new file mode 100644
index 0000000..97c11c2
--- /dev/null
+++ b/node_modules/react/umd/react.profiling.min.js
@@ -0,0 +1,1681 @@
+(function (global, factory) {
+  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
+  typeof define === 'function' && define.amd ? define(['exports'], factory) :
+  (global = global || self, factory(global.React = {}));
+}(this, (function (exports) { 'use strict';
+
+  // TODO: this is special because it gets imported during build.
+  //
+  // TODO: 18.0.0 has not been released to NPM;
+  // It exists as a placeholder so that DevTools can support work tag changes between releases.
+  // When we next publish a release, update the matching TODO in backend/renderer.js
+  // TODO: This module is used both by the release scripts and to expose a version
+  // at runtime. We should instead inject the version number as part of the build
+  // process, and use the ReactVersions.js module as the single source of truth.
+  var ReactVersion = '18.2.0';
+
+  // ATTENTION
+  // When adding new symbols to this file,
+  // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
+  // The Symbol used to tag the ReactElement-like types.
+  const REACT_ELEMENT_TYPE = Symbol.for('react.element');
+  const REACT_PORTAL_TYPE = Symbol.for('react.portal');
+  const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
+  const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
+  const REACT_PROFILER_TYPE = Symbol.for('react.profiler');
+  const REACT_PROVIDER_TYPE = Symbol.for('react.provider');
+  const REACT_CONTEXT_TYPE = Symbol.for('react.context');
+  const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
+  const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
+  const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
+  const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
+  const REACT_MEMO_TYPE = Symbol.for('react.memo');
+  const REACT_LAZY_TYPE = Symbol.for('react.lazy');
+  const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
+  const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
+  const REACT_CACHE_TYPE = Symbol.for('react.cache');
+  const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');
+  const MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+  const FAUX_ITERATOR_SYMBOL = '@@iterator';
+  function getIteratorFn(maybeIterable) {
+    if (maybeIterable === null || typeof maybeIterable !== 'object') {
+      return null;
+    }
+
+    const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
+
+    if (typeof maybeIterator === 'function') {
+      return maybeIterator;
+    }
+
+    return null;
+  }
+
+  /**
+   * This is the abstract API for an update queue.
+   */
+
+
+  const ReactNoopUpdateQueue = {
+    /**
+     * Checks whether or not this composite component is mounted.
+     * @param {ReactClass} publicInstance The instance we want to test.
+     * @return {boolean} True if mounted, false otherwise.
+     * @protected
+     * @final
+     */
+    isMounted: function (publicInstance) {
+      return false;
+    },
+
+    /**
+     * Forces an update. This should only be invoked when it is known with
+     * certainty that we are **not** in a DOM transaction.
+     *
+     * You may want to call this when you know that some deeper aspect of the
+     * component's state has changed but `setState` was not called.
+     *
+     * This will not invoke `shouldComponentUpdate`, but it will invoke
+     * `componentWillUpdate` and `componentDidUpdate`.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueForceUpdate: function (publicInstance, callback, callerName) {
+    },
+
+    /**
+     * Replaces all of the state. Always use this or `setState` to mutate state.
+     * You should treat `this.state` as immutable.
+     *
+     * There is no guarantee that `this.state` will be immediately updated, so
+     * accessing `this.state` after calling this method may return the old value.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} completeState Next state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} callerName name of the calling function in the public API.
+     * @internal
+     */
+    enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
+    },
+
+    /**
+     * Sets a subset of the state. This only exists because _pendingState is
+     * internal. This provides a merging strategy that is not available to deep
+     * properties which is confusing. TODO: Expose pendingState or don't use it
+     * during the merge.
+     *
+     * @param {ReactClass} publicInstance The instance that should rerender.
+     * @param {object} partialState Next partial state to be merged with state.
+     * @param {?function} callback Called after component is updated.
+     * @param {?string} Name of the calling function in the public API.
+     * @internal
+     */
+    enqueueSetState: function (publicInstance, partialState, callback, callerName) {
+    }
+  };
+
+  const assign = Object.assign;
+
+  const emptyObject = {};
+  /**
+   * Base class helpers for the updating state of a component.
+   */
+
+
+  function Component(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
+    // renderer.
+
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  Component.prototype.isReactComponent = {};
+  /**
+   * Sets a subset of the state. Always use this to mutate
+   * state. You should treat `this.state` as immutable.
+   *
+   * There is no guarantee that `this.state` will be immediately updated, so
+   * accessing `this.state` after calling this method may return the old value.
+   *
+   * There is no guarantee that calls to `setState` will run synchronously,
+   * as they may eventually be batched together.  You can provide an optional
+   * callback that will be executed when the call to setState is actually
+   * completed.
+   *
+   * When a function is provided to setState, it will be called at some point in
+   * the future (not synchronously). It will be called with the up to date
+   * component arguments (state, props, context). These values can be different
+   * from this.* because your function may be called after receiveProps but before
+   * shouldComponentUpdate, and this new state, props, and context will not yet be
+   * assigned to this.
+   *
+   * @param {object|function} partialState Next partial state or function to
+   *        produce next partial state to be merged with current state.
+   * @param {?function} callback Called after state is updated.
+   * @final
+   * @protected
+   */
+
+  Component.prototype.setState = function (partialState, callback) {
+    if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
+      throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
+    }
+
+    this.updater.enqueueSetState(this, partialState, callback, 'setState');
+  };
+  /**
+   * Forces an update. This should only be invoked when it is known with
+   * certainty that we are **not** in a DOM transaction.
+   *
+   * You may want to call this when you know that some deeper aspect of the
+   * component's state has changed but `setState` was not called.
+   *
+   * This will not invoke `shouldComponentUpdate`, but it will invoke
+   * `componentWillUpdate` and `componentDidUpdate`.
+   *
+   * @param {?function} callback Called after update is complete.
+   * @final
+   * @protected
+   */
+
+
+  Component.prototype.forceUpdate = function (callback) {
+    this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
+  };
+
+  function ComponentDummy() {}
+
+  ComponentDummy.prototype = Component.prototype;
+  /**
+   * Convenience component with default shallow equality check for sCU.
+   */
+
+  function PureComponent(props, context, updater) {
+    this.props = props;
+    this.context = context; // If a component has string refs, we will assign a different object later.
+
+    this.refs = emptyObject;
+    this.updater = updater || ReactNoopUpdateQueue;
+  }
+
+  const pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
+  pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
+
+  assign(pureComponentPrototype, Component.prototype);
+  pureComponentPrototype.isPureReactComponent = true;
+
+  // an immutable object with a single mutable value
+  function createRef() {
+    const refObject = {
+      current: null
+    };
+
+    return refObject;
+  }
+
+  const isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
+
+  function isArray(a) {
+    return isArrayImpl(a);
+  }
+
+  const hasOwnProperty = Object.prototype.hasOwnProperty;
+
+  /**
+   * Keeps track of the current owner.
+   *
+   * The current owner is the component who should own any components that are
+   * currently being constructed.
+   */
+  const ReactCurrentOwner = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  const RESERVED_PROPS = {
+    key: true,
+    ref: true,
+    __self: true,
+    __source: true
+  };
+
+  function hasValidRef(config) {
+
+    return config.ref !== undefined;
+  }
+
+  function hasValidKey(config) {
+
+    return config.key !== undefined;
+  }
+  /**
+   * Factory method to create a new React element. This no longer adheres to
+   * the class pattern, so do not use new to call it. Also, instanceof check
+   * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
+   * if something is a React Element.
+   *
+   * @param {*} type
+   * @param {*} props
+   * @param {*} key
+   * @param {string|object} ref
+   * @param {*} owner
+   * @param {*} self A *temporary* helper to detect places where `this` is
+   * different from the `owner` when React.createElement is called, so that we
+   * can warn. We want to get rid of owner and replace string `ref`s with arrow
+   * functions, and as long as `this` and owner are the same, there will be no
+   * change in behavior.
+   * @param {*} source An annotation object (added by a transpiler or otherwise)
+   * indicating filename, line number, and/or other information.
+   * @internal
+   */
+
+
+  const ReactElement = function (type, key, ref, self, source, owner, props) {
+    const element = {
+      // This tag allows us to uniquely identify this as a React Element
+      $$typeof: REACT_ELEMENT_TYPE,
+      // Built-in properties that belong on the element
+      type: type,
+      key: key,
+      ref: ref,
+      props: props,
+      // Record the component responsible for creating this element.
+      _owner: owner
+    };
+
+    return element;
+  };
+  /**
+   * Create and return a new ReactElement of the given type.
+   * See https://reactjs.org/docs/react-api.html#createelement
+   */
+
+  function createElement(type, config, children) {
+    let propName; // Reserved names are extracted
+
+    const props = {};
+    let key = null;
+    let ref = null;
+    let self = null;
+    let source = null;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        ref = config.ref;
+      }
+
+      if (hasValidKey(config)) {
+
+        key = '' + config.key;
+      }
+
+      self = config.__self === undefined ? null : config.__self;
+      source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          props[propName] = config[propName];
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    const childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      const childArray = Array(childrenLength);
+
+      for (let i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      props.children = childArray;
+    } // Resolve default props
+
+
+    if (type && type.defaultProps) {
+      const defaultProps = type.defaultProps;
+
+      for (propName in defaultProps) {
+        if (props[propName] === undefined) {
+          props[propName] = defaultProps[propName];
+        }
+      }
+    }
+
+    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
+  }
+  /**
+   * Return a function that produces ReactElements of a given type.
+   * See https://reactjs.org/docs/react-api.html#createfactory
+   */
+
+  function createFactory(type) {
+    const factory = createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be
+    // easily accessed on elements. E.g. `<Foo />.type === Foo`.
+    // This should not be named `constructor` since this may not be the function
+    // that created the element, and it may not even be a constructor.
+    // Legacy hook: remove it
+
+    factory.type = type;
+    return factory;
+  }
+  function cloneAndReplaceKey(oldElement, newKey) {
+    const newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
+    return newElement;
+  }
+  /**
+   * Clone and return a new ReactElement using element as the starting point.
+   * See https://reactjs.org/docs/react-api.html#cloneelement
+   */
+
+  function cloneElement(element, config, children) {
+    if (element === null || element === undefined) {
+      throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
+    }
+
+    let propName; // Original props are copied
+
+    const props = assign({}, element.props); // Reserved names are extracted
+
+    let key = element.key;
+    let ref = element.ref; // Self is preserved since the owner is preserved.
+
+    const self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
+    // transpiler, and the original source is probably a better indicator of the
+    // true owner.
+
+    const source = element._source; // Owner will be preserved, unless ref is overridden
+
+    let owner = element._owner;
+
+    if (config != null) {
+      if (hasValidRef(config)) {
+        // Silently steal the ref from the parent.
+        ref = config.ref;
+        owner = ReactCurrentOwner.current;
+      }
+
+      if (hasValidKey(config)) {
+
+        key = '' + config.key;
+      } // Remaining properties override existing props
+
+
+      let defaultProps;
+
+      if (element.type && element.type.defaultProps) {
+        defaultProps = element.type.defaultProps;
+      }
+
+      for (propName in config) {
+        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
+          if (config[propName] === undefined && defaultProps !== undefined) {
+            // Resolve default props
+            props[propName] = defaultProps[propName];
+          } else {
+            props[propName] = config[propName];
+          }
+        }
+      }
+    } // Children can be more than one argument, and those are transferred onto
+    // the newly allocated props object.
+
+
+    const childrenLength = arguments.length - 2;
+
+    if (childrenLength === 1) {
+      props.children = children;
+    } else if (childrenLength > 1) {
+      const childArray = Array(childrenLength);
+
+      for (let i = 0; i < childrenLength; i++) {
+        childArray[i] = arguments[i + 2];
+      }
+
+      props.children = childArray;
+    }
+
+    return ReactElement(element.type, key, ref, self, source, owner, props);
+  }
+  /**
+   * Verifies the object is a ReactElement.
+   * See https://reactjs.org/docs/react-api.html#isvalidelement
+   * @param {?object} object
+   * @return {boolean} True if `object` is a ReactElement.
+   * @final
+   */
+
+  function isValidElement(object) {
+    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
+  }
+
+  const SEPARATOR = '.';
+  const SUBSEPARATOR = ':';
+  /**
+   * Escape and wrap key so it is safe to use as a reactid
+   *
+   * @param {string} key to be escaped.
+   * @return {string} the escaped key.
+   */
+
+  function escape(key) {
+    const escapeRegex = /[=:]/g;
+    const escaperLookup = {
+      '=': '=0',
+      ':': '=2'
+    };
+    const escapedString = key.replace(escapeRegex, function (match) {
+      return escaperLookup[match];
+    });
+    return '$' + escapedString;
+  }
+  const userProvidedKeyEscapeRegex = /\/+/g;
+
+  function escapeUserProvidedKey(text) {
+    return text.replace(userProvidedKeyEscapeRegex, '$&/');
+  }
+  /**
+   * Generate a key string that identifies a element within a set.
+   *
+   * @param {*} element A element that could contain a manual key.
+   * @param {number} index Index that is used if a manual key is not provided.
+   * @return {string}
+   */
+
+
+  function getElementKey(element, index) {
+    // Do some typechecking here since we call this blindly. We want to ensure
+    // that we don't block potential future ES APIs.
+    if (typeof element === 'object' && element !== null && element.key != null) {
+
+      return escape('' + element.key);
+    } // Implicit key determined by the index in the set
+
+
+    return index.toString(36);
+  }
+
+  function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
+    const type = typeof children;
+
+    if (type === 'undefined' || type === 'boolean') {
+      // All of the above are perceived as null.
+      children = null;
+    }
+
+    let invokeCallback = false;
+
+    if (children === null) {
+      invokeCallback = true;
+    } else {
+      switch (type) {
+        case 'string':
+        case 'number':
+          invokeCallback = true;
+          break;
+
+        case 'object':
+          switch (children.$$typeof) {
+            case REACT_ELEMENT_TYPE:
+            case REACT_PORTAL_TYPE:
+              invokeCallback = true;
+          }
+
+      }
+    }
+
+    if (invokeCallback) {
+      const child = children;
+      let mappedChild = callback(child); // If it's the only child, treat the name as if it was wrapped in an array
+      // so that it's consistent if the number of children grows:
+
+      const childKey = nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;
+
+      if (isArray(mappedChild)) {
+        let escapedChildKey = '';
+
+        if (childKey != null) {
+          escapedChildKey = escapeUserProvidedKey(childKey) + '/';
+        }
+
+        mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);
+      } else if (mappedChild != null) {
+        if (isValidElement(mappedChild)) {
+
+          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
+          // traverseAllChildren used to do for objects as children
+          escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
+          mappedChild.key && (!child || child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
+          // eslint-disable-next-line react-internal/safe-string-coercion
+          escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
+        }
+
+        array.push(mappedChild);
+      }
+
+      return 1;
+    }
+
+    let child;
+    let nextName;
+    let subtreeCount = 0; // Count of children found in the current subtree.
+
+    const nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
+
+    if (isArray(children)) {
+      for (let i = 0; i < children.length; i++) {
+        child = children[i];
+        nextName = nextNamePrefix + getElementKey(child, i);
+        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+      }
+    } else {
+      const iteratorFn = getIteratorFn(children);
+
+      if (typeof iteratorFn === 'function') {
+        const iterableChildren = children;
+
+        const iterator = iteratorFn.call(iterableChildren);
+        let step;
+        let ii = 0;
+
+        while (!(step = iterator.next()).done) {
+          child = step.value;
+          nextName = nextNamePrefix + getElementKey(child, ii++);
+          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
+        }
+      } else if (type === 'object') {
+        // eslint-disable-next-line react-internal/safe-string-coercion
+        const childrenString = String(children);
+        throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
+      }
+    }
+
+    return subtreeCount;
+  }
+
+  /**
+   * Maps children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenmap
+   *
+   * The provided mapFunction(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} func The map function.
+   * @param {*} context Context for mapFunction.
+   * @return {object} Object containing the ordered map of results.
+   */
+  function mapChildren(children, func, context) {
+    if (children == null) {
+      return children;
+    }
+
+    const result = [];
+    let count = 0;
+    mapIntoArray(children, result, '', '', function (child) {
+      return func.call(context, child, count++);
+    });
+    return result;
+  }
+  /**
+   * Count the number of children that are typically specified as
+   * `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrencount
+   *
+   * @param {?*} children Children tree container.
+   * @return {number} The number of children.
+   */
+
+
+  function countChildren(children) {
+    let n = 0;
+    mapChildren(children, () => {
+      n++; // Don't return anything
+    });
+    return n;
+  }
+
+  /**
+   * Iterates through children that are typically specified as `props.children`.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
+   *
+   * The provided forEachFunc(child, index) will be called for each
+   * leaf child.
+   *
+   * @param {?*} children Children tree container.
+   * @param {function(*, int)} forEachFunc
+   * @param {*} forEachContext Context for forEachContext.
+   */
+  function forEachChildren(children, forEachFunc, forEachContext) {
+    mapChildren(children, function () {
+      forEachFunc.apply(this, arguments); // Don't return anything.
+    }, forEachContext);
+  }
+  /**
+   * Flatten a children object (typically specified as `props.children`) and
+   * return an array with appropriately re-keyed children.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
+   */
+
+
+  function toArray(children) {
+    return mapChildren(children, child => child) || [];
+  }
+  /**
+   * Returns the first child in a collection of children and verifies that there
+   * is only one child in the collection.
+   *
+   * See https://reactjs.org/docs/react-api.html#reactchildrenonly
+   *
+   * The current implementation of this function assumes that a single child gets
+   * passed without a wrapper, but the purpose of this helper function is to
+   * abstract away the particular structure of children.
+   *
+   * @param {?object} children Child collection structure.
+   * @return {ReactElement} The first and only `ReactElement` contained in the
+   * structure.
+   */
+
+
+  function onlyChild(children) {
+    if (!isValidElement(children)) {
+      throw new Error('React.Children.only expected to receive a single React element child.');
+    }
+
+    return children;
+  }
+
+  function createContext(defaultValue) {
+    // TODO: Second argument used to be an optional `calculateChangedBits`
+    // function. Warn to reserve for future use?
+    const context = {
+      $$typeof: REACT_CONTEXT_TYPE,
+      // As a workaround to support multiple concurrent renderers, we categorize
+      // some renderers as primary and others as secondary. We only expect
+      // there to be two concurrent renderers at most: React Native (primary) and
+      // Fabric (secondary); React DOM (primary) and React ART (secondary).
+      // Secondary renderers store their context values on separate fields.
+      _currentValue: defaultValue,
+      _currentValue2: defaultValue,
+      // Used to track how many concurrent renderers this context currently
+      // supports within in a single renderer. Such as parallel server rendering.
+      _threadCount: 0,
+      // These are circular
+      Provider: null,
+      Consumer: null,
+      // Add these to use same hidden class in VM as ServerContext
+      _defaultValue: null,
+      _globalName: null
+    };
+    context.Provider = {
+      $$typeof: REACT_PROVIDER_TYPE,
+      _context: context
+    };
+
+    {
+      context.Consumer = context;
+    }
+
+    return context;
+  }
+
+  const Uninitialized = -1;
+  const Pending = 0;
+  const Resolved = 1;
+  const Rejected = 2;
+
+  function lazyInitializer(payload) {
+    if (payload._status === Uninitialized) {
+      const ctor = payload._result;
+      const thenable = ctor(); // Transition to the next state.
+      // This might throw either because it's missing or throws. If so, we treat it
+      // as still uninitialized and try again next time. Which is the same as what
+      // happens if the ctor or any wrappers processing the ctor throws. This might
+      // end up fixing it if the resolution was a concurrency bug.
+
+      thenable.then(moduleObject => {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          const resolved = payload;
+          resolved._status = Resolved;
+          resolved._result = moduleObject;
+        }
+      }, error => {
+        if (payload._status === Pending || payload._status === Uninitialized) {
+          // Transition to the next state.
+          const rejected = payload;
+          rejected._status = Rejected;
+          rejected._result = error;
+        }
+      });
+
+      if (payload._status === Uninitialized) {
+        // In case, we're still uninitialized, then we're waiting for the thenable
+        // to resolve. Set it as pending in the meantime.
+        const pending = payload;
+        pending._status = Pending;
+        pending._result = thenable;
+      }
+    }
+
+    if (payload._status === Resolved) {
+      const moduleObject = payload._result;
+
+      return moduleObject.default;
+    } else {
+      throw payload._result;
+    }
+  }
+
+  function lazy(ctor) {
+    const payload = {
+      // We use these fields to store the result.
+      _status: Uninitialized,
+      _result: ctor
+    };
+    const lazyType = {
+      $$typeof: REACT_LAZY_TYPE,
+      _payload: payload,
+      _init: lazyInitializer
+    };
+
+    return lazyType;
+  }
+
+  function forwardRef(render) {
+
+    const elementType = {
+      $$typeof: REACT_FORWARD_REF_TYPE,
+      render
+    };
+
+    return elementType;
+  }
+
+  function memo(type, compare) {
+
+    const elementType = {
+      $$typeof: REACT_MEMO_TYPE,
+      type,
+      compare: compare === undefined ? null : compare
+    };
+
+    return elementType;
+  }
+
+  /**
+   * Keeps track of the current dispatcher.
+   */
+  const ReactCurrentDispatcher = {
+    /**
+     * @internal
+     * @type {ReactComponent}
+     */
+    current: null
+  };
+
+  function resolveDispatcher() {
+    const dispatcher = ReactCurrentDispatcher.current;
+    // intentionally don't throw our own error because this is in a hot path.
+    // Also helps ensure this is inlined.
+
+
+    return dispatcher;
+  }
+
+  function getCacheSignal() {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheSignal();
+  }
+  function getCacheForType(resourceType) {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.getCacheForType(resourceType);
+  }
+  function useContext(Context) {
+    const dispatcher = resolveDispatcher();
+
+    return dispatcher.useContext(Context);
+  }
+  function useState(initialState) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useState(initialState);
+  }
+  function useReducer(reducer, initialArg, init) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useReducer(reducer, initialArg, init);
+  }
+  function useRef(initialValue) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useRef(initialValue);
+  }
+  function useEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useEffect(create, deps);
+  }
+  function useInsertionEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useInsertionEffect(create, deps);
+  }
+  function useLayoutEffect(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useLayoutEffect(create, deps);
+  }
+  function useCallback(callback, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useCallback(callback, deps);
+  }
+  function useMemo(create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useMemo(create, deps);
+  }
+  function useImperativeHandle(ref, create, deps) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useImperativeHandle(ref, create, deps);
+  }
+  function useDebugValue(value, formatterFn) {
+  }
+  function useTransition() {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useTransition();
+  }
+  function useDeferredValue(value) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useDeferredValue(value);
+  }
+  function useId() {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useId();
+  }
+  function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
+    const dispatcher = resolveDispatcher();
+    return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
+  }
+  function useCacheRefresh() {
+    const dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional
+
+    return dispatcher.useCacheRefresh();
+  }
+
+  /**
+   * Keeps track of the current batch's configuration such as how long an update
+   * should suspend for if it needs to.
+   */
+  const ReactCurrentBatchConfig = {
+    transition: null
+  };
+
+  const ContextRegistry = {};
+
+  const ReactSharedInternals = {
+    ReactCurrentDispatcher,
+    ReactCurrentBatchConfig,
+    ReactCurrentOwner
+  };
+
+  {
+    ReactSharedInternals.ContextRegistry = ContextRegistry;
+  }
+
+  const ContextRegistry$1 = ReactSharedInternals.ContextRegistry;
+  function createServerContext(globalName, defaultValue) {
+
+    let wasDefined = true;
+
+    if (!ContextRegistry$1[globalName]) {
+      wasDefined = false;
+      const context = {
+        $$typeof: REACT_SERVER_CONTEXT_TYPE,
+        // As a workaround to support multiple concurrent renderers, we categorize
+        // some renderers as primary and others as secondary. We only expect
+        // there to be two concurrent renderers at most: React Native (primary) and
+        // Fabric (secondary); React DOM (primary) and React ART (secondary).
+        // Secondary renderers store their context values on separate fields.
+        _currentValue: defaultValue,
+        _currentValue2: defaultValue,
+        _defaultValue: defaultValue,
+        // Used to track how many concurrent renderers this context currently
+        // supports within in a single renderer. Such as parallel server rendering.
+        _threadCount: 0,
+        // These are circular
+        Provider: null,
+        Consumer: null,
+        _globalName: globalName
+      };
+      context.Provider = {
+        $$typeof: REACT_PROVIDER_TYPE,
+        _context: context
+      };
+
+      ContextRegistry$1[globalName] = context;
+    }
+
+    const context = ContextRegistry$1[globalName];
+
+    if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+      context._defaultValue = defaultValue;
+
+      if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue = defaultValue;
+      }
+
+      if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
+        context._currentValue2 = defaultValue;
+      }
+    } else if (wasDefined) {
+      throw new Error("ServerContext: " + globalName + " already defined");
+    }
+
+    return context;
+  }
+
+  const enableSchedulerDebugging = false;
+  const enableProfiling = false;
+  const frameYieldMs = 5;
+
+  function push(heap, node) {
+    const index = heap.length;
+    heap.push(node);
+    siftUp(heap, node, index);
+  }
+  function peek(heap) {
+    return heap.length === 0 ? null : heap[0];
+  }
+  function pop(heap) {
+    if (heap.length === 0) {
+      return null;
+    }
+
+    const first = heap[0];
+    const last = heap.pop();
+
+    if (last !== first) {
+      heap[0] = last;
+      siftDown(heap, last, 0);
+    }
+
+    return first;
+  }
+
+  function siftUp(heap, node, i) {
+    let index = i;
+
+    while (index > 0) {
+      const parentIndex = index - 1 >>> 1;
+      const parent = heap[parentIndex];
+
+      if (compare(parent, node) > 0) {
+        // The parent is larger. Swap positions.
+        heap[parentIndex] = node;
+        heap[index] = parent;
+        index = parentIndex;
+      } else {
+        // The parent is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function siftDown(heap, node, i) {
+    let index = i;
+    const length = heap.length;
+    const halfLength = length >>> 1;
+
+    while (index < halfLength) {
+      const leftIndex = (index + 1) * 2 - 1;
+      const left = heap[leftIndex];
+      const rightIndex = leftIndex + 1;
+      const right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
+
+      if (compare(left, node) < 0) {
+        if (rightIndex < length && compare(right, left) < 0) {
+          heap[index] = right;
+          heap[rightIndex] = node;
+          index = rightIndex;
+        } else {
+          heap[index] = left;
+          heap[leftIndex] = node;
+          index = leftIndex;
+        }
+      } else if (rightIndex < length && compare(right, node) < 0) {
+        heap[index] = right;
+        heap[rightIndex] = node;
+        index = rightIndex;
+      } else {
+        // Neither child is smaller. Exit.
+        return;
+      }
+    }
+  }
+
+  function compare(a, b) {
+    // Compare sort index first, then task id.
+    const diff = a.sortIndex - b.sortIndex;
+    return diff !== 0 ? diff : a.id - b.id;
+  }
+
+  // TODO: Use symbols?
+  const ImmediatePriority = 1;
+  const UserBlockingPriority = 2;
+  const NormalPriority = 3;
+  const LowPriority = 4;
+  const IdlePriority = 5;
+
+  function markTaskErrored(task, ms) {
+  }
+
+  /* eslint-disable no-var */
+  let getCurrentTime;
+  const hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
+
+  if (hasPerformanceNow) {
+    const localPerformance = performance;
+
+    getCurrentTime = () => localPerformance.now();
+  } else {
+    const localDate = Date;
+    const initialTime = localDate.now();
+
+    getCurrentTime = () => localDate.now() - initialTime;
+  } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
+  // Math.pow(2, 30) - 1
+  // 0b111111111111111111111111111111
+
+
+  var maxSigned31BitInt = 1073741823; // Times out immediately
+
+  var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
+
+  var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
+  var NORMAL_PRIORITY_TIMEOUT = 5000;
+  var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
+
+  var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
+
+  var taskQueue = [];
+  var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
+
+  var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
+  var currentTask = null;
+  var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
+
+  var isPerformingWork = false;
+  var isHostCallbackScheduled = false;
+  var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
+
+  const localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
+  const localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
+  const localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
+
+  const isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
+
+  function advanceTimers(currentTime) {
+    // Check for tasks that are no longer delayed and add them to the queue.
+    let timer = peek(timerQueue);
+
+    while (timer !== null) {
+      if (timer.callback === null) {
+        // Timer was cancelled.
+        pop(timerQueue);
+      } else if (timer.startTime <= currentTime) {
+        // Timer fired. Transfer to the task queue.
+        pop(timerQueue);
+        timer.sortIndex = timer.expirationTime;
+        push(taskQueue, timer);
+      } else {
+        // Remaining timers are pending.
+        return;
+      }
+
+      timer = peek(timerQueue);
+    }
+  }
+
+  function handleTimeout(currentTime) {
+    isHostTimeoutScheduled = false;
+    advanceTimers(currentTime);
+
+    if (!isHostCallbackScheduled) {
+      if (peek(taskQueue) !== null) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      } else {
+        const firstTimer = peek(timerQueue);
+
+        if (firstTimer !== null) {
+          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+        }
+      }
+    }
+  }
+
+  function flushWork(hasTimeRemaining, initialTime) {
+
+
+    isHostCallbackScheduled = false;
+
+    if (isHostTimeoutScheduled) {
+      // We scheduled a timeout but it's no longer needed. Cancel it.
+      isHostTimeoutScheduled = false;
+      cancelHostTimeout();
+    }
+
+    isPerformingWork = true;
+    const previousPriorityLevel = currentPriorityLevel;
+
+    try {
+      if (enableProfiling) {
+        try {
+          return workLoop(hasTimeRemaining, initialTime);
+        } catch (error) {
+          if (currentTask !== null) {
+            const currentTime = getCurrentTime();
+            markTaskErrored(currentTask, currentTime);
+            currentTask.isQueued = false;
+          }
+
+          throw error;
+        }
+      } else {
+        // No catch in prod code path.
+        return workLoop(hasTimeRemaining, initialTime);
+      }
+    } finally {
+      currentTask = null;
+      currentPriorityLevel = previousPriorityLevel;
+      isPerformingWork = false;
+    }
+  }
+
+  function workLoop(hasTimeRemaining, initialTime) {
+    let currentTime = initialTime;
+    advanceTimers(currentTime);
+    currentTask = peek(taskQueue);
+
+    while (currentTask !== null && !(enableSchedulerDebugging )) {
+      if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
+        // This currentTask hasn't expired, and we've reached the deadline.
+        break;
+      }
+
+      const callback = currentTask.callback;
+
+      if (typeof callback === 'function') {
+        currentTask.callback = null;
+        currentPriorityLevel = currentTask.priorityLevel;
+        const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
+
+        const continuationCallback = callback(didUserCallbackTimeout);
+        currentTime = getCurrentTime();
+
+        if (typeof continuationCallback === 'function') {
+          currentTask.callback = continuationCallback;
+        } else {
+
+          if (currentTask === peek(taskQueue)) {
+            pop(taskQueue);
+          }
+        }
+
+        advanceTimers(currentTime);
+      } else {
+        pop(taskQueue);
+      }
+
+      currentTask = peek(taskQueue);
+    } // Return whether there's additional work
+
+
+    if (currentTask !== null) {
+      return true;
+    } else {
+      const firstTimer = peek(timerQueue);
+
+      if (firstTimer !== null) {
+        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
+      }
+
+      return false;
+    }
+  }
+
+  function unstable_runWithPriority(priorityLevel, eventHandler) {
+    switch (priorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+      case LowPriority:
+      case IdlePriority:
+        break;
+
+      default:
+        priorityLevel = NormalPriority;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_next(eventHandler) {
+    var priorityLevel;
+
+    switch (currentPriorityLevel) {
+      case ImmediatePriority:
+      case UserBlockingPriority:
+      case NormalPriority:
+        // Shift down to normal priority
+        priorityLevel = NormalPriority;
+        break;
+
+      default:
+        // Anything lower than normal priority should remain at the current level.
+        priorityLevel = currentPriorityLevel;
+        break;
+    }
+
+    var previousPriorityLevel = currentPriorityLevel;
+    currentPriorityLevel = priorityLevel;
+
+    try {
+      return eventHandler();
+    } finally {
+      currentPriorityLevel = previousPriorityLevel;
+    }
+  }
+
+  function unstable_wrapCallback(callback) {
+    var parentPriorityLevel = currentPriorityLevel;
+    return function () {
+      // This is a fork of runWithPriority, inlined for performance.
+      var previousPriorityLevel = currentPriorityLevel;
+      currentPriorityLevel = parentPriorityLevel;
+
+      try {
+        return callback.apply(this, arguments);
+      } finally {
+        currentPriorityLevel = previousPriorityLevel;
+      }
+    };
+  }
+
+  function unstable_scheduleCallback(priorityLevel, callback, options) {
+    var currentTime = getCurrentTime();
+    var startTime;
+
+    if (typeof options === 'object' && options !== null) {
+      var delay = options.delay;
+
+      if (typeof delay === 'number' && delay > 0) {
+        startTime = currentTime + delay;
+      } else {
+        startTime = currentTime;
+      }
+    } else {
+      startTime = currentTime;
+    }
+
+    var timeout;
+
+    switch (priorityLevel) {
+      case ImmediatePriority:
+        timeout = IMMEDIATE_PRIORITY_TIMEOUT;
+        break;
+
+      case UserBlockingPriority:
+        timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
+        break;
+
+      case IdlePriority:
+        timeout = IDLE_PRIORITY_TIMEOUT;
+        break;
+
+      case LowPriority:
+        timeout = LOW_PRIORITY_TIMEOUT;
+        break;
+
+      case NormalPriority:
+      default:
+        timeout = NORMAL_PRIORITY_TIMEOUT;
+        break;
+    }
+
+    var expirationTime = startTime + timeout;
+    var newTask = {
+      id: taskIdCounter++,
+      callback,
+      priorityLevel,
+      startTime,
+      expirationTime,
+      sortIndex: -1
+    };
+
+    if (startTime > currentTime) {
+      // This is a delayed task.
+      newTask.sortIndex = startTime;
+      push(timerQueue, newTask);
+
+      if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
+        // All tasks are delayed, and this is the task with the earliest delay.
+        if (isHostTimeoutScheduled) {
+          // Cancel an existing timeout.
+          cancelHostTimeout();
+        } else {
+          isHostTimeoutScheduled = true;
+        } // Schedule a timeout.
+
+
+        requestHostTimeout(handleTimeout, startTime - currentTime);
+      }
+    } else {
+      newTask.sortIndex = expirationTime;
+      push(taskQueue, newTask);
+      // wait until the next time we yield.
+
+
+      if (!isHostCallbackScheduled && !isPerformingWork) {
+        isHostCallbackScheduled = true;
+        requestHostCallback(flushWork);
+      }
+    }
+
+    return newTask;
+  }
+
+  function unstable_pauseExecution() {
+  }
+
+  function unstable_continueExecution() {
+
+    if (!isHostCallbackScheduled && !isPerformingWork) {
+      isHostCallbackScheduled = true;
+      requestHostCallback(flushWork);
+    }
+  }
+
+  function unstable_getFirstCallbackNode() {
+    return peek(taskQueue);
+  }
+
+  function unstable_cancelCallback(task) {
+    // remove from the queue because you can't remove arbitrary nodes from an
+    // array based heap, only the first one.)
+
+
+    task.callback = null;
+  }
+
+  function unstable_getCurrentPriorityLevel() {
+    return currentPriorityLevel;
+  }
+
+  let isMessageLoopRunning = false;
+  let scheduledHostCallback = null;
+  let taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
+  // thread, like user events. By default, it yields multiple times per frame.
+  // It does not attempt to align with frame boundaries, since most tasks don't
+  // need to be frame aligned; for those that do, use requestAnimationFrame.
+
+  let frameInterval = frameYieldMs;
+  let startTime = -1;
+
+  function shouldYieldToHost() {
+    const timeElapsed = getCurrentTime() - startTime;
+
+    if (timeElapsed < frameInterval) {
+      // The main thread has only been blocked for a really short amount of time;
+      // smaller than a single frame. Don't yield yet.
+      return false;
+    } // The main thread has been blocked for a non-negligible amount of time. We
+
+
+    return true;
+  }
+
+  function requestPaint() {
+
+  }
+
+  function forceFrameRate(fps) {
+    if (fps < 0 || fps > 125) {
+      // Using console['error'] to evade Babel and ESLint
+      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
+      return;
+    }
+
+    if (fps > 0) {
+      frameInterval = Math.floor(1000 / fps);
+    } else {
+      // reset the framerate
+      frameInterval = frameYieldMs;
+    }
+  }
+
+  const performWorkUntilDeadline = () => {
+    if (scheduledHostCallback !== null) {
+      const currentTime = getCurrentTime(); // Keep track of the start time so we can measure how long the main thread
+      // has been blocked.
+
+      startTime = currentTime;
+      const hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
+      // error can be observed.
+      //
+      // Intentionally not using a try-catch, since that makes some debugging
+      // techniques harder. Instead, if `scheduledHostCallback` errors, then
+      // `hasMoreWork` will remain true, and we'll continue the work loop.
+
+      let hasMoreWork = true;
+
+      try {
+        hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
+      } finally {
+        if (hasMoreWork) {
+          // If there's more work, schedule the next message event at the end
+          // of the preceding one.
+          schedulePerformWorkUntilDeadline();
+        } else {
+          isMessageLoopRunning = false;
+          scheduledHostCallback = null;
+        }
+      }
+    } else {
+      isMessageLoopRunning = false;
+    } // Yielding to the browser will give it a chance to paint, so we can
+  };
+
+  let schedulePerformWorkUntilDeadline;
+
+  if (typeof localSetImmediate === 'function') {
+    // Node.js and old IE.
+    // There's a few reasons for why we prefer setImmediate.
+    //
+    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
+    // (Even though this is a DOM fork of the Scheduler, you could get here
+    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
+    // https://github.com/facebook/react/issues/20756
+    //
+    // But also, it runs earlier which is the semantic we want.
+    // If other browsers ever implement it, it's better to use it.
+    // Although both of these would be inferior to native scheduling.
+    schedulePerformWorkUntilDeadline = () => {
+      localSetImmediate(performWorkUntilDeadline);
+    };
+  } else if (typeof MessageChannel !== 'undefined') {
+    // DOM and Worker environments.
+    // We prefer MessageChannel because of the 4ms setTimeout clamping.
+    const channel = new MessageChannel();
+    const port = channel.port2;
+    channel.port1.onmessage = performWorkUntilDeadline;
+
+    schedulePerformWorkUntilDeadline = () => {
+      port.postMessage(null);
+    };
+  } else {
+    // We should only fallback here in non-browser environments.
+    schedulePerformWorkUntilDeadline = () => {
+      localSetTimeout(performWorkUntilDeadline, 0);
+    };
+  }
+
+  function requestHostCallback(callback) {
+    scheduledHostCallback = callback;
+
+    if (!isMessageLoopRunning) {
+      isMessageLoopRunning = true;
+      schedulePerformWorkUntilDeadline();
+    }
+  }
+
+  function requestHostTimeout(callback, ms) {
+    taskTimeoutID = localSetTimeout(() => {
+      callback(getCurrentTime());
+    }, ms);
+  }
+
+  function cancelHostTimeout() {
+    localClearTimeout(taskTimeoutID);
+    taskTimeoutID = -1;
+  }
+
+  const unstable_requestPaint = requestPaint;
+  const unstable_Profiling =  null;
+
+
+
+  var Scheduler = {
+    __proto__: null,
+    unstable_ImmediatePriority: ImmediatePriority,
+    unstable_UserBlockingPriority: UserBlockingPriority,
+    unstable_NormalPriority: NormalPriority,
+    unstable_IdlePriority: IdlePriority,
+    unstable_LowPriority: LowPriority,
+    unstable_runWithPriority: unstable_runWithPriority,
+    unstable_next: unstable_next,
+    unstable_scheduleCallback: unstable_scheduleCallback,
+    unstable_cancelCallback: unstable_cancelCallback,
+    unstable_wrapCallback: unstable_wrapCallback,
+    unstable_getCurrentPriorityLevel: unstable_getCurrentPriorityLevel,
+    unstable_shouldYield: shouldYieldToHost,
+    unstable_requestPaint: unstable_requestPaint,
+    unstable_continueExecution: unstable_continueExecution,
+    unstable_pauseExecution: unstable_pauseExecution,
+    unstable_getFirstCallbackNode: unstable_getFirstCallbackNode,
+    get unstable_now () { return getCurrentTime; },
+    unstable_forceFrameRate: forceFrameRate,
+    unstable_Profiling: unstable_Profiling
+  };
+
+  const ReactSharedInternals$1 = {
+    ReactCurrentDispatcher,
+    ReactCurrentOwner,
+    ReactCurrentBatchConfig,
+    // Re-export the schedule API(s) for UMD bundles.
+    // This avoids introducing a dependency on a new UMD global in a minor update,
+    // Since that would be a breaking change (e.g. for all existing CodeSandboxes).
+    // This re-export is only required for UMD bundles;
+    // CJS bundles use the shared NPM package.
+    Scheduler
+  };
+
+  {
+    ReactSharedInternals$1.ContextRegistry = ContextRegistry;
+  }
+
+  function startTransition(scope, options) {
+    const prevTransition = ReactCurrentBatchConfig.transition;
+    ReactCurrentBatchConfig.transition = {};
+
+    try {
+      scope();
+    } finally {
+      ReactCurrentBatchConfig.transition = prevTransition;
+    }
+  }
+
+  function act(callback) {
+    {
+      throw new Error('act(...) is not supported in production builds of React.');
+    }
+  }
+
+  const createElement$1 =  createElement;
+  const cloneElement$1 =  cloneElement;
+  const createFactory$1 =  createFactory;
+  const Children = {
+    map: mapChildren,
+    forEach: forEachChildren,
+    count: countChildren,
+    toArray,
+    only: onlyChild
+  };
+
+  exports.Children = Children;
+  exports.Component = Component;
+  exports.Fragment = REACT_FRAGMENT_TYPE;
+  exports.Profiler = REACT_PROFILER_TYPE;
+  exports.PureComponent = PureComponent;
+  exports.StrictMode = REACT_STRICT_MODE_TYPE;
+  exports.Suspense = REACT_SUSPENSE_TYPE;
+  exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
+  exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals$1;
+  exports.cloneElement = cloneElement$1;
+  exports.createContext = createContext;
+  exports.createElement = createElement$1;
+  exports.createFactory = createFactory$1;
+  exports.createRef = createRef;
+  exports.createServerContext = createServerContext;
+  exports.forwardRef = forwardRef;
+  exports.isValidElement = isValidElement;
+  exports.lazy = lazy;
+  exports.memo = memo;
+  exports.startTransition = startTransition;
+  exports.unstable_Cache = REACT_CACHE_TYPE;
+  exports.unstable_DebugTracingMode = REACT_DEBUG_TRACING_MODE_TYPE;
+  exports.unstable_Offscreen = REACT_OFFSCREEN_TYPE;
+  exports.unstable_act = act;
+  exports.unstable_getCacheForType = getCacheForType;
+  exports.unstable_getCacheSignal = getCacheSignal;
+  exports.unstable_useCacheRefresh = useCacheRefresh;
+  exports.useCallback = useCallback;
+  exports.useContext = useContext;
+  exports.useDebugValue = useDebugValue;
+  exports.useDeferredValue = useDeferredValue;
+  exports.useEffect = useEffect;
+  exports.useId = useId;
+  exports.useImperativeHandle = useImperativeHandle;
+  exports.useInsertionEffect = useInsertionEffect;
+  exports.useLayoutEffect = useLayoutEffect;
+  exports.useMemo = useMemo;
+  exports.useReducer = useReducer;
+  exports.useRef = useRef;
+  exports.useState = useState;
+  exports.useSyncExternalStore = useSyncExternalStore;
+  exports.useTransition = useTransition;
+  exports.version = ReactVersion;
+
+})));
+//# sourceMappingURL=react.profiling.min.js.map
diff --git a/node_modules/react/umd/react.profiling.min.js.map b/node_modules/react/umd/react.profiling.min.js.map
new file mode 100644
index 0000000..67c304f
--- /dev/null
+++ b/node_modules/react/umd/react.profiling.min.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"react.profiling.min.js","sources":["D:/code-projects/debugger-learning/react/packages/shared/ReactVersion.js","D:/code-projects/debugger-learning/react/packages/shared/ReactSymbols.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactNoopUpdateQueue.js","D:/code-projects/debugger-learning/react/packages/shared/assign.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactBaseClasses.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCreateRef.js","D:/code-projects/debugger-learning/react/packages/shared/isArray.js","D:/code-projects/debugger-learning/react/packages/shared/hasOwnProperty.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentOwner.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactElement.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactChildren.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactContext.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactLazy.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactForwardRef.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactMemo.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentDispatcher.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactHooks.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactCurrentBatchConfig.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContextRegistry.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactSharedInternals.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactServerContext.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerFeatureFlags.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerMinHeap.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerPriorities.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/SchedulerProfiling.js","D:/code-projects/debugger-learning/react/packages/scheduler/src/forks/Scheduler.js","D:/code-projects/debugger-learning/react/packages/react/src/forks/ReactSharedInternals.umd.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactStartTransition.js","D:/code-projects/debugger-learning/react/packages/react/src/ReactAct.js","D:/code-projects/debugger-learning/react/packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\r\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                // eslint-disable-next-line react-internal/safe-string-coercion\r\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: Symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {|current: T|} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nexport const enableSchedulerDebugging = false;\r\nexport const enableIsInputPending = false;\r\nexport const enableProfiling = false;\r\nexport const enableIsInputPendingContinuous = false;\r\nexport const frameYieldMs = 5;\r\nexport const continuousYieldMs = 50;\r\nexport const maxYieldMs = 300;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\ntype Heap = Array<Node>;\r\ntype Node = {|\r\n  id: number,\r\n  sortIndex: number,\r\n|};\r\n\r\nexport function push(heap: Heap, node: Node): void {\r\n  const index = heap.length;\r\n  heap.push(node);\r\n  siftUp(heap, node, index);\r\n}\r\n\r\nexport function peek(heap: Heap): Node | null {\r\n  return heap.length === 0 ? null : heap[0];\r\n}\r\n\r\nexport function pop(heap: Heap): Node | null {\r\n  if (heap.length === 0) {\r\n    return null;\r\n  }\r\n  const first = heap[0];\r\n  const last = heap.pop();\r\n  if (last !== first) {\r\n    heap[0] = last;\r\n    siftDown(heap, last, 0);\r\n  }\r\n  return first;\r\n}\r\n\r\nfunction siftUp(heap, node, i) {\r\n  let index = i;\r\n  while (index > 0) {\r\n    const parentIndex = (index - 1) >>> 1;\r\n    const parent = heap[parentIndex];\r\n    if (compare(parent, node) > 0) {\r\n      // The parent is larger. Swap positions.\r\n      heap[parentIndex] = node;\r\n      heap[index] = parent;\r\n      index = parentIndex;\r\n    } else {\r\n      // The parent is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction siftDown(heap, node, i) {\r\n  let index = i;\r\n  const length = heap.length;\r\n  const halfLength = length >>> 1;\r\n  while (index < halfLength) {\r\n    const leftIndex = (index + 1) * 2 - 1;\r\n    const left = heap[leftIndex];\r\n    const rightIndex = leftIndex + 1;\r\n    const right = heap[rightIndex];\r\n\r\n    // If the left or right node is smaller, swap with the smaller of those.\r\n    if (compare(left, node) < 0) {\r\n      if (rightIndex < length && compare(right, left) < 0) {\r\n        heap[index] = right;\r\n        heap[rightIndex] = node;\r\n        index = rightIndex;\r\n      } else {\r\n        heap[index] = left;\r\n        heap[leftIndex] = node;\r\n        index = leftIndex;\r\n      }\r\n    } else if (rightIndex < length && compare(right, node) < 0) {\r\n      heap[index] = right;\r\n      heap[rightIndex] = node;\r\n      index = rightIndex;\r\n    } else {\r\n      // Neither child is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction compare(a, b) {\r\n  // Compare sort index first, then task id.\r\n  const diff = a.sortIndex - b.sortIndex;\r\n  return diff !== 0 ? diff : a.id - b.id;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n// TODO: Use symbols?\r\nexport const NoPriority = 0;\r\nexport const ImmediatePriority = 1;\r\nexport const UserBlockingPriority = 2;\r\nexport const NormalPriority = 3;\r\nexport const LowPriority = 4;\r\nexport const IdlePriority = 5;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {PriorityLevel} from './SchedulerPriorities';\r\nimport {enableProfiling} from './SchedulerFeatureFlags';\r\n\r\nlet runIdCounter: number = 0;\r\nlet mainThreadIdCounter: number = 0;\r\n\r\n// Bytes per element is 4\r\nconst INITIAL_EVENT_LOG_SIZE = 131072;\r\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\r\n\r\nlet eventLogSize = 0;\r\nlet eventLogBuffer = null;\r\nlet eventLog = null;\r\nlet eventLogIndex = 0;\r\n\r\nconst TaskStartEvent = 1;\r\nconst TaskCompleteEvent = 2;\r\nconst TaskErrorEvent = 3;\r\nconst TaskCancelEvent = 4;\r\nconst TaskRunEvent = 5;\r\nconst TaskYieldEvent = 6;\r\nconst SchedulerSuspendEvent = 7;\r\nconst SchedulerResumeEvent = 8;\r\n\r\nfunction logEvent(entries) {\r\n  if (eventLog !== null) {\r\n    const offset = eventLogIndex;\r\n    eventLogIndex += entries.length;\r\n    if (eventLogIndex + 1 > eventLogSize) {\r\n      eventLogSize *= 2;\r\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\r\n        // Using console['error'] to evade Babel and ESLint\r\n        console['error'](\r\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\r\n            'forget to call `stopLoggingProfilingEvents()`.',\r\n        );\r\n        stopLoggingProfilingEvents();\r\n        return;\r\n      }\r\n      const newEventLog = new Int32Array(eventLogSize * 4);\r\n      newEventLog.set(eventLog);\r\n      eventLogBuffer = newEventLog.buffer;\r\n      eventLog = newEventLog;\r\n    }\r\n    eventLog.set(entries, offset);\r\n  }\r\n}\r\n\r\nexport function startLoggingProfilingEvents(): void {\r\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\r\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\r\n  eventLog = new Int32Array(eventLogBuffer);\r\n  eventLogIndex = 0;\r\n}\r\n\r\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\r\n  const buffer = eventLogBuffer;\r\n  eventLogSize = 0;\r\n  eventLogBuffer = null;\r\n  eventLog = null;\r\n  eventLogIndex = 0;\r\n  return buffer;\r\n}\r\n\r\nexport function markTaskStart(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      // performance.now returns a float, representing milliseconds. When the\r\n      // event is logged, it's coerced to an int. Convert to microseconds to\r\n      // maintain extra degrees of precision.\r\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCompleted(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCanceled(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskErrored(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskRun(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    runIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerSuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    mainThreadIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerUnsuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/* eslint-disable no-var */\r\n\r\nimport {\r\n  enableSchedulerDebugging,\r\n  enableProfiling,\r\n  enableIsInputPending,\r\n  enableIsInputPendingContinuous,\r\n  frameYieldMs,\r\n  continuousYieldMs,\r\n  maxYieldMs,\r\n} from '../SchedulerFeatureFlags';\r\n\r\nimport {push, pop, peek} from '../SchedulerMinHeap';\r\n\r\n// TODO: Use symbols?\r\nimport {\r\n  ImmediatePriority,\r\n  UserBlockingPriority,\r\n  NormalPriority,\r\n  LowPriority,\r\n  IdlePriority,\r\n} from '../SchedulerPriorities';\r\nimport {\r\n  markTaskRun,\r\n  markTaskYield,\r\n  markTaskCompleted,\r\n  markTaskCanceled,\r\n  markTaskErrored,\r\n  markSchedulerSuspended,\r\n  markSchedulerUnsuspended,\r\n  markTaskStart,\r\n  stopLoggingProfilingEvents,\r\n  startLoggingProfilingEvents,\r\n} from '../SchedulerProfiling';\r\n\r\nlet getCurrentTime;\r\nconst hasPerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nif (hasPerformanceNow) {\r\n  const localPerformance = performance;\r\n  getCurrentTime = () => localPerformance.now();\r\n} else {\r\n  const localDate = Date;\r\n  const initialTime = localDate.now();\r\n  getCurrentTime = () => localDate.now() - initialTime;\r\n}\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\n// Times out immediately\r\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\r\n// Eventually times out\r\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\r\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\r\nvar LOW_PRIORITY_TIMEOUT = 10000;\r\n// Never times out\r\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\r\n\r\n// Tasks are stored on a min heap\r\nvar taskQueue = [];\r\nvar timerQueue = [];\r\n\r\n// Incrementing id counter. Used to maintain insertion order.\r\nvar taskIdCounter = 1;\r\n\r\n// Pausing the scheduler is useful for debugging.\r\nvar isSchedulerPaused = false;\r\n\r\nvar currentTask = null;\r\nvar currentPriorityLevel = NormalPriority;\r\n\r\n// This is set while performing work, to prevent re-entrance.\r\nvar isPerformingWork = false;\r\n\r\nvar isHostCallbackScheduled = false;\r\nvar isHostTimeoutScheduled = false;\r\n\r\n// Capture local references to native APIs, in case a polyfill overrides them.\r\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\r\nconst localClearTimeout =\r\n  typeof clearTimeout === 'function' ? clearTimeout : null;\r\nconst localSetImmediate =\r\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\r\n\r\nconst isInputPending =\r\n  typeof navigator !== 'undefined' &&\r\n  navigator.scheduling !== undefined &&\r\n  navigator.scheduling.isInputPending !== undefined\r\n    ? navigator.scheduling.isInputPending.bind(navigator.scheduling)\r\n    : null;\r\n\r\nconst continuousOptions = {includeContinuous: enableIsInputPendingContinuous};\r\n\r\nfunction advanceTimers(currentTime) {\r\n  // Check for tasks that are no longer delayed and add them to the queue.\r\n  let timer = peek(timerQueue);\r\n  while (timer !== null) {\r\n    if (timer.callback === null) {\r\n      // Timer was cancelled.\r\n      pop(timerQueue);\r\n    } else if (timer.startTime <= currentTime) {\r\n      // Timer fired. Transfer to the task queue.\r\n      pop(timerQueue);\r\n      timer.sortIndex = timer.expirationTime;\r\n      push(taskQueue, timer);\r\n      if (enableProfiling) {\r\n        markTaskStart(timer, currentTime);\r\n        timer.isQueued = true;\r\n      }\r\n    } else {\r\n      // Remaining timers are pending.\r\n      return;\r\n    }\r\n    timer = peek(timerQueue);\r\n  }\r\n}\r\n\r\nfunction handleTimeout(currentTime) {\r\n  isHostTimeoutScheduled = false;\r\n  advanceTimers(currentTime);\r\n\r\n  if (!isHostCallbackScheduled) {\r\n    if (peek(taskQueue) !== null) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    } else {\r\n      const firstTimer = peek(timerQueue);\r\n      if (firstTimer !== null) {\r\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushWork(hasTimeRemaining, initialTime) {\r\n  if (enableProfiling) {\r\n    markSchedulerUnsuspended(initialTime);\r\n  }\r\n\r\n  // We'll need a host callback the next time work is scheduled.\r\n  isHostCallbackScheduled = false;\r\n  if (isHostTimeoutScheduled) {\r\n    // We scheduled a timeout but it's no longer needed. Cancel it.\r\n    isHostTimeoutScheduled = false;\r\n    cancelHostTimeout();\r\n  }\r\n\r\n  isPerformingWork = true;\r\n  const previousPriorityLevel = currentPriorityLevel;\r\n  try {\r\n    if (enableProfiling) {\r\n      try {\r\n        return workLoop(hasTimeRemaining, initialTime);\r\n      } catch (error) {\r\n        if (currentTask !== null) {\r\n          const currentTime = getCurrentTime();\r\n          markTaskErrored(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        throw error;\r\n      }\r\n    } else {\r\n      // No catch in prod code path.\r\n      return workLoop(hasTimeRemaining, initialTime);\r\n    }\r\n  } finally {\r\n    currentTask = null;\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    isPerformingWork = false;\r\n    if (enableProfiling) {\r\n      const currentTime = getCurrentTime();\r\n      markSchedulerSuspended(currentTime);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop(hasTimeRemaining, initialTime) {\r\n  let currentTime = initialTime;\r\n  advanceTimers(currentTime);\r\n  currentTask = peek(taskQueue);\r\n  while (\r\n    currentTask !== null &&\r\n    !(enableSchedulerDebugging && isSchedulerPaused)\r\n  ) {\r\n    if (\r\n      currentTask.expirationTime > currentTime &&\r\n      (!hasTimeRemaining || shouldYieldToHost())\r\n    ) {\r\n      // This currentTask hasn't expired, and we've reached the deadline.\r\n      break;\r\n    }\r\n    const callback = currentTask.callback;\r\n    if (typeof callback === 'function') {\r\n      currentTask.callback = null;\r\n      currentPriorityLevel = currentTask.priorityLevel;\r\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\r\n      if (enableProfiling) {\r\n        markTaskRun(currentTask, currentTime);\r\n      }\r\n      const continuationCallback = callback(didUserCallbackTimeout);\r\n      currentTime = getCurrentTime();\r\n      if (typeof continuationCallback === 'function') {\r\n        currentTask.callback = continuationCallback;\r\n        if (enableProfiling) {\r\n          markTaskYield(currentTask, currentTime);\r\n        }\r\n      } else {\r\n        if (enableProfiling) {\r\n          markTaskCompleted(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        if (currentTask === peek(taskQueue)) {\r\n          pop(taskQueue);\r\n        }\r\n      }\r\n      advanceTimers(currentTime);\r\n    } else {\r\n      pop(taskQueue);\r\n    }\r\n    currentTask = peek(taskQueue);\r\n  }\r\n  // Return whether there's additional work\r\n  if (currentTask !== null) {\r\n    return true;\r\n  } else {\r\n    const firstTimer = peek(timerQueue);\r\n    if (firstTimer !== null) {\r\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n    case LowPriority:\r\n    case IdlePriority:\r\n      break;\r\n    default:\r\n      priorityLevel = NormalPriority;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_next(eventHandler) {\r\n  var priorityLevel;\r\n  switch (currentPriorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel;\r\n      break;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_wrapCallback(callback) {\r\n  var parentPriorityLevel = currentPriorityLevel;\r\n  return function() {\r\n    // This is a fork of runWithPriority, inlined for performance.\r\n    var previousPriorityLevel = currentPriorityLevel;\r\n    currentPriorityLevel = parentPriorityLevel;\r\n\r\n    try {\r\n      return callback.apply(this, arguments);\r\n    } finally {\r\n      currentPriorityLevel = previousPriorityLevel;\r\n    }\r\n  };\r\n}\r\n\r\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\r\n  var currentTime = getCurrentTime();\r\n\r\n  var startTime;\r\n  if (typeof options === 'object' && options !== null) {\r\n    var delay = options.delay;\r\n    if (typeof delay === 'number' && delay > 0) {\r\n      startTime = currentTime + delay;\r\n    } else {\r\n      startTime = currentTime;\r\n    }\r\n  } else {\r\n    startTime = currentTime;\r\n  }\r\n\r\n  var timeout;\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case UserBlockingPriority:\r\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\r\n      break;\r\n    case IdlePriority:\r\n      timeout = IDLE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case LowPriority:\r\n      timeout = LOW_PRIORITY_TIMEOUT;\r\n      break;\r\n    case NormalPriority:\r\n    default:\r\n      timeout = NORMAL_PRIORITY_TIMEOUT;\r\n      break;\r\n  }\r\n\r\n  var expirationTime = startTime + timeout;\r\n\r\n  var newTask = {\r\n    id: taskIdCounter++,\r\n    callback,\r\n    priorityLevel,\r\n    startTime,\r\n    expirationTime,\r\n    sortIndex: -1,\r\n  };\r\n  if (enableProfiling) {\r\n    newTask.isQueued = false;\r\n  }\r\n\r\n  if (startTime > currentTime) {\r\n    // This is a delayed task.\r\n    newTask.sortIndex = startTime;\r\n    push(timerQueue, newTask);\r\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\r\n      // All tasks are delayed, and this is the task with the earliest delay.\r\n      if (isHostTimeoutScheduled) {\r\n        // Cancel an existing timeout.\r\n        cancelHostTimeout();\r\n      } else {\r\n        isHostTimeoutScheduled = true;\r\n      }\r\n      // Schedule a timeout.\r\n      requestHostTimeout(handleTimeout, startTime - currentTime);\r\n    }\r\n  } else {\r\n    newTask.sortIndex = expirationTime;\r\n    push(taskQueue, newTask);\r\n    if (enableProfiling) {\r\n      markTaskStart(newTask, currentTime);\r\n      newTask.isQueued = true;\r\n    }\r\n    // Schedule a host callback, if needed. If we're already performing work,\r\n    // wait until the next time we yield.\r\n    if (!isHostCallbackScheduled && !isPerformingWork) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    }\r\n  }\r\n\r\n  return newTask;\r\n}\r\n\r\nfunction unstable_pauseExecution() {\r\n  isSchedulerPaused = true;\r\n}\r\n\r\nfunction unstable_continueExecution() {\r\n  isSchedulerPaused = false;\r\n  if (!isHostCallbackScheduled && !isPerformingWork) {\r\n    isHostCallbackScheduled = true;\r\n    requestHostCallback(flushWork);\r\n  }\r\n}\r\n\r\nfunction unstable_getFirstCallbackNode() {\r\n  return peek(taskQueue);\r\n}\r\n\r\nfunction unstable_cancelCallback(task) {\r\n  if (enableProfiling) {\r\n    if (task.isQueued) {\r\n      const currentTime = getCurrentTime();\r\n      markTaskCanceled(task, currentTime);\r\n      task.isQueued = false;\r\n    }\r\n  }\r\n\r\n  // Null out the callback to indicate the task has been canceled. (Can't\r\n  // remove from the queue because you can't remove arbitrary nodes from an\r\n  // array based heap, only the first one.)\r\n  task.callback = null;\r\n}\r\n\r\nfunction unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel;\r\n}\r\n\r\nlet isMessageLoopRunning = false;\r\nlet scheduledHostCallback = null;\r\nlet taskTimeoutID = -1;\r\n\r\n// Scheduler periodically yields in case there is other work on the main\r\n// thread, like user events. By default, it yields multiple times per frame.\r\n// It does not attempt to align with frame boundaries, since most tasks don't\r\n// need to be frame aligned; for those that do, use requestAnimationFrame.\r\nlet frameInterval = frameYieldMs;\r\nconst continuousInputInterval = continuousYieldMs;\r\nconst maxInterval = maxYieldMs;\r\nlet startTime = -1;\r\n\r\nlet needsPaint = false;\r\n\r\nfunction shouldYieldToHost() {\r\n  const timeElapsed = getCurrentTime() - startTime;\r\n  if (timeElapsed < frameInterval) {\r\n    // The main thread has only been blocked for a really short amount of time;\r\n    // smaller than a single frame. Don't yield yet.\r\n    return false;\r\n  }\r\n\r\n  // The main thread has been blocked for a non-negligible amount of time. We\r\n  // may want to yield control of the main thread, so the browser can perform\r\n  // high priority tasks. The main ones are painting and user input. If there's\r\n  // a pending paint or a pending input, then we should yield. But if there's\r\n  // neither, then we can yield less often while remaining responsive. We'll\r\n  // eventually yield regardless, since there could be a pending paint that\r\n  // wasn't accompanied by a call to `requestPaint`, or other main thread tasks\r\n  // like network events.\r\n  if (enableIsInputPending) {\r\n    if (needsPaint) {\r\n      // There's a pending paint (signaled by `requestPaint`). Yield now.\r\n      return true;\r\n    }\r\n    if (timeElapsed < continuousInputInterval) {\r\n      // We haven't blocked the thread for that long. Only yield if there's a\r\n      // pending discrete input (e.g. click). It's OK if there's pending\r\n      // continuous input (e.g. mouseover).\r\n      if (isInputPending !== null) {\r\n        return isInputPending();\r\n      }\r\n    } else if (timeElapsed < maxInterval) {\r\n      // Yield if there's either a pending discrete or continuous input.\r\n      if (isInputPending !== null) {\r\n        return isInputPending(continuousOptions);\r\n      }\r\n    } else {\r\n      // We've blocked the thread for a long time. Even if there's no pending\r\n      // input, there may be some other scheduled work that we don't know about,\r\n      // like a network event. Yield now.\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // `isInputPending` isn't available. Yield now.\r\n  return true;\r\n}\r\n\r\nfunction requestPaint() {\r\n  if (\r\n    enableIsInputPending &&\r\n    navigator !== undefined &&\r\n    navigator.scheduling !== undefined &&\r\n    navigator.scheduling.isInputPending !== undefined\r\n  ) {\r\n    needsPaint = true;\r\n  }\r\n\r\n  // Since we yield every frame regardless, `requestPaint` has no effect.\r\n}\r\n\r\nfunction forceFrameRate(fps) {\r\n  if (fps < 0 || fps > 125) {\r\n    // Using console['error'] to evade Babel and ESLint\r\n    console['error'](\r\n      'forceFrameRate takes a positive int between 0 and 125, ' +\r\n        'forcing frame rates higher than 125 fps is not supported',\r\n    );\r\n    return;\r\n  }\r\n  if (fps > 0) {\r\n    frameInterval = Math.floor(1000 / fps);\r\n  } else {\r\n    // reset the framerate\r\n    frameInterval = frameYieldMs;\r\n  }\r\n}\r\n\r\nconst performWorkUntilDeadline = () => {\r\n  if (scheduledHostCallback !== null) {\r\n    const currentTime = getCurrentTime();\r\n    // Keep track of the start time so we can measure how long the main thread\r\n    // has been blocked.\r\n    startTime = currentTime;\r\n    const hasTimeRemaining = true;\r\n\r\n    // If a scheduler task throws, exit the current browser task so the\r\n    // error can be observed.\r\n    //\r\n    // Intentionally not using a try-catch, since that makes some debugging\r\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\r\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\r\n    let hasMoreWork = true;\r\n    try {\r\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\r\n    } finally {\r\n      if (hasMoreWork) {\r\n        // If there's more work, schedule the next message event at the end\r\n        // of the preceding one.\r\n        schedulePerformWorkUntilDeadline();\r\n      } else {\r\n        isMessageLoopRunning = false;\r\n        scheduledHostCallback = null;\r\n      }\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n  // Yielding to the browser will give it a chance to paint, so we can\r\n  // reset this.\r\n  needsPaint = false;\r\n};\r\n\r\nlet schedulePerformWorkUntilDeadline;\r\nif (typeof localSetImmediate === 'function') {\r\n  // Node.js and old IE.\r\n  // There's a few reasons for why we prefer setImmediate.\r\n  //\r\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\r\n  // (Even though this is a DOM fork of the Scheduler, you could get here\r\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\r\n  // https://github.com/facebook/react/issues/20756\r\n  //\r\n  // But also, it runs earlier which is the semantic we want.\r\n  // If other browsers ever implement it, it's better to use it.\r\n  // Although both of these would be inferior to native scheduling.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetImmediate(performWorkUntilDeadline);\r\n  };\r\n} else if (typeof MessageChannel !== 'undefined') {\r\n  // DOM and Worker environments.\r\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\r\n  const channel = new MessageChannel();\r\n  const port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    port.postMessage(null);\r\n  };\r\n} else {\r\n  // We should only fallback here in non-browser environments.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetTimeout(performWorkUntilDeadline, 0);\r\n  };\r\n}\r\n\r\nfunction requestHostCallback(callback) {\r\n  scheduledHostCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    schedulePerformWorkUntilDeadline();\r\n  }\r\n}\r\n\r\nfunction requestHostTimeout(callback, ms) {\r\n  taskTimeoutID = localSetTimeout(() => {\r\n    callback(getCurrentTime());\r\n  }, ms);\r\n}\r\n\r\nfunction cancelHostTimeout() {\r\n  localClearTimeout(taskTimeoutID);\r\n  taskTimeoutID = -1;\r\n}\r\n\r\nconst unstable_requestPaint = requestPaint;\r\n\r\nexport {\r\n  ImmediatePriority as unstable_ImmediatePriority,\r\n  UserBlockingPriority as unstable_UserBlockingPriority,\r\n  NormalPriority as unstable_NormalPriority,\r\n  IdlePriority as unstable_IdlePriority,\r\n  LowPriority as unstable_LowPriority,\r\n  unstable_runWithPriority,\r\n  unstable_next,\r\n  unstable_scheduleCallback,\r\n  unstable_cancelCallback,\r\n  unstable_wrapCallback,\r\n  unstable_getCurrentPriorityLevel,\r\n  shouldYieldToHost as unstable_shouldYield,\r\n  unstable_requestPaint,\r\n  unstable_continueExecution,\r\n  unstable_pauseExecution,\r\n  unstable_getFirstCallbackNode,\r\n  getCurrentTime as unstable_now,\r\n  forceFrameRate as unstable_forceFrameRate,\r\n};\r\n\r\nexport const unstable_Profiling = enableProfiling\r\n  ? {\r\n      startLoggingProfilingEvents,\r\n      stopLoggingProfilingEvents,\r\n    }\r\n  : null;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport * as Scheduler from 'scheduler';\r\nimport ReactCurrentDispatcher from '../ReactCurrentDispatcher';\r\nimport ReactCurrentActQueue from '../ReactCurrentActQueue';\r\nimport ReactCurrentOwner from '../ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from '../ReactDebugCurrentFrame';\r\nimport ReactCurrentBatchConfig from '../ReactCurrentBatchConfig';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from '../ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentOwner,\r\n  ReactCurrentBatchConfig,\r\n\r\n  // Re-export the schedule API(s) for UMD bundles.\r\n  // This avoids introducing a dependency on a new UMD global in a minor update,\r\n  // Since that would be a breaking change (e.g. for all existing CodeSandboxes).\r\n  // This re-export is only required for UMD bundles;\r\n  // CJS bundles use the shared NPM package.\r\n  Scheduler,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","enableSchedulerDebugging","enableProfiling","frameYieldMs","heap","node","siftUp","peek","pop","first","last","siftDown","parentIndex","parent","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","getCurrentTime","hasPerformanceNow","performance","now","localPerformance","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","advanceTimers","currentTime","timer","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","isSchedulerPaused","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling","Scheduler","startTransition","scope","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":";;;;;;EAOA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,qBAAe,QAAf;;ECNA;EACA;EACA;EAEA;AACA,EAAO,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,EAAO,MAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;AACP,QAAaE,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,QAAaG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,QAAaI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,EAAO,MAAMK,mBAAmB,GAAGN,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,EAAO,MAAMM,kBAAkB,GAAGP,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,EAAO,MAAMO,yBAAyB,GAAGR,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAlC;AACP,EAAO,MAAMQ,sBAAsB,GAAGT,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,QAAaS,mBAAmB,GAAGV,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,QAAaU,wBAAwB,GAAGX,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACP,EAAO,MAAMW,eAAe,GAAGZ,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,EAAO,MAAMY,eAAe,GAAGb,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,QACaa,6BAA6B,GAAGd,MAAM,CAACC,GAAP,CAC3C,wBAD2C,CAAtC;AAGP,QAAac,oBAAoB,GAAGf,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA7B;AACP,QACae,gBAAgB,GAAGhB,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AACP,EACO,MAAMgB,6CAA6C,GAAGjB,MAAM,CAACC,GAAP,CAC3D,qBAD2D,CAAtD;EAIP,MAAMiB,qBAAqB,GAAGlB,MAAM,CAACmB,QAArC;EACA,MAAMC,oBAAoB,GAAG,YAA7B;AAEA,EAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;EACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;EAC/D,WAAO,IAAP;EACD;;EACD,QAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;EAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;EACvC,WAAOA,aAAP;EACD;;EACD,SAAO,IAAP;EACD;;ECtBD;;;;;EAGA,MAAMC,oBAAoB,GAAG;EAC3B;;;;;;;EAOAC,EAAAA,SAAS,EAAE,UAASC,cAAT,EAAyB;EAClC,WAAO,KAAP;EACD,GAV0B;;EAY3B;;;;;;;;;;;;;;;EAeAC,EAAAA,kBAAkB,EAAE,UAASD,cAAT,EAAyBE,QAAzB,EAAmCC,UAAnC,EAA+C;AACjEC,EACD,GA7B0B;;EA+B3B;;;;;;;;;;;;;EAaAC,EAAAA,mBAAmB,EAAE,UACnBL,cADmB,EAEnBM,aAFmB,EAGnBJ,QAHmB,EAInBC,UAJmB,EAKnB;AACAC,EACD,GAnD0B;;EAqD3B;;;;;;;;;;;;EAYAG,EAAAA,eAAe,EAAE,UACfP,cADe,EAEfQ,YAFe,EAGfN,QAHe,EAIfC,UAJe,EAKf;AACAC,EACD;EAxE0B,CAA7B;;ECzBA,MAAMK,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ECCA,MAAME,WAAW,GAAG,EAApB;EAKA;;;;;EAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;EAC1C,OAAKF,KAAL,GAAaA,KAAb;EACA,OAAKC,OAAL,GAAeA,OAAf,CAF0C;;EAI1C,OAAKE,IAAL,GAAYL,WAAZ,CAJ0C;EAM1C;;EACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;EACD;;EAEDc,SAAS,CAACK,SAAV,CAAoBC,gBAApB,GAAuC,EAAvC;EAEA;;;;;;;;;;;;;;;;;;;;;;;;;;EAyBAN,SAAS,CAACK,SAAV,CAAoBE,QAApB,GAA+B,UAASX,YAAT,EAAuBN,QAAvB,EAAiC;EAC9D,MACE,OAAOM,YAAP,KAAwB,QAAxB,IACA,OAAOA,YAAP,KAAwB,UADxB,IAEAA,YAAY,IAAI,IAHlB,EAIE;EACA,UAAM,IAAIY,KAAJ,CACJ,sEACE,sDAFE,CAAN;EAID;;EAED,OAAKL,OAAL,CAAaR,eAAb,CAA6B,IAA7B,EAAmCC,YAAnC,EAAiDN,QAAjD,EAA2D,UAA3D;EACD,CAbD;EAeA;;;;;;;;;;;;;;;;EAcAU,SAAS,CAACK,SAAV,CAAoBI,WAApB,GAAkC,UAASnB,QAAT,EAAmB;EACnD,OAAKa,OAAL,CAAad,kBAAb,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgD,aAAhD;EACD,CAFD;AAIA;EAqCA,SAASoB,cAAT,GAA0B;;EAC1BA,cAAc,CAACL,SAAf,GAA2BL,SAAS,CAACK,SAArC;EAEA;;;;EAGA,SAASM,aAAT,CAAuBV,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;EAC9C,OAAKF,KAAL,GAAaA,KAAb;EACA,OAAKC,OAAL,GAAeA,OAAf,CAF8C;;EAI9C,OAAKE,IAAL,GAAYL,WAAZ;EACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;EACD;;EAED,MAAM0B,sBAAsB,GAAID,aAAa,CAACN,SAAd,GAA0B,IAAIK,cAAJ,EAA1D;EACAE,sBAAsB,CAACC,WAAvB,GAAqCF,aAArC;;EAEAd,MAAM,CAACe,sBAAD,EAAyBZ,SAAS,CAACK,SAAnC,CAAN;EACAO,sBAAsB,CAACE,oBAAvB,GAA8C,IAA9C;;ECrIA;AACA,EAAO,SAASC,SAAT,GAAgC;EACrC,QAAMC,SAAS,GAAG;EAChBC,IAAAA,OAAO,EAAE;EADO,GAAlB;;EAMA,SAAOD,SAAP;EACD;;ECRD,MAAME,WAAW,GAAGC,KAAK,CAACC,OAA1B;;EAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;EAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;EACD;;ECPD,MAAMC,cAAc,GAAGxB,MAAM,CAACO,SAAP,CAAiBiB,cAAxC;;ECEA;;;;;;EAMA,MAAMC,iBAAiB,GAAG;EACxB;;;;EAIAN,EAAAA,OAAO,EAAG;EALc,CAA1B;;ECFA,MAAMO,cAAc,GAAG;EACrBC,EAAAA,GAAG,EAAE,IADgB;EAErBC,EAAAA,GAAG,EAAE,IAFgB;EAGrBC,EAAAA,MAAM,EAAE,IAHa;EAIrBC,EAAAA,QAAQ,EAAE;EAJW,CAAvB;AAOA;EAQA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;EAQA,SAAOA,MAAM,CAACJ,GAAP,KAAeK,SAAtB;EACD;;EAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;AAC3B;EAQA,SAAOA,MAAM,CAACL,GAAP,KAAeM,SAAtB;EACD;EA2ED;;;;;;;;;;;;;;;;;;;;;;EAoBA,MAAME,YAAY,GAAG,UAASC,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,EAAqD;EACxE,QAAMqC,OAAO,GAAG;EACd;EACAC,IAAAA,QAAQ,EAAE9E,kBAFI;EAId;EACAyE,IAAAA,IAAI,EAAEA,IALQ;EAMdT,IAAAA,GAAG,EAAEA,GANS;EAOdC,IAAAA,GAAG,EAAEA,GAPS;EAQdzB,IAAAA,KAAK,EAAEA,KARO;EAUd;EACAuC,IAAAA,MAAM,EAAEH;EAXM,GAAhB;;EAoDA,SAAOC,OAAP;EACD,CAtDD;AAwDA,EA0JA;;;;;AAIA,EAAO,SAASG,aAAT,CAAuBP,IAAvB,EAA6BJ,MAA7B,EAAqCY,QAArC,EAA+C;EACpD,MAAIC,QAAJ,CADoD;;EAIpD,QAAM1C,KAAK,GAAG,EAAd;EAEA,MAAIwB,GAAG,GAAG,IAAV;EACA,MAAIC,GAAG,GAAG,IAAV;EACA,MAAIS,IAAI,GAAG,IAAX;EACA,MAAIC,MAAM,GAAG,IAAb;;EAEA,MAAIN,MAAM,IAAI,IAAd,EAAoB;EAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;EACvBJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;EAKD;;EACD,QAAIM,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;EAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;EACD;;EAEDU,IAAAA,IAAI,GAAGL,MAAM,CAACH,MAAP,KAAkBI,SAAlB,GAA8B,IAA9B,GAAqCD,MAAM,CAACH,MAAnD;EACAS,IAAAA,MAAM,GAAGN,MAAM,CAACF,QAAP,KAAoBG,SAApB,GAAgC,IAAhC,GAAuCD,MAAM,CAACF,QAAvD,CAhBkB;;EAkBlB,SAAKe,QAAL,IAAiBb,MAAjB,EAAyB;EACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;EACA1C,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;EACD;EACF;EACF,GArCmD;EAwCpD;;;EACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;EACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;EACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;EACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;EAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;EACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;EACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;EACD;;EAMDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;EACD,GAvDmD;;;EA0DpD,MAAId,IAAI,IAAIA,IAAI,CAACgB,YAAjB,EAA+B;EAC7B,UAAMA,YAAY,GAAGhB,IAAI,CAACgB,YAA1B;;EACA,SAAKP,QAAL,IAAiBO,YAAjB,EAA+B;EAC7B,UAAIjD,KAAK,CAAC0C,QAAD,CAAL,KAAoBZ,SAAxB,EAAmC;EACjC9B,QAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;EACD;EACF;EACF;;EAeD,SAAOV,YAAY,CACjBC,IADiB,EAEjBT,GAFiB,EAGjBC,GAHiB,EAIjBS,IAJiB,EAKjBC,MALiB,EAMjBb,iBAAiB,CAACN,OAND,EAOjBhB,KAPiB,CAAnB;EASD;EAED;;;;;AAIA,EAAO,SAASkD,aAAT,CAAuBjB,IAAvB,EAA6B;EAClC,QAAMkB,OAAO,GAAGX,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyBnB,IAAzB,CAAhB,CADkC;EAGlC;EACA;EACA;EACA;;EACAkB,EAAAA,OAAO,CAAClB,IAAR,GAAeA,IAAf;EACA,SAAOkB,OAAP;EACD;AAED,EAAO,SAASE,kBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;EACrD,QAAMC,UAAU,GAAGxB,YAAY,CAC7BsB,UAAU,CAACrB,IADkB,EAE7BsB,MAF6B,EAG7BD,UAAU,CAAC7B,GAHkB,EAI7B6B,UAAU,CAACG,KAJkB,EAK7BH,UAAU,CAACI,OALkB,EAM7BJ,UAAU,CAACf,MANkB,EAO7Be,UAAU,CAACtD,KAPkB,CAA/B;EAUA,SAAOwD,UAAP;EACD;EAED;;;;;AAIA,EAAO,SAASG,YAAT,CAAsBtB,OAAtB,EAA+BR,MAA/B,EAAuCY,QAAvC,EAAiD;EACtD,MAAIJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKP,SAApC,EAA+C;EAC7C,UAAM,IAAIvB,KAAJ,oFAC6E8B,OAD7E,OAAN;EAGD;;EAED,MAAIK,QAAJ,CAPsD;;EAUtD,QAAM1C,KAAK,GAAGJ,MAAM,CAAC,EAAD,EAAKyC,OAAO,CAACrC,KAAb,CAApB,CAVsD;;EAatD,MAAIwB,GAAG,GAAGa,OAAO,CAACb,GAAlB;EACA,MAAIC,GAAG,GAAGY,OAAO,CAACZ,GAAlB,CAdsD;;EAgBtD,QAAMS,IAAI,GAAGG,OAAO,CAACoB,KAArB,CAhBsD;EAkBtD;EACA;;EACA,QAAMtB,MAAM,GAAGE,OAAO,CAACqB,OAAvB,CApBsD;;EAuBtD,MAAItB,KAAK,GAAGC,OAAO,CAACE,MAApB;;EAEA,MAAIV,MAAM,IAAI,IAAd,EAAoB;EAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;EACvB;EACAJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;EACAW,MAAAA,KAAK,GAAGd,iBAAiB,CAACN,OAA1B;EACD;;EACD,QAAIe,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;EAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;EACD,KAXiB;;;EAclB,QAAIyB,YAAJ;;EACA,QAAIZ,OAAO,CAACJ,IAAR,IAAgBI,OAAO,CAACJ,IAAR,CAAagB,YAAjC,EAA+C;EAC7CA,MAAAA,YAAY,GAAGZ,OAAO,CAACJ,IAAR,CAAagB,YAA5B;EACD;;EACD,SAAKP,QAAL,IAAiBb,MAAjB,EAAyB;EACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;EACA,YAAIb,MAAM,CAACa,QAAD,CAAN,KAAqBZ,SAArB,IAAkCmB,YAAY,KAAKnB,SAAvD,EAAkE;EAChE;EACA9B,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBO,YAAY,CAACP,QAAD,CAA9B;EACD,SAHD,MAGO;EACL1C,UAAAA,KAAK,CAAC0C,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;EACD;EACF;EACF;EACF,GAxDqD;EA2DtD;;;EACA,QAAME,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAA1C;;EACA,MAAIF,cAAc,KAAK,CAAvB,EAA0B;EACxB5C,IAAAA,KAAK,CAACyC,QAAN,GAAiBA,QAAjB;EACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;EAC7B,UAAMG,UAAU,GAAG7B,KAAK,CAAC0B,cAAD,CAAxB;;EACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAApB,EAAoCI,CAAC,EAArC,EAAyC;EACvCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBH,SAAS,CAACG,CAAC,GAAG,CAAL,CAAzB;EACD;;EACDhD,IAAAA,KAAK,CAACyC,QAAN,GAAiBM,UAAjB;EACD;;EAED,SAAOf,YAAY,CAACK,OAAO,CAACJ,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CpC,KAA9C,CAAnB;EACD;EAED;;;;;;;;AAOA,EAAO,SAAS4D,cAAT,CAAwBC,MAAxB,EAAgC;EACrC,SACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAACvB,QAAP,KAAoB9E,kBAHtB;EAKD;;ECviBD,MAAMsG,SAAS,GAAG,GAAlB;EACA,MAAMC,YAAY,GAAG,GAArB;EAEA;;;;;;;EAMA,SAASC,MAAT,CAAgBxC,GAAhB,EAAqC;EACnC,QAAMyC,WAAW,GAAG,OAApB;EACA,QAAMC,aAAa,GAAG;EACpB,SAAK,IADe;EAEpB,SAAK;EAFe,GAAtB;EAIA,QAAMC,aAAa,GAAG3C,GAAG,CAAC4C,OAAJ,CAAYH,WAAZ,EAAyB,UAASI,KAAT,EAAgB;EAC7D,WAAOH,aAAa,CAACG,KAAD,CAApB;EACD,GAFqB,CAAtB;EAIA,SAAO,MAAMF,aAAb;EACD;AAED,EAOA,MAAMG,0BAA0B,GAAG,MAAnC;;EACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;EACnD,SAAOA,IAAI,CAACJ,OAAL,CAAaE,0BAAb,EAAyC,KAAzC,CAAP;EACD;EAED;;;;;;;;;EAOA,SAASG,aAAT,CAAuBpC,OAAvB,EAAqCqC,KAArC,EAA4D;EAC1D;EACA;EACA,MAAI,OAAOrC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmDA,OAAO,CAACb,GAAR,IAAe,IAAtE,EAA4E;AAC1E;EAIA,WAAOwC,MAAM,CAAC,KAAK3B,OAAO,CAACb,GAAd,CAAb;EACD,GATyD;;;EAW1D,SAAOkD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAP;EACD;;EAED,SAASC,YAAT,CACEnC,QADF,EAEEoC,KAFF,EAGEC,aAHF,EAIEC,SAJF,EAKE1F,QALF,EAMU;EACR,QAAM4C,IAAI,GAAG,OAAOQ,QAApB;;EAEA,MAAIR,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAArC,EAAgD;EAC9C;EACAQ,IAAAA,QAAQ,GAAG,IAAX;EACD;;EAED,MAAIuC,cAAc,GAAG,KAArB;;EAEA,MAAIvC,QAAQ,KAAK,IAAjB,EAAuB;EACrBuC,IAAAA,cAAc,GAAG,IAAjB;EACD,GAFD,MAEO;EACL,YAAQ/C,IAAR;EACE,WAAK,QAAL;EACA,WAAK,QAAL;EACE+C,QAAAA,cAAc,GAAG,IAAjB;EACA;;EACF,WAAK,QAAL;EACE,gBAASvC,QAAD,CAAgBH,QAAxB;EACE,eAAK9E,kBAAL;EACA,eAAKG,iBAAL;EACEqH,YAAAA,cAAc,GAAG,IAAjB;EAHJ;;EANJ;EAYD;;EAED,MAAIA,cAAJ,EAAoB;EAClB,UAAMC,KAAK,GAAGxC,QAAd;EACA,QAAIyC,WAAW,GAAG7F,QAAQ,CAAC4F,KAAD,CAA1B,CAFkB;EAIlB;;EACA,UAAME,QAAQ,GACZJ,SAAS,KAAK,EAAd,GAAmBjB,SAAS,GAAGW,aAAa,CAACQ,KAAD,EAAQ,CAAR,CAA5C,GAAyDF,SAD3D;;EAEA,QAAI5D,OAAO,CAAC+D,WAAD,CAAX,EAA0B;EACxB,UAAIE,eAAe,GAAG,EAAtB;;EACA,UAAID,QAAQ,IAAI,IAAhB,EAAsB;EACpBC,QAAAA,eAAe,GAAGb,qBAAqB,CAACY,QAAD,CAArB,GAAkC,GAApD;EACD;;EACDP,MAAAA,YAAY,CAACM,WAAD,EAAcL,KAAd,EAAqBO,eAArB,EAAsC,EAAtC,EAA0CC,CAAC,IAAIA,CAA/C,CAAZ;EACD,KAND,MAMO,IAAIH,WAAW,IAAI,IAAnB,EAAyB;EAC9B,UAAItB,cAAc,CAACsB,WAAD,CAAlB,EAAiC;AAC/B;EAQAA,QAAAA,WAAW,GAAG7B,kBAAkB,CAC9B6B,WAD8B;EAG9B;EACAJ,QAAAA,aAAa;EAEVI,QAAAA,WAAW,CAAC1D,GAAZ,KAAoB,CAACyD,KAAD,IAAUA,KAAK,CAACzD,GAAN,KAAc0D,WAAW,CAAC1D,GAAxD;EAEG;EACA+C,QAAAA,qBAAqB,CAAC,KAAKW,WAAW,CAAC1D,GAAlB,CAArB,GAA8C,GAHjD,GAIG,EANO,CAAb,GAOE2D,QAX4B,CAAhC;EAaD;;EACDN,MAAAA,KAAK,CAACS,IAAN,CAAWJ,WAAX;EACD;;EACD,WAAO,CAAP;EACD;;EAED,MAAID,KAAJ;EACA,MAAIM,QAAJ;EACA,MAAIC,YAAY,GAAG,CAAnB,CAvEQ;;EAwER,QAAMC,cAAc,GAClBV,SAAS,KAAK,EAAd,GAAmBjB,SAAnB,GAA+BiB,SAAS,GAAGhB,YAD7C;;EAGA,MAAI5C,OAAO,CAACsB,QAAD,CAAX,EAAuB;EACrB,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACK,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;EACxCiC,MAAAA,KAAK,GAAGxC,QAAQ,CAACO,CAAD,CAAhB;EACAuC,MAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQjC,CAAR,CAAzC;EACAwC,MAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;EAOD;EACF,GAZD,MAYO;EACL,UAAMqG,UAAU,GAAG5G,aAAa,CAAC2D,QAAD,CAAhC;;EACA,QAAI,OAAOiD,UAAP,KAAsB,UAA1B,EAAsC;EACpC,YAAMC,gBAEL,GAAIlD,QAFL;;EAiBA,YAAM7D,QAAQ,GAAG8G,UAAU,CAAC/C,IAAX,CAAgBgD,gBAAhB,CAAjB;EACA,UAAIC,IAAJ;EACA,UAAIC,EAAE,GAAG,CAAT;;EACA,aAAO,CAAC,CAACD,IAAI,GAAGhH,QAAQ,CAACkH,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;EACrCd,QAAAA,KAAK,GAAGW,IAAI,CAACI,KAAb;EACAT,QAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQY,EAAE,EAAV,CAAzC;EACAL,QAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1BlG,QAL0B,CAA5B;EAOD;EACF,KAhCD,MAgCO,IAAI4C,IAAI,KAAK,QAAb,EAAuB;EAC5B;EACA,YAAMgE,cAAc,GAAGC,MAAM,CAAEzD,QAAF,CAA7B;EAEA,YAAM,IAAIlC,KAAJ,CACJ,qDACE0F,cAAc,KAAK,iBAAnB,GACI,uBACApG,MAAM,CAACsG,IAAP,CAAa1D,QAAb,EAA6B2D,IAA7B,CAAkC,IAAlC,CADA,GAEA,GAHJ,GAIIH,cALN,YAOE,gEAPF,GAQE,UATE,CAAN;EAWD;EACF;;EAED,SAAOT,YAAP;EACD;;EAID;;;;;;;;;;;;;EAaA,SAASa,WAAT,CACE5D,QADF,EAEE6D,IAFF,EAGErG,OAHF,EAIsB;EACpB,MAAIwC,QAAQ,IAAI,IAAhB,EAAsB;EACpB,WAAOA,QAAP;EACD;;EACD,QAAM8D,MAAM,GAAG,EAAf;EACA,MAAIC,KAAK,GAAG,CAAZ;EACA5B,EAAAA,YAAY,CAACnC,QAAD,EAAW8D,MAAX,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,UAAStB,KAAT,EAAgB;EACrD,WAAOqB,IAAI,CAAC3D,IAAL,CAAU1C,OAAV,EAAmBgF,KAAnB,EAA0BuB,KAAK,EAA/B,CAAP;EACD,GAFW,CAAZ;EAGA,SAAOD,MAAP;EACD;EAED;;;;;;;;;;;EASA,SAASE,aAAT,CAAuBhE,QAAvB,EAAyD;EACvD,MAAIiE,CAAC,GAAG,CAAR;EACAL,EAAAA,WAAW,CAAC5D,QAAD,EAAW,MAAM;EAC1BiE,IAAAA,CAAC,GADyB;EAG3B,GAHU,CAAX;EAIA,SAAOA,CAAP;EACD;;EAID;;;;;;;;;;;;EAYA,SAASC,eAAT,CACElE,QADF,EAEEmE,WAFF,EAGEC,cAHF,EAIQ;EACNR,EAAAA,WAAW,CACT5D,QADS,EAET,YAAW;EACTmE,IAAAA,WAAW,CAACE,KAAZ,CAAkB,IAAlB,EAAwBjE,SAAxB,EADS;EAGV,GALQ,EAMTgE,cANS,CAAX;EAQD;EAED;;;;;;;;EAMA,SAASE,OAAT,CAAiBtE,QAAjB,EAA8D;EAC5D,SAAO4D,WAAW,CAAC5D,QAAD,EAAWwC,KAAK,IAAIA,KAApB,CAAX,IAAyC,EAAhD;EACD;EAED;;;;;;;;;;;;;;;;EAcA,SAAS+B,SAAT,CAAsBvE,QAAtB,EAAsC;EACpC,MAAI,CAACmB,cAAc,CAACnB,QAAD,CAAnB,EAA+B;EAC7B,UAAM,IAAIlC,KAAJ,CACJ,uEADI,CAAN;EAGD;;EAED,SAAOkC,QAAP;EACD;;ECjUM,SAASwE,aAAT,CAA0BC,YAA1B,EAA4D;EACjE;EACA;EAEA,QAAMjH,OAAwB,GAAG;EAC/BqC,IAAAA,QAAQ,EAAEtE,kBADqB;EAE/B;EACA;EACA;EACA;EACA;EACAmJ,IAAAA,aAAa,EAAED,YAPgB;EAQ/BE,IAAAA,cAAc,EAAEF,YARe;EAS/B;EACA;EACAG,IAAAA,YAAY,EAAE,CAXiB;EAY/B;EACAC,IAAAA,QAAQ,EAAG,IAboB;EAc/BC,IAAAA,QAAQ,EAAG,IAdoB;EAgB/B;EACAC,IAAAA,aAAa,EAAG,IAjBe;EAkB/BC,IAAAA,WAAW,EAAG;EAlBiB,GAAjC;EAqBAxH,EAAAA,OAAO,CAACqH,QAAR,GAAmB;EACjBhF,IAAAA,QAAQ,EAAEvE,mBADO;EAEjB2J,IAAAA,QAAQ,EAAEzH;EAFO,GAAnB;AAKA;EAIA,EA+EO;EACLA,IAAAA,OAAO,CAACsH,QAAR,GAAmBtH,OAAnB;EACD;;EAOD,SAAOA,OAAP;EACD;;EC3HD,MAAM0H,aAAa,GAAG,CAAC,CAAvB;EACA,MAAMC,OAAO,GAAG,CAAhB;EACA,MAAMC,QAAQ,GAAG,CAAjB;EACA,MAAMC,QAAQ,GAAG,CAAjB;;EAkCA,SAASC,eAAT,CAA4BC,OAA5B,EAAoD;EAClD,MAAIA,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;EACrC,UAAMO,IAAI,GAAGF,OAAO,CAACG,OAArB;EACA,UAAMC,QAAQ,GAAGF,IAAI,EAArB,CAFqC;EAIrC;EACA;EACA;EACA;;EACAE,IAAAA,QAAQ,CAACC,IAAT,CACEC,YAAY,IAAI;EACd,UAAIN,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;EACpE;EACA,cAAMY,QAA4B,GAAIP,OAAtC;EACAO,QAAAA,QAAQ,CAACN,OAAT,GAAmBJ,QAAnB;EACAU,QAAAA,QAAQ,CAACJ,OAAT,GAAmBG,YAAnB;EACD;EACF,KARH,EASEE,KAAK,IAAI;EACP,UAAIR,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;EACpE;EACA,cAAMc,QAAyB,GAAIT,OAAnC;EACAS,QAAAA,QAAQ,CAACR,OAAT,GAAmBH,QAAnB;EACAW,QAAAA,QAAQ,CAACN,OAAT,GAAmBK,KAAnB;EACD;EACF,KAhBH;;EAkBA,QAAIR,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;EACrC;EACA;EACA,YAAMe,OAAuB,GAAIV,OAAjC;EACAU,MAAAA,OAAO,CAACT,OAAR,GAAkBL,OAAlB;EACAc,MAAAA,OAAO,CAACP,OAAR,GAAkBC,QAAlB;EACD;EACF;;EACD,MAAIJ,OAAO,CAACC,OAAR,KAAoBJ,QAAxB,EAAkC;EAChC,UAAMS,YAAY,GAAGN,OAAO,CAACG,OAA7B;;EA4BA,WAAOG,YAAY,CAACK,OAApB;EACD,GA9BD,MA8BO;EACL,UAAMX,OAAO,CAACG,OAAd;EACD;EACF;;AAED,EAAO,SAASS,IAAT,CACLV,IADK,EAEyB;EAC9B,QAAMF,OAAmB,GAAG;EAC1B;EACAC,IAAAA,OAAO,EAAEN,aAFiB;EAG1BQ,IAAAA,OAAO,EAAED;EAHiB,GAA5B;EAMA,QAAMW,QAAsC,GAAG;EAC7CvG,IAAAA,QAAQ,EAAEhE,eADmC;EAE7CwK,IAAAA,QAAQ,EAAEd,OAFmC;EAG7Ce,IAAAA,KAAK,EAAEhB;EAHsC,GAA/C;;EAqDA,SAAOc,QAAP;EACD;;EC9KM,SAASG,UAAT,CACLC,MADK,EAEL;AACA;EAiCA,QAAMC,WAAW,GAAG;EAClB5G,IAAAA,QAAQ,EAAEpE,sBADQ;EAElB+K,IAAAA;EAFkB,GAApB;;EA4BA,SAAOC,WAAP;EACD;;EC/DM,SAASC,IAAT,CACLlH,IADK,EAELmH,OAFK,EAGL;AACA;EASA,QAAMF,WAAW,GAAG;EAClB5G,IAAAA,QAAQ,EAAEjE,eADQ;EAElB4D,IAAAA,IAFkB;EAGlBmH,IAAAA,OAAO,EAAEA,OAAO,KAAKtH,SAAZ,GAAwB,IAAxB,GAA+BsH;EAHtB,GAApB;;EA6BA,SAAOF,WAAP;EACD;;EC3CD;;;EAGA,MAAMG,sBAAsB,GAAG;EAC7B;;;;EAIArI,EAAAA,OAAO,EAAG;EALmB,CAA/B;;ECSA,SAASsI,iBAAT,GAA6B;EAC3B,QAAMC,UAAU,GAAGF,sBAAsB,CAACrI,OAA1C;EAcA;EACA;;;EACA,SAASuI,UAAT;EACD;;AAED,EAAO,SAASC,cAAT,GAAuC;EAC5C,QAAMD,UAAU,GAAGD,iBAAiB,EAApC,CAD4C;;EAG5C,SAAOC,UAAU,CAACC,cAAX,EAAP;EACD;AAED,EAAO,SAASC,eAAT,CAA4BC,YAA5B,EAAsD;EAC3D,QAAMH,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;EAG3D,SAAOC,UAAU,CAACE,eAAX,CAA2BC,YAA3B,CAAP;EACD;AAED,EAAO,SAASC,UAAT,CAAuBC,OAAvB,EAAoD;EACzD,QAAML,UAAU,GAAGD,iBAAiB,EAApC;;EAoBA,SAAOC,UAAU,CAACI,UAAX,CAAsBC,OAAtB,CAAP;EACD;AAED,EAAO,SAASC,QAAT,CACLC,YADK,EAE+B;EACpC,QAAMP,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACM,QAAX,CAAoBC,YAApB,CAAP;EACD;AAED,EAAO,SAASC,UAAT,CACLC,OADK,EAELC,UAFK,EAGLC,IAHK,EAIa;EAClB,QAAMX,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACQ,UAAX,CAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,IAA3C,CAAP;EACD;AAED,EAAO,SAASC,MAAT,CAAmBC,YAAnB,EAAoD;EACzD,QAAMb,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACY,MAAX,CAAkBC,YAAlB,CAAP;EACD;AAED,EAAO,SAASC,SAAT,CACLC,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACc,SAAX,CAAqBC,MAArB,EAA6BC,IAA7B,CAAP;EACD;AAED,EAAO,SAASC,kBAAT,CACLF,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACiB,kBAAX,CAA8BF,MAA9B,EAAsCC,IAAtC,CAAP;EACD;AAED,EAAO,SAASE,eAAT,CACLH,MADK,EAELC,IAFK,EAGC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACkB,eAAX,CAA2BH,MAA3B,EAAmCC,IAAnC,CAAP;EACD;AAED,EAAO,SAASG,WAAT,CACLrL,QADK,EAELkL,IAFK,EAGF;EACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACmB,WAAX,CAAuBrL,QAAvB,EAAiCkL,IAAjC,CAAP;EACD;AAED,EAAO,SAASI,OAAT,CACLL,MADK,EAELC,IAFK,EAGF;EACH,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACoB,OAAX,CAAmBL,MAAnB,EAA2BC,IAA3B,CAAP;EACD;AAED,EAAO,SAASK,mBAAT,CACLnJ,GADK,EAEL6I,MAFK,EAGLC,IAHK,EAIC;EACN,QAAMhB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACqB,mBAAX,CAA+BnJ,GAA/B,EAAoC6I,MAApC,EAA4CC,IAA5C,CAAP;EACD;AAED,EAAO,SAASM,aAAT,CACL7E,KADK,EAEL8E,WAFK,EAGC;AACN,EAID;AAED,EAEO,SAASC,aAAT,GAGL;EACA,QAAMxB,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACwB,aAAX,EAAP;EACD;AAED,EAAO,SAASC,gBAAT,CAA6BhF,KAA7B,EAA0C;EAC/C,QAAMuD,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAACyB,gBAAX,CAA4BhF,KAA5B,CAAP;EACD;AAED,EAAO,SAASiF,KAAT,GAAyB;EAC9B,QAAM1B,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAAC0B,KAAX,EAAP;EACD;AAED,EASO,SAASC,oBAAT,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,EAIF;EACH,QAAM9B,UAAU,GAAGD,iBAAiB,EAApC;EACA,SAAOC,UAAU,CAAC2B,oBAAX,CACLC,SADK,EAELC,WAFK,EAGLC,iBAHK,CAAP;EAKD;AAED,EAAO,SAASC,eAAT,GAAsD;EAC3D,QAAM/B,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;EAG3D,SAAOC,UAAU,CAAC+B,eAAX,EAAP;EACD;;EC/LD;;;;EAIA,MAAMC,uBAAoC,GAAG;EAC3CC,EAAAA,UAAU,EAAE;EAD+B,CAA7C;;EChBO,MAAMC,eAEZ,GAAG,EAFG;;ECaP,MAAMC,oBAAoB,GAAG;EAC3BrC,EAAAA,sBAD2B;EAE3BkC,EAAAA,uBAF2B;EAG3BjK,EAAAA;EAH2B,CAA7B;;AAWA,EAAyB;EACvBoK,EAAAA,oBAAoB,CAACD,eAArB,GAAuCA,eAAvC;EACD;;ECLD,MAAMA,iBAAe,GAAGC,oBAAoB,CAACD,eAA7C;AAEA,EAAO,SAASE,mBAAT,CACLC,UADK,EAEL1E,YAFK,EAGkB;AACvB;EAGA,MAAI2E,UAAU,GAAG,IAAjB;;EACA,MAAI,CAACJ,iBAAe,CAACG,UAAD,CAApB,EAAkC;EAChCC,IAAAA,UAAU,GAAG,KAAb;EACA,UAAM5L,OAA8B,GAAG;EACrCqC,MAAAA,QAAQ,EAAErE,yBAD2B;EAGrC;EACA;EACA;EACA;EACA;EACAkJ,MAAAA,aAAa,EAAED,YARsB;EASrCE,MAAAA,cAAc,EAAEF,YATqB;EAWrCM,MAAAA,aAAa,EAAEN,YAXsB;EAarC;EACA;EACAG,MAAAA,YAAY,EAAE,CAfuB;EAgBrC;EACAC,MAAAA,QAAQ,EAAG,IAjB0B;EAkBrCC,MAAAA,QAAQ,EAAG,IAlB0B;EAmBrCE,MAAAA,WAAW,EAAEmE;EAnBwB,KAAvC;EAsBA3L,IAAAA,OAAO,CAACqH,QAAR,GAAmB;EACjBhF,MAAAA,QAAQ,EAAEvE,mBADO;EAEjB2J,MAAAA,QAAQ,EAAEzH;EAFO,KAAnB;;EA0BAwL,IAAAA,iBAAe,CAACG,UAAD,CAAf,GAA8B3L,OAA9B;EACD;;EAED,QAAMA,OAAO,GAAGwL,iBAAe,CAACG,UAAD,CAA/B;;EACA,MAAI3L,OAAO,CAACuH,aAAR,KAA0B9I,6CAA9B,EAA6E;EAC3EuB,IAAAA,OAAO,CAACuH,aAAR,GAAwBN,YAAxB;;EACA,QACEjH,OAAO,CAACkH,aAAR,KAA0BzI,6CAD5B,EAEE;EACAuB,MAAAA,OAAO,CAACkH,aAAR,GAAwBD,YAAxB;EACD;;EACD,QACEjH,OAAO,CAACmH,cAAR,KAA2B1I,6CAD7B,EAEE;EACAuB,MAAAA,OAAO,CAACmH,cAAR,GAAyBF,YAAzB;EACD;EACF,GAZD,MAYO,IAAI2E,UAAJ,EAAgB;EACrB,UAAM,IAAItL,KAAJ,qBAA4BqL,UAA5B,sBAAN;EACD;;EACD,SAAO3L,OAAP;EACD;;EC/FM,MAAM6L,wBAAwB,GAAG,KAAjC;AACP,EACO,MAAMC,eAAe,GAAG,KAAxB;AACP,EACO,MAAMC,YAAY,GAAG,CAArB;;ECGA,SAAS1G,IAAT,CAAc2G,IAAd,EAA0BC,IAA1B,EAA4C;EACjD,QAAMxH,KAAK,GAAGuH,IAAI,CAACnJ,MAAnB;EACAmJ,EAAAA,IAAI,CAAC3G,IAAL,CAAU4G,IAAV;EACAC,EAAAA,MAAM,CAACF,IAAD,EAAOC,IAAP,EAAaxH,KAAb,CAAN;EACD;AAED,EAAO,SAAS0H,IAAT,CAAcH,IAAd,EAAuC;EAC5C,SAAOA,IAAI,CAACnJ,MAAL,KAAgB,CAAhB,GAAoB,IAApB,GAA2BmJ,IAAI,CAAC,CAAD,CAAtC;EACD;AAED,EAAO,SAASI,GAAT,CAAaJ,IAAb,EAAsC;EAC3C,MAAIA,IAAI,CAACnJ,MAAL,KAAgB,CAApB,EAAuB;EACrB,WAAO,IAAP;EACD;;EACD,QAAMwJ,KAAK,GAAGL,IAAI,CAAC,CAAD,CAAlB;EACA,QAAMM,IAAI,GAAGN,IAAI,CAACI,GAAL,EAAb;;EACA,MAAIE,IAAI,KAAKD,KAAb,EAAoB;EAClBL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUM,IAAV;EACAC,IAAAA,QAAQ,CAACP,IAAD,EAAOM,IAAP,EAAa,CAAb,CAAR;EACD;;EACD,SAAOD,KAAP;EACD;;EAED,SAASH,MAAT,CAAgBF,IAAhB,EAAsBC,IAAtB,EAA4BlJ,CAA5B,EAA+B;EAC7B,MAAI0B,KAAK,GAAG1B,CAAZ;;EACA,SAAO0B,KAAK,GAAG,CAAf,EAAkB;EAChB,UAAM+H,WAAW,GAAI/H,KAAK,GAAG,CAAT,KAAgB,CAApC;EACA,UAAMgI,MAAM,GAAGT,IAAI,CAACQ,WAAD,CAAnB;;EACA,QAAIrD,OAAO,CAACsD,MAAD,EAASR,IAAT,CAAP,GAAwB,CAA5B,EAA+B;EAC7B;EACAD,MAAAA,IAAI,CAACQ,WAAD,CAAJ,GAAoBP,IAApB;EACAD,MAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcgI,MAAd;EACAhI,MAAAA,KAAK,GAAG+H,WAAR;EACD,KALD,MAKO;EACL;EACA;EACD;EACF;EACF;;EAED,SAASD,QAAT,CAAkBP,IAAlB,EAAwBC,IAAxB,EAA8BlJ,CAA9B,EAAiC;EAC/B,MAAI0B,KAAK,GAAG1B,CAAZ;EACA,QAAMF,MAAM,GAAGmJ,IAAI,CAACnJ,MAApB;EACA,QAAM6J,UAAU,GAAG7J,MAAM,KAAK,CAA9B;;EACA,SAAO4B,KAAK,GAAGiI,UAAf,EAA2B;EACzB,UAAMC,SAAS,GAAG,CAAClI,KAAK,GAAG,CAAT,IAAc,CAAd,GAAkB,CAApC;EACA,UAAMmI,IAAI,GAAGZ,IAAI,CAACW,SAAD,CAAjB;EACA,UAAME,UAAU,GAAGF,SAAS,GAAG,CAA/B;EACA,UAAMG,KAAK,GAAGd,IAAI,CAACa,UAAD,CAAlB,CAJyB;;EAOzB,QAAI1D,OAAO,CAACyD,IAAD,EAAOX,IAAP,CAAP,GAAsB,CAA1B,EAA6B;EAC3B,UAAIY,UAAU,GAAGhK,MAAb,IAAuBsG,OAAO,CAAC2D,KAAD,EAAQF,IAAR,CAAP,GAAuB,CAAlD,EAAqD;EACnDZ,QAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcqI,KAAd;EACAd,QAAAA,IAAI,CAACa,UAAD,CAAJ,GAAmBZ,IAAnB;EACAxH,QAAAA,KAAK,GAAGoI,UAAR;EACD,OAJD,MAIO;EACLb,QAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcmI,IAAd;EACAZ,QAAAA,IAAI,CAACW,SAAD,CAAJ,GAAkBV,IAAlB;EACAxH,QAAAA,KAAK,GAAGkI,SAAR;EACD;EACF,KAVD,MAUO,IAAIE,UAAU,GAAGhK,MAAb,IAAuBsG,OAAO,CAAC2D,KAAD,EAAQb,IAAR,CAAP,GAAuB,CAAlD,EAAqD;EAC1DD,MAAAA,IAAI,CAACvH,KAAD,CAAJ,GAAcqI,KAAd;EACAd,MAAAA,IAAI,CAACa,UAAD,CAAJ,GAAmBZ,IAAnB;EACAxH,MAAAA,KAAK,GAAGoI,UAAR;EACD,KAJM,MAIA;EACL;EACA;EACD;EACF;EACF;;EAED,SAAS1D,OAAT,CAAiBhI,CAAjB,EAAoB4L,CAApB,EAAuB;EACrB;EACA,QAAMC,IAAI,GAAG7L,CAAC,CAAC8L,SAAF,GAAcF,CAAC,CAACE,SAA7B;EACA,SAAOD,IAAI,KAAK,CAAT,GAAaA,IAAb,GAAoB7L,CAAC,CAAC+L,EAAF,GAAOH,CAAC,CAACG,EAApC;EACD;;EChFD;AACA,EACO,MAAMC,iBAAiB,GAAG,CAA1B;AACP,EAAO,MAAMC,oBAAoB,GAAG,CAA7B;AACP,EAAO,MAAMC,cAAc,GAAG,CAAvB;AACP,EAAO,MAAMC,WAAW,GAAG,CAApB;AACP,EAAO,MAAMC,YAAY,GAAG,CAArB;;ECwGA,SAASC,eAAT,CACLC,IADK,EAMLC,EANK,EAOL;AACA,EAKD;;EC9HD;AAEA,EAiCA,IAAIC,cAAJ;EACA,MAAMC,iBAAiB,GACrB,OAAOC,WAAP,KAAuB,QAAvB,IAAmC,OAAOA,WAAW,CAACC,GAAnB,KAA2B,UADhE;;EAGA,IAAIF,iBAAJ,EAAuB;EACrB,QAAMG,gBAAgB,GAAGF,WAAzB;;EACAF,EAAAA,cAAc,GAAG,MAAMI,gBAAgB,CAACD,GAAjB,EAAvB;EACD,CAHD,MAGO;EACL,QAAME,SAAS,GAAGC,IAAlB;EACA,QAAMC,WAAW,GAAGF,SAAS,CAACF,GAAV,EAApB;;EACAH,EAAAA,cAAc,GAAG,MAAMK,SAAS,CAACF,GAAV,KAAkBI,WAAzC;EACD;EAGD;EACA;;;EACA,IAAIC,iBAAiB,GAAG,UAAxB;;EAGA,IAAIC,0BAA0B,GAAG,CAAC,CAAlC;;EAEA,IAAIC,8BAA8B,GAAG,GAArC;EACA,IAAIC,uBAAuB,GAAG,IAA9B;EACA,IAAIC,oBAAoB,GAAG,KAA3B;;EAEA,IAAIC,qBAAqB,GAAGL,iBAA5B;;EAGA,IAAIM,SAAS,GAAG,EAAhB;EACA,IAAIC,UAAU,GAAG,EAAjB;;EAGA,IAAIC,aAAa,GAAG,CAApB;EAKA,IAAIC,WAAW,GAAG,IAAlB;EACA,IAAIC,oBAAoB,GAAGxB,cAA3B;;EAGA,IAAIyB,gBAAgB,GAAG,KAAvB;EAEA,IAAIC,uBAAuB,GAAG,KAA9B;EACA,IAAIC,sBAAsB,GAAG,KAA7B;;EAGA,MAAMC,eAAe,GAAG,OAAOC,UAAP,KAAsB,UAAtB,GAAmCA,UAAnC,GAAgD,IAAxE;EACA,MAAMC,iBAAiB,GACrB,OAAOC,YAAP,KAAwB,UAAxB,GAAqCA,YAArC,GAAoD,IADtD;EAEA,MAAMC,iBAAiB,GACrB,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqD,IADvD;;EAGA,MAAMC,cAAc,GAClB,OAAOC,SAAP,KAAqB,WAArB,IACAA,SAAS,CAACC,UAAV,KAAyB5N,SADzB,IAEA2N,SAAS,CAACC,UAAV,CAAqBF,cAArB,KAAwC1N,SAFxC,GAGI2N,SAAS,CAACC,UAAV,CAAqBF,cAArB,CAAoCpM,IAApC,CAAyCqM,SAAS,CAACC,UAAnD,CAHJ,GAII,IALN;AAOA;EAEA,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;EAClC;EACA,MAAIC,KAAK,GAAGzD,IAAI,CAACuC,UAAD,CAAhB;;EACA,SAAOkB,KAAK,KAAK,IAAjB,EAAuB;EACrB,QAAIA,KAAK,CAACxQ,QAAN,KAAmB,IAAvB,EAA6B;EAC3B;EACAgN,MAAAA,GAAG,CAACsC,UAAD,CAAH;EACD,KAHD,MAGO,IAAIkB,KAAK,CAACC,SAAN,IAAmBF,WAAvB,EAAoC;EACzC;EACAvD,MAAAA,GAAG,CAACsC,UAAD,CAAH;EACAkB,MAAAA,KAAK,CAAC3C,SAAN,GAAkB2C,KAAK,CAACE,cAAxB;EACAzK,MAAAA,IAAI,CAACoJ,SAAD,EAAYmB,KAAZ,CAAJ;EAKD,KATM,MASA;EACL;EACA;EACD;;EACDA,IAAAA,KAAK,GAAGzD,IAAI,CAACuC,UAAD,CAAZ;EACD;EACF;;EAED,SAASqB,aAAT,CAAuBJ,WAAvB,EAAoC;EAClCX,EAAAA,sBAAsB,GAAG,KAAzB;EACAU,EAAAA,aAAa,CAACC,WAAD,CAAb;;EAEA,MAAI,CAACZ,uBAAL,EAA8B;EAC5B,QAAI5C,IAAI,CAACsC,SAAD,CAAJ,KAAoB,IAAxB,EAA8B;EAC5BM,MAAAA,uBAAuB,GAAG,IAA1B;EACAiB,MAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD,KAHD,MAGO;EACL,YAAMC,UAAU,GAAG/D,IAAI,CAACuC,UAAD,CAAvB;;EACA,UAAIwB,UAAU,KAAK,IAAnB,EAAyB;EACvBC,QAAAA,kBAAkB,CAACJ,aAAD,EAAgBG,UAAU,CAACL,SAAX,GAAuBF,WAAvC,CAAlB;EACD;EACF;EACF;EACF;;EAED,SAASM,SAAT,CAAmBG,gBAAnB,EAAqClC,WAArC,EAAkD;AAChD;;EAKAa,EAAAA,uBAAuB,GAAG,KAA1B;;EACA,MAAIC,sBAAJ,EAA4B;EAC1B;EACAA,IAAAA,sBAAsB,GAAG,KAAzB;EACAqB,IAAAA,iBAAiB;EAClB;;EAEDvB,EAAAA,gBAAgB,GAAG,IAAnB;EACA,QAAMwB,qBAAqB,GAAGzB,oBAA9B;;EACA,MAAI;EACF,QAAI/C,eAAJ,EAAqB;EACnB,UAAI;EACF,eAAOyE,QAAQ,CAACH,gBAAD,EAAmBlC,WAAnB,CAAf;EACD,OAFD,CAEE,OAAO3F,KAAP,EAAc;EACd,YAAIqG,WAAW,KAAK,IAApB,EAA0B;EACxB,gBAAMe,WAAW,GAAGhC,cAAc,EAAlC;EACAH,UAAAA,eAAe,CAACoB,WAAD,EAAce,WAAd,CAAf;EACAf,UAAAA,WAAW,CAAC4B,QAAZ,GAAuB,KAAvB;EACD;;EACD,cAAMjI,KAAN;EACD;EACF,KAXD,MAWO;EACL;EACA,aAAOgI,QAAQ,CAACH,gBAAD,EAAmBlC,WAAnB,CAAf;EACD;EACF,GAhBD,SAgBU;EACRU,IAAAA,WAAW,GAAG,IAAd;EACAC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACAxB,IAAAA,gBAAgB,GAAG,KAAnB;EAKD;EACF;;EAED,SAASyB,QAAT,CAAkBH,gBAAlB,EAAoClC,WAApC,EAAiD;EAC/C,MAAIyB,WAAW,GAAGzB,WAAlB;EACAwB,EAAAA,aAAa,CAACC,WAAD,CAAb;EACAf,EAAAA,WAAW,GAAGzC,IAAI,CAACsC,SAAD,CAAlB;;EACA,SACEG,WAAW,KAAK,IAAhB,IACA,EAAE/C,wBAAwB,CAA1B,CAFF,EAGE;EACA,QACE+C,WAAW,CAACkB,cAAZ,GAA6BH,WAA7B,KACC,CAACS,gBAAD,IAAqBK,iBAAiB,EADvC,CADF,EAGE;EACA;EACA;EACD;;EACD,UAAMrR,QAAQ,GAAGwP,WAAW,CAACxP,QAA7B;;EACA,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;EAClCwP,MAAAA,WAAW,CAACxP,QAAZ,GAAuB,IAAvB;EACAyP,MAAAA,oBAAoB,GAAGD,WAAW,CAAC8B,aAAnC;EACA,YAAMC,sBAAsB,GAAG/B,WAAW,CAACkB,cAAZ,IAA8BH,WAA7D;;EAIA,YAAMiB,oBAAoB,GAAGxR,QAAQ,CAACuR,sBAAD,CAArC;EACAhB,MAAAA,WAAW,GAAGhC,cAAc,EAA5B;;EACA,UAAI,OAAOiD,oBAAP,KAAgC,UAApC,EAAgD;EAC9ChC,QAAAA,WAAW,CAACxP,QAAZ,GAAuBwR,oBAAvB;EAID,OALD,MAKO;AACL;EAIA,YAAIhC,WAAW,KAAKzC,IAAI,CAACsC,SAAD,CAAxB,EAAqC;EACnCrC,UAAAA,GAAG,CAACqC,SAAD,CAAH;EACD;EACF;;EACDiB,MAAAA,aAAa,CAACC,WAAD,CAAb;EACD,KAxBD,MAwBO;EACLvD,MAAAA,GAAG,CAACqC,SAAD,CAAH;EACD;;EACDG,IAAAA,WAAW,GAAGzC,IAAI,CAACsC,SAAD,CAAlB;EACD,GA5C8C;;;EA8C/C,MAAIG,WAAW,KAAK,IAApB,EAA0B;EACxB,WAAO,IAAP;EACD,GAFD,MAEO;EACL,UAAMsB,UAAU,GAAG/D,IAAI,CAACuC,UAAD,CAAvB;;EACA,QAAIwB,UAAU,KAAK,IAAnB,EAAyB;EACvBC,MAAAA,kBAAkB,CAACJ,aAAD,EAAgBG,UAAU,CAACL,SAAX,GAAuBF,WAAvC,CAAlB;EACD;;EACD,WAAO,KAAP;EACD;EACF;;EAED,SAASkB,wBAAT,CAAkCH,aAAlC,EAAiDI,YAAjD,EAA+D;EAC7D,UAAQJ,aAAR;EACE,SAAKvD,iBAAL;EACA,SAAKC,oBAAL;EACA,SAAKC,cAAL;EACA,SAAKC,WAAL;EACA,SAAKC,YAAL;EACE;;EACF;EACEmD,MAAAA,aAAa,GAAGrD,cAAhB;EARJ;;EAWA,MAAIiD,qBAAqB,GAAGzB,oBAA5B;EACAA,EAAAA,oBAAoB,GAAG6B,aAAvB;;EAEA,MAAI;EACF,WAAOI,YAAY,EAAnB;EACD,GAFD,SAEU;EACRjC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF;;EAED,SAASS,aAAT,CAAuBD,YAAvB,EAAqC;EACnC,MAAIJ,aAAJ;;EACA,UAAQ7B,oBAAR;EACE,SAAK1B,iBAAL;EACA,SAAKC,oBAAL;EACA,SAAKC,cAAL;EACE;EACAqD,MAAAA,aAAa,GAAGrD,cAAhB;EACA;;EACF;EACE;EACAqD,MAAAA,aAAa,GAAG7B,oBAAhB;EACA;EAVJ;;EAaA,MAAIyB,qBAAqB,GAAGzB,oBAA5B;EACAA,EAAAA,oBAAoB,GAAG6B,aAAvB;;EAEA,MAAI;EACF,WAAOI,YAAY,EAAnB;EACD,GAFD,SAEU;EACRjC,IAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF;;EAED,SAASU,qBAAT,CAA+B5R,QAA/B,EAAyC;EACvC,MAAI6R,mBAAmB,GAAGpC,oBAA1B;EACA,SAAO,YAAW;EAChB;EACA,QAAIyB,qBAAqB,GAAGzB,oBAA5B;EACAA,IAAAA,oBAAoB,GAAGoC,mBAAvB;;EAEA,QAAI;EACF,aAAO7R,QAAQ,CAACyH,KAAT,CAAe,IAAf,EAAqBjE,SAArB,CAAP;EACD,KAFD,SAEU;EACRiM,MAAAA,oBAAoB,GAAGyB,qBAAvB;EACD;EACF,GAVD;EAWD;;EAED,SAASY,yBAAT,CAAmCR,aAAnC,EAAkDtR,QAAlD,EAA4D+R,OAA5D,EAAqE;EACnE,MAAIxB,WAAW,GAAGhC,cAAc,EAAhC;EAEA,MAAIkC,SAAJ;;EACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA/C,EAAqD;EACnD,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;;EACA,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAAzC,EAA4C;EAC1CvB,MAAAA,SAAS,GAAGF,WAAW,GAAGyB,KAA1B;EACD,KAFD,MAEO;EACLvB,MAAAA,SAAS,GAAGF,WAAZ;EACD;EACF,GAPD,MAOO;EACLE,IAAAA,SAAS,GAAGF,WAAZ;EACD;;EAED,MAAI0B,OAAJ;;EACA,UAAQX,aAAR;EACE,SAAKvD,iBAAL;EACEkE,MAAAA,OAAO,GAAGjD,0BAAV;EACA;;EACF,SAAKhB,oBAAL;EACEiE,MAAAA,OAAO,GAAGhD,8BAAV;EACA;;EACF,SAAKd,YAAL;EACE8D,MAAAA,OAAO,GAAG7C,qBAAV;EACA;;EACF,SAAKlB,WAAL;EACE+D,MAAAA,OAAO,GAAG9C,oBAAV;EACA;;EACF,SAAKlB,cAAL;EACA;EACEgE,MAAAA,OAAO,GAAG/C,uBAAV;EACA;EAhBJ;;EAmBA,MAAIwB,cAAc,GAAGD,SAAS,GAAGwB,OAAjC;EAEA,MAAIC,OAAO,GAAG;EACZpE,IAAAA,EAAE,EAAEyB,aAAa,EADL;EAEZvP,IAAAA,QAFY;EAGZsR,IAAAA,aAHY;EAIZb,IAAAA,SAJY;EAKZC,IAAAA,cALY;EAMZ7C,IAAAA,SAAS,EAAE,CAAC;EANA,GAAd;;EAYA,MAAI4C,SAAS,GAAGF,WAAhB,EAA6B;EAC3B;EACA2B,IAAAA,OAAO,CAACrE,SAAR,GAAoB4C,SAApB;EACAxK,IAAAA,IAAI,CAACqJ,UAAD,EAAa4C,OAAb,CAAJ;;EACA,QAAInF,IAAI,CAACsC,SAAD,CAAJ,KAAoB,IAApB,IAA4B6C,OAAO,KAAKnF,IAAI,CAACuC,UAAD,CAAhD,EAA8D;EAC5D;EACA,UAAIM,sBAAJ,EAA4B;EAC1B;EACAqB,QAAAA,iBAAiB;EAClB,OAHD,MAGO;EACLrB,QAAAA,sBAAsB,GAAG,IAAzB;EACD,OAP2D;;;EAS5DmB,MAAAA,kBAAkB,CAACJ,aAAD,EAAgBF,SAAS,GAAGF,WAA5B,CAAlB;EACD;EACF,GAfD,MAeO;EACL2B,IAAAA,OAAO,CAACrE,SAAR,GAAoB6C,cAApB;EACAzK,IAAAA,IAAI,CAACoJ,SAAD,EAAY6C,OAAZ,CAAJ;EAMA;;;EACA,QAAI,CAACvC,uBAAD,IAA4B,CAACD,gBAAjC,EAAmD;EACjDC,MAAAA,uBAAuB,GAAG,IAA1B;EACAiB,MAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD;EACF;;EAED,SAAOqB,OAAP;EACD;;EAED,SAASC,uBAAT,GAAmC;AACjCC,EACD;;EAED,SAASC,0BAAT,GAAsC;AACpCD;EACA,MAAI,CAACzC,uBAAD,IAA4B,CAACD,gBAAjC,EAAmD;EACjDC,IAAAA,uBAAuB,GAAG,IAA1B;EACAiB,IAAAA,mBAAmB,CAACC,SAAD,CAAnB;EACD;EACF;;EAED,SAASyB,6BAAT,GAAyC;EACvC,SAAOvF,IAAI,CAACsC,SAAD,CAAX;EACD;;EAED,SAASkD,uBAAT,CAAiClE,IAAjC,EAAuC;AACrC,EASA;EACA;;;EACAA,EAAAA,IAAI,CAACrO,QAAL,GAAgB,IAAhB;EACD;;EAED,SAASwS,gCAAT,GAA4C;EAC1C,SAAO/C,oBAAP;EACD;;EAED,IAAIgD,oBAAoB,GAAG,KAA3B;EACA,IAAIC,qBAAqB,GAAG,IAA5B;EACA,IAAIC,aAAa,GAAG,CAAC,CAArB;EAGA;EACA;EACA;;EACA,IAAIC,aAAa,GAAGjG,YAApB;AACA,EAEA,IAAI8D,SAAS,GAAG,CAAC,CAAjB;AAEA;EAEA,SAASY,iBAAT,GAA6B;EAC3B,QAAMwB,WAAW,GAAGtE,cAAc,KAAKkC,SAAvC;;EACA,MAAIoC,WAAW,GAAGD,aAAlB,EAAiC;EAC/B;EACA;EACA,WAAO,KAAP;EACD,GAN0B;AAS3B;;EAiCA,SAAO,IAAP;EACD;;EAED,SAASE,YAAT,GAAwB;AACtB;EAUD;;EAED,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAC3B,MAAIA,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,GAArB,EAA0B;EACxB;EACAC,IAAAA,OAAO,CAAC,OAAD,CAAP,CACE,4DACE,0DAFJ;EAIA;EACD;;EACD,MAAID,GAAG,GAAG,CAAV,EAAa;EACXJ,IAAAA,aAAa,GAAGM,IAAI,CAACC,KAAL,CAAW,OAAOH,GAAlB,CAAhB;EACD,GAFD,MAEO;EACL;EACAJ,IAAAA,aAAa,GAAGjG,YAAhB;EACD;EACF;;EAED,MAAMyG,wBAAwB,GAAG,MAAM;EACrC,MAAIV,qBAAqB,KAAK,IAA9B,EAAoC;EAClC,UAAMnC,WAAW,GAAGhC,cAAc,EAAlC,CADkC;EAGlC;;EACAkC,IAAAA,SAAS,GAAGF,WAAZ;EACA,UAAMS,gBAAgB,GAAG,IAAzB,CALkC;EAQlC;EACA;EACA;EACA;EACA;;EACA,QAAIqC,WAAW,GAAG,IAAlB;;EACA,QAAI;EACFA,MAAAA,WAAW,GAAGX,qBAAqB,CAAC1B,gBAAD,EAAmBT,WAAnB,CAAnC;EACD,KAFD,SAEU;EACR,UAAI8C,WAAJ,EAAiB;EACf;EACA;EACAC,QAAAA,gCAAgC;EACjC,OAJD,MAIO;EACLb,QAAAA,oBAAoB,GAAG,KAAvB;EACAC,QAAAA,qBAAqB,GAAG,IAAxB;EACD;EACF;EACF,GA1BD,MA0BO;EACLD,IAAAA,oBAAoB,GAAG,KAAvB;EACD,GA7BoC;AA+BrC,EAED,CAjCD;;EAmCA,IAAIa,gCAAJ;;EACA,IAAI,OAAOrD,iBAAP,KAA6B,UAAjC,EAA6C;EAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAqD,EAAAA,gCAAgC,GAAG,MAAM;EACvCrD,IAAAA,iBAAiB,CAACmD,wBAAD,CAAjB;EACD,GAFD;EAGD,CAfD,MAeO,IAAI,OAAOG,cAAP,KAA0B,WAA9B,EAA2C;EAChD;EACA;EACA,QAAMC,OAAO,GAAG,IAAID,cAAJ,EAAhB;EACA,QAAME,IAAI,GAAGD,OAAO,CAACE,KAArB;EACAF,EAAAA,OAAO,CAACG,KAAR,CAAcC,SAAd,GAA0BR,wBAA1B;;EACAE,EAAAA,gCAAgC,GAAG,MAAM;EACvCG,IAAAA,IAAI,CAACI,WAAL,CAAiB,IAAjB;EACD,GAFD;EAGD,CATM,MASA;EACL;EACAP,EAAAA,gCAAgC,GAAG,MAAM;EACvCzD,IAAAA,eAAe,CAACuD,wBAAD,EAA2B,CAA3B,CAAf;EACD,GAFD;EAGD;;EAED,SAASxC,mBAAT,CAA6B5Q,QAA7B,EAAuC;EACrC0S,EAAAA,qBAAqB,GAAG1S,QAAxB;;EACA,MAAI,CAACyS,oBAAL,EAA2B;EACzBA,IAAAA,oBAAoB,GAAG,IAAvB;EACAa,IAAAA,gCAAgC;EACjC;EACF;;EAED,SAASvC,kBAAT,CAA4B/Q,QAA5B,EAAsCsO,EAAtC,EAA0C;EACxCqE,EAAAA,aAAa,GAAG9C,eAAe,CAAC,MAAM;EACpC7P,IAAAA,QAAQ,CAACuO,cAAc,EAAf,CAAR;EACD,GAF8B,EAE5BD,EAF4B,CAA/B;EAGD;;EAED,SAAS2C,iBAAT,GAA6B;EAC3BlB,EAAAA,iBAAiB,CAAC4C,aAAD,CAAjB;EACAA,EAAAA,aAAa,GAAG,CAAC,CAAjB;EACD;;EAED,MAAMmB,qBAAqB,GAAGhB,YAA9B;AAEA,EAqBO,MAAMiB,kBAAkB,GAAGrH,CAK9B,IALG;;;;;;;;;;;;;;;;;;;;;;;;;;;EC/lBP,MAAML,sBAAoB,GAAG;EAC3BrC,EAAAA,sBAD2B;EAE3B/H,EAAAA,iBAF2B;EAG3BiK,EAAAA,uBAH2B;EAK3B;EACA;EACA;EACA;EACA;EACA8H,EAAAA;EAV2B,CAA7B;;AAkBA,EAAyB;EACvB3H,EAAAA,sBAAoB,CAACD,eAArB,GAAuCA,eAAvC;EACD;;ECvBM,SAAS6H,eAAT,CACLC,KADK,EAELnC,OAFK,EAGL;EACA,QAAMoC,cAAc,GAAGjI,uBAAuB,CAACC,UAA/C;EACAD,EAAAA,uBAAuB,CAACC,UAAxB,GAAqC,EAArC;AACA;EAaA,MAAI;EACF+H,IAAAA,KAAK;EACN,GAFD,SAEU;EACRhI,IAAAA,uBAAuB,CAACC,UAAxB,GAAqCgI,cAArC;EAeD;EACF;;ECnCM,SAASC,GAAT,CAAgBpU,QAAhB,EAA8D;EACnE,EAsIO;EACL,UAAM,IAAIkB,KAAJ,CAAU,0DAAV,CAAN;EACD;EACF;;QCpFKiC,eAAa,GAAGkR,CAAwCC;AAC9D,QAAMhQ,cAAY,GAAG+P,CAAuCE;AAC5D,QAAM1Q,eAAa,GAAGwQ,CAAwCG;AAE9D,QAAMC,QAAQ,GAAG;EACfC,OAAAA,WADe;EAEfC,WAAAA,eAFe;EAGfxN,SAAAA,aAHe;EAIfO,EAAAA,OAJe;EAKfkN,QAAAA;EALe,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
